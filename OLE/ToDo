# The following items WILL BE done in the near future :-)

-- Win32::OLE::Const::_Load use stash of "Win32::OLE" (???)

- ReportOleError: use LOCALE_SYSTEM_DEFAULT for FormatMessage ???

- GetWinOleEnumObject routine for error checking etc.

- fix [[1,2]] array "buglette"

- In() function to Win32::OLE::Enum?

- Win32::OLE::Const: return inlined subs instead of scalar variables

- baseIndex stuff
  CheckOleError for GetHashedDispid?

- Check for memory leaks once more :-)

- BYREF variants

- SAFEARRAY creation/access methods for Variants

- Documentation:
  CP, LCID
  Warn
  warning about reblessing Win32::OLE objects
  Excel: Don't change lcid on the fly!

- Win32::OLE::Variant needs a LastError method too!

- Test suite:
  Variants
  BYREF variants
  SAFEARRAYs
  Unicode
  Compatibility module

# This file contains random thoughts and notes about what might be
# changed in future versions of Win32::OLE.
# Note: No particular order, no promises!

- Cleanup Win32::OLE namespace

- Provide access to instance data for subclassing.
  Win32::OLE objects use the tied hash mechanism for set/getproperty,
  so the standard way of accessing instance data is not available.

- Call SUBCLASS::__new__ for internally created objects, so that the subclass
  can do additional initialisation? Function name?

- TypeInfo support
  - Generic Typelib stuff
  - Validate method/property parameters
  - Automatically assign new OLE objects to a subclass, if that
    namespace exists and it "isa" Win32::OLE subclass.
    (e.g. automaticall assign all Excel chart objects to Excel::Chart)

- Add some Array helper stuff to Win32::OLE::Variant

- Better error messages
  Use Grahams Error.pm module when it has been accepted by p5p.

- Implement an error API that offers control over exceptional conditions
  (rather than simply croak()ing, which is considered "bad" for modules)
  Perhaps this can ride over a standard Exception package when it becomes
  available.

- Caching of method dispids should be done on class basis, not per object.

- Add a testcase for the "unnamed" method call to ole.t
  Add testcases for the Win32::OLE::Variant class

- Create OLE tutorial with better examples

- Make OLE.xs thread-safe

- Provide support for OLE events, if possible
  - Callbacks in a separate thread
  - Through some kind of event loop
