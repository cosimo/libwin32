rm -f win32/config.H
rm -f win32/config.w32
patch -p1 -N <<'__END_OF_PATCH__'
diff -ur perl5.004/EXTERN.h perl5.004-bc/EXTERN.h
--- perl5.004/EXTERN.h	Wed May 21 11:19:20 1997
+++ perl5.004-bc/EXTERN.h	Mon May 19 13:27:04 1997
@@ -23,24 +23,17 @@
 #  define EXTCONST globalref
 #  define dEXTCONST globaldef {"$GLOBAL_RO_VARS"} readonly
 #else
-#  if defined(_MSC_VER) && defined(_WIN32)
+#  if (defined(_MSC_VER) && defined(_WIN32)) || (defined(__BORLANDC__) && defined(__WIN32__))
 #    ifdef PERLDLL
-#      define EXT __declspec(dllexport)
+#      define EXT extern __declspec(dllexport)
 #      define dEXT 
-#      define EXTCONST __declspec(dllexport) const
+#      define EXTCONST extern __declspec(dllexport) const
 #      define dEXTCONST const
 #    else
-#      if defined(__cplusplus)
-#        define EXT extern __declspec(dllimport)
-#        define dEXT 
-#        define EXTCONST extern __declspec(dllimport) const
-#        define dEXTCONST const
-#      else
-#        define EXT __declspec(dllimport)
-#        define dEXT 
-#        define EXTCONST __declspec(dllimport) const
-#        define dEXTCONST const
-#      endif
+#      define EXT extern __declspec(dllimport)
+#      define dEXT 
+#      define EXTCONST extern __declspec(dllimport) const
+#      define dEXTCONST const
 #    endif
 #  else
 #    define EXT extern
diff -ur perl5.004/README.win32 perl5.004-bc/README.win32
--- perl5.004/README.win32	Wed May 21 11:19:20 1997
+++ perl5.004-bc/README.win32	Tue May 27 15:45:20 1997
@@ -9,12 +9,13 @@
 =head1 SYNOPSIS
 
 These are instructions for building Perl under Windows NT (versions
-3.51 or 4.0), using Visual C++ (versions 2.0 through 5.0).  Currently,
-this port may also build under Windows95, but you can expect problems
-stemming from the unmentionable command shell that infests that
-platform.  Note this caveat is only about B<building> perl.  Once
-built, you should be able to B<use> it on either Win32 platform (modulo
-the problems arising from the inferior command shell).
+3.51 or 4.0), using Visual C++ (versions 2.0 through 5.0) or Borland
+C++ (version 5.x).  Currently, this port may also build under Windows95,
+but you can expect problems stemming from the unmentionable command
+shell that infests that platform.  Note this caveat is only about
+B<building> perl.  Once built, you should be able to B<use> it on
+either Win32 platform (modulo the problems arising from the inferior
+command shell).
 
 =head1 DESCRIPTION
 
@@ -55,7 +56,7 @@
 
 =over 4
 
-=item *
+=item Command Shell
 
 Use the default "cmd" shell that comes with NT.  In particular, do
 *not* use the 4DOS/NT shell.  The Makefile has commands that are not
@@ -63,14 +64,38 @@
 incompatibilites with the default shell that comes with Windows95,
 so building under Windows95 should be considered "unsupported".
 
-=item *
+=item Borland C++
+
+If you are using the Borland compiler, you will need dmake, a freely
+available make that has very nice macro features and parallelability.
+(The make that Borland supplies is seriously crippled, and will not
+work for MakeMaker builds--if you *have* to bug someone about this,
+I suggest you bug Borland to fix their make :)
+
+A port of dmake for win32 platforms is available from
+"http://www-personal.umich.edu/~gsar/dmake-4.0-win32.tar.gz".
+Fetch and install dmake somewhere on your path.  Also make sure you
+copy the Borland dmake.ini file to some location where you keep
+*.ini files.  If you use the binary that comes with the above port, you
+will need to set INIT in your environment to the directory where you
+put the dmake.ini file.
+
+=item Microsoft Visual C++
 
+The NMAKE that comes with Visual C++ will suffice for building.
 If you did not choose to always initialize the Visual C++ compilation
 environment variables when you installed Visual C++ on your system, you
 will need to run the VCVARS32.BAT file usually found somewhere like
 C:\MSDEV4.2\BIN.  This will set your build environment.
 
-=item *
+You can also use dmake to build using Visual C++, provided: you
+copied the dmake.ini for Visual C++; set INIT to point to the
+directory where you put it, as above; and edit win32/config.vc
+and change "make=nmake" to "make=dmake".  The last step is only
+essential if you want to use dmake to be your default make for
+building extensions using MakeMaker.
+
+=item Permissions
 
 Depending on how you extracted the distribution, you have to make sure
 some of the files are writable by you.  The easiest way to make sure of
@@ -92,41 +117,51 @@
 
 Make sure you are in the "win32" subdirectory under the perl toplevel.
 This directory contains a "Makefile" that will work with
-versions of NMAKE that come with Visual C++ ver. 2.0 and above.
+versions of NMAKE that come with Visual C++ ver. 2.0 and above, and
+a dmake "makefile.mk" that will work for both Borland and Visual C++
+builds.  The defaults in the dmake makefile are setup to build using the
+Borland compiler.
 
 =item *
 
-Edit the Makefile and change the values of INST_DRV and INST_TOP
-if you want perl to be installed in a location other than "C:\PERL".
+Edit the Makefile (or makefile.mk, if using dmake) and change the values
+of INST_DRV and INST_TOP if you want perl to be installed in a location
+other than "C:\PERL".  If you are using Visual C++ ver. 2.0, uncomment
+the line that sets "CCTYPE=MSVC20".
 
-If you want to build a perl capable of running on the Windows95
-platform, you will have to uncomment the line that sets "RUNTIME=-MT".
-(The default settings use the Microsoft-recommended -MD option for
-compiling, which uses the DLL version of the C RunTime Library.  There
-currently exists a bug in the Microsoft CRTL that causes failure of
-the socket calls only on the Windows95 platform.  This bug cannot be
-worked around if the DLL version of the CRTL is used, which is why you
-need to enable the -MT flag.)  Perl compiled with -MT can be used on
-both Windows NT and Windows95.
+For the Borland build, you will have to set edit CCHOME to point to
+wherever you installed your compiler.
 
-If you are using Visual C++ ver. 2.0, uncomment the line that
-sets "CCTYPE=MSVC20".
-
 =item *
 
-Type "nmake".
+Type "nmake" (or "dmake" if you are using that make).
 
 This should build everything.  Specifically, it will create perl.exe,
 perl.dll, and perlglob.exe at the perl toplevel, and various other
 extension dll's under the lib\auto directory.  If the build fails for
 any reason, make sure you have done the previous steps correctly.
 
+When building using Visual C++, a perl95.exe will also get built.  This
+executable is only needed on Windows95, and should be used instead of
+perl.exe, and then only if you want sockets to work properly on Windows95.
+This is necessitated by a bug in the Microsoft C Runtime that cannot be
+worked around in the "normal" perl.exe.  Again, if this bugs you, please
+bug Microsoft :). perl95.exe gets built with its own private copy of the
+C Runtime that is not accessible to extensions (which see the DLL version
+of the CRT).  Be aware, therefore, that this perl95.exe will have
+esoteric problems with extensions like perl/Tk that themselves use the C
+Runtime heavily, or want to free() pointers malloc()-ed by perl.
+
+You can avoid the perl95.exe problems completely if you use Borland
+C++ for building perl (perl95.exe is not needed and will not be built
+in that case).
+
 =back
 
 =head2 Testing
 
-Type "nmake test".  This will run most of the tests from the
-testsuite (many tests will be skipped, and but no test should fail).
+Type "nmake test" (or "dmake test").  This will run most of the tests from
+the testsuite (many tests will be skipped, and but no test should fail).
 
 If some tests do fail, it may be because you are using a different command
 shell than the native "cmd.exe".
@@ -135,13 +170,13 @@
 
 =head2 Installation
 
-Type "nmake install".  This will put the newly built perl and the
-libraries under "C:\perl" (actually whatever you set C<INST_TOP> to
-in the Makefile).  It will also install the pod documentation under
-C<$INST_TOP\lib\pod> and HTML versions of the same under
-C<$INST_TOP\lib\pod\html>.  To use the Perl you just installed, set your
-PATH environment variable to "C:\perl\bin" (or C<$INST_TOP\bin>, if you
-changed the default as above).
+Type "nmake install" (or "dmake install").  This will put the newly
+built perl and the libraries under "C:\perl" (actually whatever you set
+C<INST_TOP> to in the Makefile).  It will also install the pod
+documentation under C<$INST_TOP\lib\pod> and HTML versions of the same
+under C<$INST_TOP\lib\pod\html>.  To use the Perl you just installed,
+set your PATH environment variable to "C:\perl\bin" (or C<$INST_TOP\bin>,
+if you changed the default as above).
 
 =head2 Usage Hints
 
@@ -161,6 +196,28 @@
 Sometime in the future, some of the configuration information
 for perl will be moved into the Windows registry.
 
+=item File Globbing
+
+By default, perl spawns an external program to do file globbing.
+The install process installs both a perlglob.exe and a perlglob.bat
+that perl can use for this purpose.  Note that with the default
+installation, perlglob.exe will be found by the system before
+perlglob.bat.
+
+perlglob.exe relies on the argv expansion done by the C Runtime of
+the particular compiler you used, and therefore behaves very
+differently depending on the Runtime used to build it.  To preserve
+compatiblity, perlglob.bat (a perl script/module that can be
+used portably) is installed.  Besides being portable, perlglob.bat
+also offers enhanced globbing functionality.
+
+If you want perl to use perlglob.bat instead of perlglob.exe, just
+delete perlglob.exe from the install location (or move it somewhere
+perl cannot find).  Using File::DosGlob.pm (which is the same
+as perlglob.bat) to override the internal CORE::glob() works about 10
+times faster than spawing perlglob.exe, and you should take this
+approach when writing new modules.  See File::DosGlob for details.
+
 =item Using perl from the command line
 
 If you are accustomed to using perl from various command-line
@@ -213,20 +270,12 @@
 
     perl -e "print 'foo'; print STDERR 'bar'" 1> blurch
 
-This prints "foo" and writes "bar" to the file "blurch":
-
-    perl -e "print 'foo'; print STDERR 'bar'" 2> blurch
-
 This pipes "foo" to the "less" pager and prints "bar" on the console:
 
     perl -e "print 'foo'; print STDERR 'bar'" | less
 
 This pipes "foo\nbar\n" to the less pager:
 
-    perl -le "print 'foo'; print STDERR 'bar'" |& less
-
-This does the same thing as the above:
-
     perl -le "print 'foo'; print STDERR 'bar'" 2>&1 | less
 
 This pipes "foo" to the pager and writes "bar" in the file "blurch":
@@ -260,7 +309,7 @@
 you have set up the environment for the compiler for command-line
 compilation.
 
-If a module does not build for some reason, carefully look at
+If a module does not build for some reason, look carefully for
 why it failed, and report problems to the module author.  If
 it looks like the extension building support is at fault, report
 that with full details of how the build failed using the perlbug
@@ -314,15 +363,23 @@
 
 =head1 BUGS AND CAVEATS
 
-This port has not been tested as extensively as we'd like, and
-therefore should be considered beta quality software.  You should
-expect changes in virtually all of these areas: build process,
-installation structure, supported utilities/modules, and supported
-perl functionality.  In particular, functionality specific to the
-Win32 environment may ultimately be supported as either core modules
-or extensions.  This means that you should be prepared to recompile
-extensions when binary incompatibilites arise due to changes in the
-internal structure of the code.
+This port should be considered beta quality software at the present
+time because some details are still in flux and there may be
+changes in any of these areas: build process, installation structure,
+supported utilities/modules, and supported perl functionality.
+In particular, functionality specific to the Win32 environment may
+ultimately be supported as either core modules or extensions.  This
+means that you should be prepared to recompile extensions when binary
+incompatibilites arise due to changes in the internal structure of
+the code.
+
+The DLLs produced by the two supported compilers are incompatible
+with each other due to the conventions they use to export symbols,
+and due to differences in the Runtime libraries that they provide.
+This means that extension binaries built under either compiler will
+only work with the perl binaries built under the same compiler.
+If you know of a robust, freely available C Runtime that can
+be used under win32, let us know.
 
 If you have had prior exposure to Perl on Unix platforms, you will notice
 this port exhibits behavior different from what is documented.  Most of the
@@ -382,11 +439,15 @@
 =item *
 
 File globbing may not behave as on Unix platforms.  In particular,
-globbing does not understand wildcards in the pathname component,
-but only in the filename component.  In other words, something like
-"print <*/*.pl>" will not print all the perl scripts in all the
-subdirectories one level under the current one (like it does on
-UNIX platforms).
+if you don't use perlglob.bat for globbing, it will understand
+wildcards only in the filename component (and not in the pathname).
+In other words, something like "print <*/*.pl>" will not print all the
+perl scripts in all the subdirectories one level under the current one
+(like it does on UNIX platforms).  perlglob.exe is also dependent on
+the particular implementation of wildcard expansion in the vendor
+libraries used to build it (which varies wildly at the present time).
+Using perlglob.bat (or File::DosGlob) avoids these limitations, but
+still only provides DOS semantics (read "warts") for globbing.
 
 =back
 
@@ -398,11 +459,11 @@
 
 =over 4
 
-=item Gary Ng <F<71564.1743@CompuServe.COM>>
+Gary Ng E<lt>71564.1743@CompuServe.COME<gt>
 
-=item Gurusamy Sarathy <F<gsar@umich.edu>>
+Gurusamy Sarathy E<lt>gsar@umich.eduE<gt>
 
-=item Nick Ing-Simmons <F<nick@ni-s.u-net.com>>
+Nick Ing-Simmons E<lt>nick@ni-s.u-net.comE<gt>
 
 =back
 
@@ -419,6 +480,9 @@
 Nick Ing-Simmons and Gurusamy Sarathy have made numerous and
 sundry hacks since then.
 
-Last updated: 15 May 1997
+Borland support was added, post 5.004-release (Gurusamy Sarathy).
 
+Last updated: 28 May 1997
+
 =cut
+
diff -ur perl5.004/doio.c perl5.004-bc/doio.c
--- perl5.004/doio.c	Wed May 21 11:19:20 1997
+++ perl5.004-bc/doio.c	Sat May 24 21:05:18 1997
@@ -34,7 +34,7 @@
 #endif
 
 #ifdef I_UTIME
-#  ifdef WIN32
+#  ifdef _MSC_VER
 #    include <sys/utime.h>
 #  else
 #    include <utime.h>
@@ -481,7 +481,10 @@
 #ifdef HAS_FCHMOD
 		(void)fchmod(lastfd,filemode);
 #else
+#  if !(defined(WIN32) && defined(__BORLANDC__))
+		/* Borland runtime creates a readonly file! */
 		(void)chmod(oldname,filemode);
+#  endif
 #endif
 		if (fileuid != statbuf.st_uid || filegid != statbuf.st_gid) {
 #ifdef HAS_FCHOWN
diff -ur perl5.004/ext/Fcntl/Fcntl.pm perl5.004-bc/ext/Fcntl/Fcntl.pm
--- perl5.004/ext/Fcntl/Fcntl.pm	Wed May 21 11:19:20 1997
+++ perl5.004-bc/ext/Fcntl/Fcntl.pm	Sat May 24 21:40:58 1997
@@ -50,6 +50,7 @@
      O_APPEND O_NONBLOCK
      O_NDELAY O_DEFER
      O_RDONLY O_RDWR O_WRONLY
+     O_BINARY O_TEXT
      O_EXLOCK O_SHLOCK O_ASYNC O_DSYNC O_RSYNC O_SYNC
      F_SETOWN F_GETOWN
      );
diff -ur perl5.004/ext/SDBM_File/Makefile.PL perl5.004-bc/ext/SDBM_File/Makefile.PL
--- perl5.004/ext/SDBM_File/Makefile.PL	Wed May 21 11:19:22 1997
+++ perl5.004-bc/ext/SDBM_File/Makefile.PL	Mon May 26 15:43:52 1997
@@ -5,11 +5,11 @@
 #	config, all, clean, realclean and sdbm/Makefile
 # which perform the corresponding actions in the subdirectory.
 
-$define = ($^O eq 'MSWin32') ? '/D "MSDOS"' : '';
+$define = ($^O eq 'MSWin32') ? '-DMSDOS' : '';
 
 WriteMakefile(
     NAME	=> 'SDBM_File',
-    MYEXTLIB => 'sdbm/libsdbm$(LIB_EXT)',
+    MYEXTLIB => 'sdbm'.($^O eq 'MSWin32' ? '\\' : '/').'libsdbm$(LIB_EXT)',
     MAN3PODS 	=> ' ', 	# Pods will be built by installman.
     XSPROTOARG => '-noprototypes', 		# XXX remove later?
     VERSION_FROM => 'SDBM_File.pm',
diff -ur perl5.004/gv.c perl5.004-bc/gv.c
--- perl5.004/gv.c	Wed May 21 11:19:22 1997
+++ perl5.004-bc/gv.c	Mon May 19 13:39:56 1997
@@ -19,7 +19,7 @@
 #include "EXTERN.h"
 #include "perl.h"
 
-EXT char rcsid[];
+EXT char rcsid[PERL_DUMMY_SIZE];
 
 GV *
 gv_AVadd(gv)
diff -ur perl5.004/lib/ExtUtils/Install.pm perl5.004-bc/lib/ExtUtils/Install.pm
--- perl5.004/lib/ExtUtils/Install.pm	Wed May 21 11:19:22 1997
+++ perl5.004-bc/lib/ExtUtils/Install.pm	Tue May 27 16:46:14 1997
@@ -37,6 +37,8 @@
 
     my(%hash) = %$hash;
     my(%pack, %write, $dir, $warn_permissions);
+    # -w doesn't work reliably on FAT dirs
+    $warn_permissions++ if $^O eq 'MSWin32';
     local(*DIR, *P);
     for (qw/read write/) {
 	$pack{$_}=$hash{$_};
diff -ur perl5.004/lib/ExtUtils/MM_Unix.pm perl5.004-bc/lib/ExtUtils/MM_Unix.pm
--- perl5.004/lib/ExtUtils/MM_Unix.pm	Wed May 21 11:19:22 1997
+++ perl5.004-bc/lib/ExtUtils/MM_Unix.pm	Mon May 26 15:41:18 1997
@@ -265,7 +265,7 @@
     push @m, '
 .C$(OBJ_EXT):
 	$(CCCMD) $(CCCDLFLAGS) -I$(PERL_INC) $(DEFINE) $*.C
-' if $^O ne 'os2';			# Case-specific
+' if $^O ne 'os2' and $^O ne 'MSWin32';		# Case-specific
     push @m, '
 .cpp$(OBJ_EXT):
 	$(CCCMD) $(CCCDLFLAGS) -I$(PERL_INC) $(DEFINE) $*.cpp
diff -ur perl5.004/lib/ExtUtils/MM_Win32.pm perl5.004-bc/lib/ExtUtils/MM_Win32.pm
--- perl5.004/lib/ExtUtils/MM_Win32.pm	Wed May 21 11:19:22 1997
+++ perl5.004-bc/lib/ExtUtils/MM_Win32.pm	Tue May 27 23:10:30 1997
@@ -18,7 +18,7 @@
 
 =cut 
 
-#use Config;
+use Config;
 #use Cwd;
 use File::Basename;
 require Exporter;
@@ -29,6 +29,10 @@
 $ENV{EMXSHELL} = 'sh'; # to run `commands`
 unshift @MM::ISA, 'ExtUtils::MM_Win32';
 
+$BORLAND = 1 if $Config{'cc'} =~ /^bcc/i;
+$DMAKE = 1 if $Config{'make'} =~ /^dmake/i;
+$NMAKE = 1 if $Config{'make'} =~ /^nmake/i;
+
 sub dlsyms {
     my($self,%attribs) = @_;
 
@@ -147,11 +151,166 @@
  $self->{'MV'}     = '$(PERL) -I$(PERL_ARCHLIB) -I$(PERL_LIB) -MExtUtils::Command -e mv';
  $self->{'NOOP'}   = 'rem';
  $self->{'TEST_F'} = '$(PERL) -I$(PERL_ARCHLIB) -I$(PERL_LIB) -MExtUtils::Command -e test_f';
- $self->{'LD'}     = 'link';
+ $self->{'LD'}     = $Config{'ld'} || 'link';
+ $self->{'AR'}     = $Config{'ar'} || 'lib';
+ $self->{'LDLOADLIBS'}
+    ||= ( $BORLAND
+          ? 'import32.lib cw32mti.lib '
+          : 'advapi32.lib user32.lib shell32.lib netapi32.lib ole32.lib '
+	    .'oleaut32.lib uuid.lib wsock32.lib mpr.lib winmm.lib version.lib '
+	) . ' odbc32.lib odbccp32.lib';
  $self->{'DEV_NULL'} = '> NUL';
  # $self->{'NOECHO'} = ''; # till we have it working
 }
 
+
+=item constants (o)
+
+Initializes lots of constants and .SUFFIXES and .PHONY
+
+=cut
+
+sub constants {
+    my($self) = @_;
+    my(@m,$tmp);
+
+    for $tmp (qw/
+
+	      AR_STATIC_ARGS NAME DISTNAME NAME_SYM VERSION
+	      VERSION_SYM XS_VERSION INST_BIN INST_EXE INST_LIB
+	      INST_ARCHLIB INST_SCRIPT PREFIX  INSTALLDIRS
+	      INSTALLPRIVLIB INSTALLARCHLIB INSTALLSITELIB
+	      INSTALLSITEARCH INSTALLBIN INSTALLSCRIPT PERL_LIB
+	      PERL_ARCHLIB SITELIBEXP SITEARCHEXP LIBPERL_A MYEXTLIB
+	      FIRST_MAKEFILE MAKE_APERL_FILE PERLMAINCC PERL_SRC
+	      PERL_INC PERL FULLPERL
+
+	      / ) {
+	next unless defined $self->{$tmp};
+	push @m, "$tmp = $self->{$tmp}\n";
+    }
+
+    push @m, qq{
+VERSION_MACRO = VERSION
+DEFINE_VERSION = -D\$(VERSION_MACRO)=\\\"\$(VERSION)\\\"
+XS_VERSION_MACRO = XS_VERSION
+XS_DEFINE_VERSION = -D\$(XS_VERSION_MACRO)=\\\"\$(XS_VERSION)\\\"
+};
+
+    push @m, qq{
+MAKEMAKER = $INC{'ExtUtils\MakeMaker.pm'}
+MM_VERSION = $ExtUtils::MakeMaker::VERSION
+};
+
+    push @m, q{
+# FULLEXT = Pathname for extension directory (eg Foo/Bar/Oracle).
+# BASEEXT = Basename part of FULLEXT. May be just equal FULLEXT. (eg Oracle)
+# ROOTEXT = Directory part of FULLEXT with leading slash (eg /DBD)  !!! Deprecated from MM 5.32  !!!
+# PARENT_NAME = NAME without BASEEXT and no trailing :: (eg Foo::Bar)
+# DLBASE  = Basename part of dynamic library. May be just equal BASEEXT.
+};
+
+    for $tmp (qw/
+	      FULLEXT BASEEXT PARENT_NAME DLBASE VERSION_FROM INC DEFINE OBJECT
+	      LDFROM LINKTYPE
+	      /	) {
+	next unless defined $self->{$tmp};
+	push @m, "$tmp = $self->{$tmp}\n";
+    }
+
+    push @m, "
+# Handy lists of source code files:
+XS_FILES= ".join(" \\\n\t", sort keys %{$self->{XS}})."
+C_FILES = ".join(" \\\n\t", @{$self->{C}})."
+O_FILES = ".join(" \\\n\t", @{$self->{O_FILES}})."
+H_FILES = ".join(" \\\n\t", @{$self->{H}})."
+MAN1PODS = ".join(" \\\n\t", sort keys %{$self->{MAN1PODS}})."
+MAN3PODS = ".join(" \\\n\t", sort keys %{$self->{MAN3PODS}})."
+";
+
+    for $tmp (qw/
+	      INST_MAN1DIR INSTALLMAN1DIR MAN1EXT INST_MAN3DIR INSTALLMAN3DIR MAN3EXT
+	      /) {
+	next unless defined $self->{$tmp};
+	push @m, "$tmp = $self->{$tmp}\n";
+    }
+
+    push @m, qq{
+.USESHELL :
+} if $DMAKE;
+
+    push @m, q{
+.NO_CONFIG_REC: Makefile
+} if $ENV{CLEARCASE_ROOT};
+
+    # why not q{} ? -- emacs
+    push @m, qq{
+# work around a famous dec-osf make(1) feature(?):
+makemakerdflt: all
+
+.SUFFIXES: .xs .c .C .cpp .cxx .cc \$(OBJ_EXT)
+
+# Nick wanted to get rid of .PRECIOUS. I don't remember why. I seem to recall, that
+# some make implementations will delete the Makefile when we rebuild it. Because
+# we call false(1) when we rebuild it. So make(1) is not completely wrong when it
+# does so. Our milage may vary.
+# .PRECIOUS: Makefile    # seems to be not necessary anymore
+
+.PHONY: all config static dynamic test linkext manifest
+
+# Where is the Config information that we are using/depend on
+CONFIGDEP = \$(PERL_ARCHLIB)\\Config.pm \$(PERL_INC)\\config.h
+};
+
+    my @parentdir = split(/::/, $self->{PARENT_NAME});
+    push @m, q{
+# Where to put things:
+INST_LIBDIR      = }. $self->catdir('$(INST_LIB)',@parentdir)        .q{
+INST_ARCHLIBDIR  = }. $self->catdir('$(INST_ARCHLIB)',@parentdir)    .q{
+
+INST_AUTODIR     = }. $self->catdir('$(INST_LIB)','auto','$(FULLEXT)')       .q{
+INST_ARCHAUTODIR = }. $self->catdir('$(INST_ARCHLIB)','auto','$(FULLEXT)')   .q{
+};
+
+    if ($self->has_link_code()) {
+	push @m, '
+INST_STATIC  = $(INST_ARCHAUTODIR)\$(BASEEXT)$(LIB_EXT)
+INST_DYNAMIC = $(INST_ARCHAUTODIR)\$(DLBASE).$(DLEXT)
+INST_BOOT    = $(INST_ARCHAUTODIR)\$(BASEEXT).bs
+';
+    } else {
+	push @m, '
+INST_STATIC  =
+INST_DYNAMIC =
+INST_BOOT    =
+';
+    }
+
+    $tmp = $self->export_list;
+    push @m, "
+EXPORT_LIST = $tmp
+";
+    $tmp = $self->perl_archive;
+    push @m, "
+PERL_ARCHIVE = $tmp
+";
+
+#    push @m, q{
+#INST_PM = }.join(" \\\n\t", sort values %{$self->{PM}}).q{
+#
+#PM_TO_BLIB = }.join(" \\\n\t", %{$self->{PM}}).q{
+#};
+
+    push @m, q{
+TO_INST_PM = }.join(" \\\n\t", sort keys %{$self->{PM}}).q{
+
+PM_TO_BLIB = }.join(" \\\n\t", %{$self->{PM}}).q{
+};
+
+    join('',@m);
+}
+
+
 sub path {
     local $^W = 1;
     my($self) = @_;
@@ -176,7 +335,7 @@
 
     my(@m);
     push(@m, <<'END');
-$(INST_STATIC): $(OBJECT) $(MYEXTLIB) $(INST_ARCHAUTODIR)/.exists
+$(INST_STATIC): $(OBJECT) $(MYEXTLIB) $(INST_ARCHAUTODIR)\.exists
 	$(RM_RF) $@
 END
     # If this extension has it's own library (eg SDBM_File)
@@ -184,21 +343,52 @@
     push(@m, "\t$self->{CP} \$(MYEXTLIB) \$\@\n") if $self->{MYEXTLIB};
 
     push @m,
-q{	lib -nologo -out:$@ $(OBJECT)
-	}.$self->{NOECHO}.q{echo "$(EXTRALIBS)" > $(INST_ARCHAUTODIR)/extralibs.ld
+q{	$(AR) }.($BORLAND ? '$@ $(OBJECT:^"+")' : '-out:$@ $(OBJECT)').q{
+	}.$self->{NOECHO}.q{echo "$(EXTRALIBS)" > $(INST_ARCHAUTODIR)\extralibs.ld
 	$(CHMOD) 755 $@
 };
 
 # Old mechanism - still available:
 
-    push @m, "\t$self->{NOECHO}".q{echo "$(EXTRALIBS)" >> $(PERL_SRC)/ext.libs}."\n\n"
+    push @m, "\t$self->{NOECHO}".q{echo "$(EXTRALIBS)" >> $(PERL_SRC)\ext.libs}."\n\n"
 	if $self->{PERL_SRC};
 
     push @m, $self->dir_target('$(INST_ARCHAUTODIR)');
     join('', "\n",@m);
 }
 
+=item dynamic_bs (o)
+
+Defines targets for bootstrap files.
+
+=cut
 
+sub dynamic_bs {
+    my($self, %attribs) = @_;
+    return '
+BOOTSTRAP =
+' unless $self->has_link_code();
+
+    return '
+BOOTSTRAP = '."$self->{BASEEXT}.bs".'
+
+# As Mkbootstrap might not write a file (if none is required)
+# we use touch to prevent make continually trying to remake it.
+# The DynaLoader only reads a non-empty file.
+$(BOOTSTRAP): '."$self->{MAKEFILE} $self->{BOOTDEP}".' $(INST_ARCHAUTODIR)\.exists
+	'.$self->{NOECHO}.'echo "Running Mkbootstrap for $(NAME) ($(BSLOADLIBS))"
+	'.$self->{NOECHO}.'$(PERL) "-I$(PERL_ARCHLIB)" "-I$(PERL_LIB)" \
+		-MExtUtils::Mkbootstrap \
+		-e "Mkbootstrap(\'$(BASEEXT)\',\'$(BSLOADLIBS)\');"
+	'.$self->{NOECHO}.'$(TOUCH) $(BOOTSTRAP)
+	$(CHMOD) 644 $@
+
+$(INST_BOOT): $(BOOTSTRAP) $(INST_ARCHAUTODIR)\.exists
+	'."$self->{NOECHO}$self->{RM_RF}".' $(INST_BOOT)
+	-'.$self->{CP}.' $(BOOTSTRAP) $(INST_BOOT)
+	$(CHMOD) 644 $@
+';
+}
 
 =item dynamic_lib (o)
 
@@ -212,7 +402,7 @@
 
     return '' unless $self->has_link_code;
 
-    my($otherldflags) = $attribs{OTHERLDFLAGS} || "";
+    my($otherldflags) = $attribs{OTHERLDFLAGS} || ($BORLAND ? 'c0d32.obj': '');
     my($inst_dynamic_dep) = $attribs{INST_DYNAMIC_DEP} || "";
     my($ldfrom) = '$(LDFROM)';
     my(@m);
@@ -222,11 +412,13 @@
 OTHERLDFLAGS = '.$otherldflags.'
 INST_DYNAMIC_DEP = '.$inst_dynamic_dep.'
 
-$(INST_DYNAMIC): $(OBJECT) $(MYEXTLIB) $(BOOTSTRAP) $(INST_ARCHAUTODIR)/.exists $(EXPORT_LIST) $(PERL_ARCHIVE) $(INST_DYNAMIC_DEP)
+$(INST_DYNAMIC): $(OBJECT) $(MYEXTLIB) $(BOOTSTRAP) $(INST_ARCHAUTODIR)\.exists $(EXPORT_LIST) $(PERL_ARCHIVE) $(INST_DYNAMIC_DEP)
 ');
 
-    push(@m,'	$(LD) -out:$@ $(LDDLFLAGS) '.$ldfrom.
-		' $(OTHERLDFLAGS) $(MYEXTLIB) $(PERL_ARCHIVE) $(LDLOADLIBS) -def:$(EXPORT_LIST)');
+    push(@m, $BORLAND ?
+q{	$(LD) $(LDDLFLAGS) $(OTHERLDFLAGS) }.$ldfrom.q{,$@,,$(MYEXTLIB) $(PERL_ARCHIVE) $(LDLOADLIBS),$(EXPORT_LIST)} :
+q{	$(LD) -out:$@ $(LDDLFLAGS) }.$ldfrom.q{ $(OTHERLDFLAGS) $(MYEXTLIB) $(PERL_ARCHIVE) $(LDLOADLIBS) -def:$(EXPORT_LIST)}
+	);
     push @m, '
 	$(CHMOD) 755 $@
 ';
@@ -294,11 +486,14 @@
 pm_to_blib: $(TO_INST_PM)
 	}.$self->{NOECHO}.q{$(PERL) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)" \
 	"-I$(PERL_ARCHLIB)" "-I$(PERL_LIB)" -MExtUtils::Install \
-        -e "pm_to_blib(qw{ <<pmfiles.dat },'}.$autodir.q{')"
-	}.q{
+        -e "pm_to_blib(qw[ }.
+	($NMAKE ? '<<pmfiles.dat'
+		: '$(mktmp,pmfiles.dat $(PM_TO_BLIB:s,\\,\\\\,)\n)').
+	q{ ],'}.$autodir.q{')"
+	}. ($NMAKE ? q{
 $(PM_TO_BLIB)
 <<
-	}.$self->{NOECHO}.q{$(TOUCH) $@
+	} : '') . $self->{NOECHO}.q{$(TOUCH) $@
 };
 }
 
@@ -313,6 +508,7 @@
     "\t$perl".q! -Mblib -I$(PERL_ARCHLIB) -I$(PERL_LIB) -e "use Test::Harness qw(&runtests $$verbose); $$verbose=$(TEST_VERBOSE); runtests @ARGV;" !."$tests\n";
 }
 
+
 =item tool_autosplit (override)
 
 Use Win32 quoting on command line.
@@ -345,7 +541,7 @@
     my $bin_sh = $Config{sh} || 'cmd /c';
     push @m, qq{
 SHELL = $bin_sh
-};
+} unless $DMAKE;  # dmake determines its own shell 
 
     for (qw/ CHMOD CP LD MV NOOP RM_F RM_RF TEST_F TOUCH UMASK_NULL DEV_NULL/ ) {
 	push @m, "$_ = $self->{$_}\n";
@@ -378,12 +574,12 @@
 VERBINST=1
 
 MOD_INSTALL = $(PERL) -I$(INST_LIB) -I$(PERL_LIB) -MExtUtils::Install \
--e "install({@ARGV},'$(VERBINST)',0,'$(UNINST)');"
+-e "install({ @ARGV },'$(VERBINST)',0,'$(UNINST)');"
 
 DOC_INSTALL = $(PERL) -e "$$\=\"\n\n\";" \
 -e "print '=head2 ', scalar(localtime), ': C<', shift, '>', ' L<', shift, '>';" \
 -e "print '=over 4';" \
--e "while (defined($$key = shift) and defined($$val = shift)){print '=item *';print 'C<', \"$$key: $$val\", '>';}" \
+-e "while (defined($$key = shift) and defined($$val = shift)) { print '=item *';print 'C<', \"$$key: $$val\", '>'; }" \
 -e "print '=back';"
 
 UNINSTALL =   $(PERL) -MExtUtils::Install \
@@ -395,6 +591,100 @@
     return join "", @m;
 }
 
+=item xs_o (o)
+
+Defines suffix rules to go from XS to object files directly. This is
+only intended for broken make implementations.
+
+=cut
+
+sub xs_o {	# many makes are too dumb to use xs_c then c_o
+    my($self) = shift;
+    return ''
+}
+
+=item top_targets (o)
+
+Defines the targets all, subdirs, config, and O_FILES
+
+=cut
+
+sub top_targets {
+# --- Target Sections ---
+
+    my($self) = shift;
+    my(@m);
+    push @m, '
+#all ::	config $(INST_PM) subdirs linkext manifypods
+';
+
+    push @m, '
+all :: pure_all manifypods
+	'.$self->{NOECHO}.'$(NOOP)
+' 
+	  unless $self->{SKIPHASH}{'all'};
+    
+    push @m, '
+pure_all :: config pm_to_blib subdirs linkext
+	'.$self->{NOECHO}.'$(NOOP)
+
+subdirs :: $(MYEXTLIB)
+	'.$self->{NOECHO}.'$(NOOP)
+
+config :: '.$self->{MAKEFILE}.' $(INST_LIBDIR)\.exists
+	'.$self->{NOECHO}.'$(NOOP)
+
+config :: $(INST_ARCHAUTODIR)\.exists
+	'.$self->{NOECHO}.'$(NOOP)
+
+config :: $(INST_AUTODIR)\.exists
+	'.$self->{NOECHO}.'$(NOOP)
+';
+
+    push @m, qq{
+config :: Version_check
+	$self->{NOECHO}\$(NOOP)
+
+} unless $self->{PARENT} or ($self->{PERL_SRC} && $self->{INSTALLDIRS} eq "perl") or $self->{NO_VC};
+
+    push @m, $self->dir_target(qw[$(INST_AUTODIR) $(INST_LIBDIR) $(INST_ARCHAUTODIR)]);
+
+    if (%{$self->{MAN1PODS}}) {
+	push @m, qq[
+config :: \$(INST_MAN1DIR)\\.exists
+	$self->{NOECHO}\$(NOOP)
+
+];
+	push @m, $self->dir_target(qw[$(INST_MAN1DIR)]);
+    }
+    if (%{$self->{MAN3PODS}}) {
+	push @m, qq[
+config :: \$(INST_MAN3DIR)\\.exists
+	$self->{NOECHO}\$(NOOP)
+
+];
+	push @m, $self->dir_target(qw[$(INST_MAN3DIR)]);
+    }
+
+    push @m, '
+$(O_FILES): $(H_FILES)
+' if @{$self->{O_FILES} || []} && @{$self->{H} || []};
+
+    push @m, q{
+help:
+	perldoc ExtUtils::MakeMaker
+};
+
+    push @m, q{
+Version_check:
+	}.$self->{NOECHO}.q{$(PERL) -I$(PERL_ARCHLIB) -I$(PERL_LIB) \
+		-MExtUtils::MakeMaker=Version_check \
+		-e "Version_check('$(MM_VERSION)')"
+};
+
+    join('',@m);
+}
+
 =item manifypods (o)
 
 We don't want manpage process.  XXX add pod2html support later.
@@ -479,7 +769,7 @@
 
 sub pasthru {
     my($self) = shift;
-    return "PASTHRU = /nologo"
+    return "PASTHRU = " . ($NMAKE ? "-nologo" : "");
 }
 
 
diff -ur perl5.004/lib/ExtUtils/MakeMaker.pm perl5.004-bc/lib/ExtUtils/MakeMaker.pm
--- perl5.004/lib/ExtUtils/MakeMaker.pm	Wed May 21 11:19:22 1997
+++ perl5.004-bc/lib/ExtUtils/MakeMaker.pm	Tue May 27 15:06:24 1997
@@ -454,11 +454,17 @@
 
     if (! $self->{PERL_SRC} ) {
 	my($pthinks) = $self->canonpath($INC{'Config.pm'});
+	my($cthinks) = $self->catfile($Config{'archlibexp'},'Config.pm');
 	$pthinks = VMS::Filespec::vmsify($pthinks) if $Is_VMS;
-	if ($pthinks ne $self->catfile($Config{archlibexp},'Config.pm')){
-            print "Have $pthinks expected ",$self->catfile($Config{archlibexp},'Config.pm'),"\n";
-	    $pthinks =~ s!/Config\.pm$!!;
-	    $pthinks =~ s!.*/!!;
+	if ($pthinks ne $cthinks &&
+	    !($Is_Win32 and lc($pthinks) eq lc($cthinks))) {
+            print "Have $pthinks expected $cthinks\n";
+	    if ($Is_Win32) {
+		$pthinks =~ s![/\\]Config\.pm$!!i; $pthinks =~ s!.*[/\\]!!;
+	    }
+	    else {
+		$pthinks =~ s!/Config\.pm$!!; $pthinks =~ s!.*/!!;
+	    }
 	    print STDOUT <<END;
 Your perl and your Config.pm seem to have different ideas about the architecture
 they are running on.
diff -ur perl5.004/lib/ExtUtils/Mksymlists.pm perl5.004-bc/lib/ExtUtils/Mksymlists.pm
--- perl5.004/lib/ExtUtils/Mksymlists.pm	Wed May 21 11:19:22 1997
+++ perl5.004-bc/lib/ExtUtils/Mksymlists.pm	Mon May 19 18:38:54 1997
@@ -97,6 +97,7 @@
 sub _write_win32 {
     my($data) = @_;
 
+    require Config;
     if (not $data->{DLBASE}) {
         ($data->{DLBASE} = $data->{NAME}) =~ s/.*:://;
         $data->{DLBASE} = substr($data->{DLBASE},0,7) . '_';
@@ -109,6 +110,10 @@
     print DEF "CODE LOADONCALL\n";
     print DEF "DATA LOADONCALL NONSHARED MULTIPLE\n";
     print DEF "EXPORTS\n  ";
+    if ($Config::Config{'cc'} =~ /^bcc/i) {
+	for (@{$data->{DL_VARS}}) { $_ = "$_ = _$_" }
+	for (@{$data->{FUNCLIST}}) { $_ = "$_ = _$_" }
+    }
     print DEF join("\n  ",@{$data->{DL_VARS}}, "\n") if @{$data->{DL_VARS}};
     print DEF join("\n  ",@{$data->{FUNCLIST}}, "\n") if @{$data->{FUNCLIST}};
     if (%{$data->{IMPORTS}}) {
Only in perl5.004-bc/lib/File: DosGlob.pm
diff -ur perl5.004/mg.c perl5.004-bc/mg.c
--- perl5.004/mg.c	Wed May 21 11:19:26 1997
+++ perl5.004-bc/mg.c	Sat May 24 15:57:00 1997
@@ -591,7 +591,7 @@
     }
 #endif
 
-#if !defined(OS2) && !defined(AMIGAOS) && !defined(_WIN32)
+#if !defined(OS2) && !defined(AMIGAOS) && !defined(WIN32)
 			    /* And you'll never guess what the dog had */
 			    /*   in its mouth... */
     if (tainting) {
@@ -639,7 +639,7 @@
 	    }
 	}
     }
-#endif /* neither OS2 nor AMIGAOS nor _WIN32 */
+#endif /* neither OS2 nor AMIGAOS nor WIN32 */
 
     return 0;
 }
@@ -1197,7 +1197,7 @@
 		croak(no_aelem, (I32)LvTARGOFF(sv));
 	}
     }
-    SvREFCNT_inc(value);
+    (void)SvREFCNT_inc(value);
     SvREFCNT_dec(LvTARG(sv));
     LvTARG(sv) = value;
     LvTARGLEN(sv) = 0;
diff -ur perl5.004/op.c perl5.004-bc/op.c
--- perl5.004/op.c	Wed May 21 11:19:26 1997
+++ perl5.004-bc/op.c	Tue May 27 15:10:10 1997
@@ -985,6 +985,7 @@
 
     switch (op->op_type) {
     case OP_UNDEF:
+	modcount++;
 	return op;
     case OP_CONST:
 	if (!(op->op_private & (OPpCONST_ARYBASE)))
diff -ur perl5.004/opcode.h perl5.004-bc/opcode.h
--- perl5.004/opcode.h	Wed May 21 11:19:26 1997
+++ perl5.004-bc/opcode.h	Mon May 19 13:45:06 1997
@@ -354,7 +354,7 @@
 #define MAXO 344
 
 #ifndef DOINIT
-EXT char *op_name[];
+EXT char *op_name[PERL_DUMMY_SIZE];
 #else
 EXT char *op_name[] = {
 	"null",
@@ -705,7 +705,7 @@
 #endif
 
 #ifndef DOINIT
-EXT char *op_desc[];
+EXT char *op_desc[PERL_DUMMY_SIZE];
 #else
 EXT char *op_desc[] = {
 	"null operation",
@@ -1434,7 +1434,7 @@
 OP *	pp_syscall	_((void));
 
 #ifndef DOINIT
-EXT OP * (*ppaddr[])();
+EXT OP * (*ppaddr[PERL_DUMMY_SIZE])();
 #else
 EXT OP * (*ppaddr[])() = {
 	pp_null,
@@ -1785,7 +1785,7 @@
 #endif
 
 #ifndef DOINIT
-EXT OP * (*check[]) _((OP *op));
+EXT OP * (*check[PERL_DUMMY_SIZE]) _((OP *op));
 #else
 EXT OP * (*check[]) _((OP *op)) = {
 	ck_null,	/* null */
@@ -2136,7 +2136,7 @@
 #endif
 
 #ifndef DOINIT
-EXT U32 opargs[];
+EXT U32 opargs[PERL_DUMMY_SIZE];
 #else
 EXT U32 opargs[] = {
 	0x00000000,	/* null */
diff -ur perl5.004/perl.h perl5.004-bc/perl.h
--- perl5.004/perl.h	Wed May 21 11:19:26 1997
+++ perl5.004-bc/perl.h	Mon May 19 13:55:00 1997
@@ -92,6 +92,12 @@
 # define DONT_DECLARE_STD 1
 #endif
 
+#if defined(NEED_SIZE_ON_EXTERN_ARRAYS) && !defined(DOINIT)
+#define PERL_DUMMY_SIZE 1
+#else
+#define PERL_DUMMY_SIZE
+#endif
+
 #if defined(HASVOLATILE) || defined(STANDARD_C)
 #   ifdef __cplusplus
 #	define VOL		// to temporarily suppress warnings
@@ -856,7 +862,9 @@
 
 typedef struct Outrec Outrec;
 typedef struct interpreter PerlInterpreter;
-typedef struct ff FF;
+#ifndef __BORLANDC__
+typedef struct ff FF;		/* XXX not defined anywhere, should go? */
+#endif
 typedef struct sv SV;
 typedef struct av AV;
 typedef struct hv HV;
@@ -1381,37 +1389,37 @@
 EXTCONST char *	patleave INIT("\\.^$@dDwWsSbB+*?|()-nrtfeaxc0123456789[{]}");
 EXTCONST char *	vert INIT("|");
 
-EXTCONST char	warn_uninit[]
+EXTCONST char *	warn_uninit
   INIT("Use of uninitialized value");
-EXTCONST char	warn_nosemi[]
+EXTCONST char *	warn_nosemi
   INIT("Semicolon seems to be missing");
-EXTCONST char	warn_reserved[]
+EXTCONST char *	warn_reserved
   INIT("Unquoted string \"%s\" may clash with future reserved word");
-EXTCONST char	warn_nl[]
+EXTCONST char *	warn_nl
   INIT("Unsuccessful %s on filename containing newline");
-EXTCONST char	no_wrongref[]
+EXTCONST char *	no_wrongref
   INIT("Can't use %s ref as %s ref");
-EXTCONST char	no_symref[]
+EXTCONST char *	no_symref
   INIT("Can't use string (\"%.32s\") as %s ref while \"strict refs\" in use");
-EXTCONST char	no_usym[]
+EXTCONST char *	no_usym
   INIT("Can't use an undefined value as %s reference");
-EXTCONST char	no_aelem[]
+EXTCONST char *	no_aelem
   INIT("Modification of non-creatable array value attempted, subscript %d");
-EXTCONST char	no_helem[]
+EXTCONST char *	no_helem
   INIT("Modification of non-creatable hash value attempted, subscript \"%s\"");
-EXTCONST char	no_modify[]
+EXTCONST char *	no_modify
   INIT("Modification of a read-only value attempted");
-EXTCONST char	no_mem[]
+EXTCONST char *	no_mem
   INIT("Out of memory!\n");
-EXTCONST char	no_security[]
+EXTCONST char *	no_security
   INIT("Insecure dependency in %s%s");
-EXTCONST char	no_sock_func[]
+EXTCONST char *	no_sock_func
   INIT("Unsupported socket function \"%s\" called");
-EXTCONST char	no_dir_func[]
+EXTCONST char *	no_dir_func
   INIT("Unsupported directory function \"%s\" called");
-EXTCONST char	no_func[]
+EXTCONST char *	no_func
   INIT("The %s function is unimplemented");
-EXTCONST char	no_myglob[]
+EXTCONST char *	no_myglob
   INIT("\"my\" variable %s can't be in a package");
 
 EXT SV		sv_undef;
@@ -1428,10 +1436,10 @@
 EXT SV	* psig_ptr[sizeof(sig_num)/sizeof(*sig_num)];
 EXT SV  * psig_name[sizeof(sig_num)/sizeof(*sig_num)];
 #else
-EXT char *sig_name[];
-EXT int   sig_num[];
-EXT SV  * psig_ptr[];
-EXT SV  * psig_name[];
+EXT char *sig_name[PERL_DUMMY_SIZE];
+EXT int   sig_num[PERL_DUMMY_SIZE];
+EXT SV  * psig_ptr[PERL_DUMMY_SIZE];
+EXT SV  * psig_name[PERL_DUMMY_SIZE];
 #endif
 
 /* fast case folding tables */
@@ -1472,7 +1480,7 @@
 	248,	249,	250,	251,	252,	253,	254,	255
 };
 #else
-EXTCONST unsigned char fold[];
+EXTCONST unsigned char fold[PERL_DUMMY_SIZE];
 #endif
 
 #ifdef DOINIT
@@ -1511,7 +1519,7 @@
 	248,	249,	250,	251,	252,	253,	254,	255
 };
 #else
-EXT unsigned char fold_locale[];
+EXT unsigned char fold_locale[PERL_DUMMY_SIZE];
 #endif
 
 #ifdef DOINIT
@@ -1550,7 +1558,7 @@
 	138,	139,	141,	142,	143,	144,	145,	146
 };
 #else
-EXTCONST unsigned char freq[];
+EXTCONST unsigned char freq[PERL_DUMMY_SIZE];
 #endif
 
 #ifdef DEBUGGING
@@ -1564,7 +1572,7 @@
 	"BLOCK",
 };
 #else
-EXTCONST char* block_type[];
+EXTCONST char* block_type[PERL_DUMMY_SIZE];
 #endif
 #endif
 
diff -ur perl5.004/perlio.c perl5.004-bc/perlio.c
--- perl5.004/perlio.c	Wed May 21 11:19:26 1997
+++ perl5.004-bc/perlio.c	Sat May 24 16:35:32 1997
@@ -360,7 +360,11 @@
 #ifdef HAS_SETLINEBUF
     setlinebuf(f);
 #else
+#  ifdef __BORLANDC__ /* Borland doesn't like NULL size for _IOLBF */
+    setvbuf(f, Nullch, _IOLBF, BUFSIZ);
+#  else
     setvbuf(f, Nullch, _IOLBF, 0);
+#  endif
 #endif
 }
 
diff -ur perl5.004/pod/perlguts.pod perl5.004-bc/pod/perlguts.pod
--- perl5.004/pod/perlguts.pod	Wed May 21 11:19:28 1997
+++ perl5.004-bc/pod/perlguts.pod	Tue May 27 15:18:24 1997
@@ -161,7 +161,7 @@
     sv_setsv(ST(0), sv);
 
 This code tries to return a new SV (which contains the value 42) if it should
-return a real value, or undef otherwise.  Instead it has returned a null
+return a real value, or undef otherwise.  Instead it has returned a NULL
 pointer which, somewhere down the line, will cause a segmentation violation,
 bus error, or just weird results.  Change the zero to C<&sv_undef> in the first
 line and all will be well.
@@ -225,9 +225,12 @@
 like $#array in Perl).  If the array is empty, -1 is returned.  The
 C<av_fetch> function returns the value at index C<key>, but if C<lval>
 is non-zero, then C<av_fetch> will store an undef value at that index.
-The C<av_store> function stores the value C<val> at index C<key>.
-note that C<av_fetch> and C<av_store> both return C<SV**>'s, not C<SV*>'s
-as their return value.
+The C<av_store> function stores the value C<val> at index C<key>, and does
+not increment the reference count of C<val>.  Thus the caller is responsible
+for taking care of that, and if C<av_store> returns NULL, the caller will
+have to decrement the reference count to avoid a memory leak.  Note that
+C<av_fetch> and C<av_store> both return C<SV**>'s, not C<SV*>'s as their
+return value.
 
     void  av_clear(AV*);
     void  av_undef(AV*);
@@ -247,6 +250,9 @@
 
 This returns NULL if the variable does not exist.
 
+See L<Understanding the Magic of Tied Hashes and Arrays> for more
+information on how to use the array access functions on tied arrays.
+
 =head2 Working with HVs
 
 To create an HV, you use the following routine:
@@ -327,6 +333,9 @@
     while (i--)
 	hash = hash * 33 + *s++;
 
+See L<Understanding the Magic of Tied Hashes and Arrays> for more
+information on how to use the hash access functions on tied hashes.
+
 =head2 Hash API Extensions
 
 Beginning with version 5.004, the following functions are also supported:
@@ -368,6 +377,10 @@
     HeKEY(HE* he)
     HeKLEN(HE* he)
 
+Note that both C<hv_store> and C<hv_store_ent> do not increment the
+reference count of the stored C<val>, which is the caller's responsibility.
+If these functions return a NULL value, the caller will usually have to
+decrement the reference count of C<val> to avoid a memory leak.
 
 =head2 References
 
@@ -697,7 +710,7 @@
 The C<obj> argument is stored in the C<mg_obj> field of the C<MAGIC>
 structure.  If it is not the same as the C<sv> argument, the reference
 count of the C<obj> object is incremented.  If it is the same, or if
-the C<how> argument is "#", or if it is a null pointer, then C<obj> is
+the C<how> argument is "#", or if it is a NULL pointer, then C<obj> is
 merely stored, without the reference count being incremented.
 
 There is also a function to add magic to an C<HV>:
@@ -813,6 +826,57 @@
 field is an uppercase letter, then the mg_obj is copied to C<nsv>, but
 the mg_type field is changed to be the lowercase letter.
 
+=head2 Understanding the Magic of Tied Hashes and Arrays
+
+Tied hashes and arrays are magical beasts of the 'P' magic type.
+Proper usage of the array and hash access functions on them requires
+understanding a few caveats.
+
+The C<av_store> function, when given a tied array argument, merely
+copies the magic of the array onto the value to be "stored", using
+C<mg_copy>.  It may also return NULL, indicating that the value did not
+actually need to be stored in the array.  After a call to C<av_store> on
+a tied array, the caller will usually need to call C<mg_set(val)> to
+actually invoke the perl level "STORE" method on the TIEARRAY object.  If
+C<av_store> did return NULL, a call to C<SvREFCNT_dec(val)> will also be
+usually necessary to avoid a memory leak.
+
+The previous paragraph is applicable verbatim to tied hash access using the
+C<hv_store> and C<hv_store_ent> functions as well.
+
+C<av_fetch> and the corresponding hash functions C<hv_fetch> and
+C<hv_fetch_ent> actually return an undefined mortal value whose magic
+has been initialized using C<mg_copy>.  Note the value so returned does not
+need to be deallocated, as it is already mortal.  But you will need to
+call C<mg_get()> on the returned value in order to actually invoke the
+perl level "FETCH" method on the underlying TIE object.  Similarly,
+you may also call C<mg_set()> on the return value after possibly assigning
+a suitable value to it using C<sv_setsv>,  which will invoke the "STORE"
+method on the TIE object.
+
+In other words, the array or hash fetch/store functions don't really
+fetch and store actual values in the case of tied arrays and hashes.  They
+merely call C<mg_copy> to attach magic to the values that were meant to be
+"stored" or "fetched".  Later calls to C<mg_get> and C<mg_set> actually
+do the job of invoking the TIE methods on the underlying objects.  Thus
+the magic mechanism actually implements a kind of lazy access to arrays
+and hashes.
+
+Currently (as of perl version 5.004), use of the hash and array access
+functions requires the user to be aware of whether they are operating on
+"normal" hashes and arrays, or on their tied variants.  A simpler API
+interface that provides transparent access to both tied and normal data
+types may be available in future versions.
+
+You would do well to understand that the TIEARRAY and TIEHASH interfaces
+are mere sugar to invoke some perl method calls while using the uniform hash
+and array syntax.  The use of this sugar imposes some overhead (typically
+about two to four extra opcodes per FETCH/STORE operation, in addition to
+the creation of all the mortal variables required to invoke the methods).
+This overhead will be comparatively small if the TIE methods are themselves
+substantial, but if they are only a few statements long, the overhead
+will not be insignificant.
+
 =head1 Subroutines
 
 =head2 XSUBs and the Argument Stack
@@ -1191,6 +1255,9 @@
 index.  If C<lval> is set then the fetch will be part of a store.  Check
 that the return value is non-null before dereferencing it to a C<SV*>.
 
+See L<Understanding the Magic of Tied Hashes and Arrays> for more
+information on how to use this function on tied arrays.
+
 	SV**	av_fetch _((AV* ar, I32 key, I32 lval));
 
 =item av_len
@@ -1230,9 +1297,15 @@
 =item av_store
 
 Stores an SV in an array.  The array index is specified as C<key>.  The
-return value will be null if the operation failed, otherwise it can be
-dereferenced to get the original C<SV*>.
+return value will be NULL if the operation failed or if the value did not
+need to be actually stored within the array (as in the case of tied arrays).
+Otherwise it can be dereferenced to get the original C<SV*>.  Note that the
+caller is responsible for suitably incrementing the reference count of C<val>
+before the call, and decrementing it if the function returned NULL.
 
+See L<Understanding the Magic of Tied Hashes and Arrays> for more
+information on how to use this function on tied arrays.
+
 	SV**	av_store _((AV* ar, I32 key, SV* val));
 
 =item av_undef
@@ -1544,7 +1617,7 @@
 
 Deletes a key/value pair in the hash.  The value SV is removed from the hash
 and returned to the caller.  The C<klen> is the length of the key.  The
-C<flags> value will normally be zero; if set to G_DISCARD then null will be
+C<flags> value will normally be zero; if set to G_DISCARD then NULL will be
 returned.
 
 	SV*	hv_delete _((HV* tb, char* key, U32 klen, I32 flags));
@@ -1553,7 +1626,7 @@
 
 Deletes a key/value pair in the hash.  The value SV is removed from the hash
 and returned to the caller.  The C<flags> value will normally be zero; if set
-to G_DISCARD then null will be returned.  C<hash> can be a valid precomputed
+to G_DISCARD then NULL will be returned.  C<hash> can be a valid precomputed
 hash value, or 0 to ask for it to be computed.
 
 	SV*     hv_delete_ent _((HV* tb, SV* key, I32 flags, U32 hash));
@@ -1579,6 +1652,9 @@
 part of a store.  Check that the return value is non-null before
 dereferencing it to a C<SV*>.
 
+See L<Understanding the Magic of Tied Hashes and Arrays> for more
+information on how to use this function on tied hashes.
+
 	SV**	hv_fetch _((HV* tb, char* key, U32 klen, I32 lval));
 
 =item hv_fetch_ent
@@ -1591,6 +1667,9 @@
 is a pointer to a static location, so be sure to make a copy of the
 structure if you need to store it somewhere.
 
+See L<Understanding the Magic of Tied Hashes and Arrays> for more
+information on how to use this function on tied hashes.
+
 	HE*     hv_fetch_ent  _((HV* tb, SV* key, I32 lval, U32 hash));
 
 =item hv_free_ent
@@ -1658,9 +1737,15 @@
 Stores an SV in a hash.  The hash key is specified as C<key> and C<klen> is
 the length of the key.  The C<hash> parameter is the precomputed hash
 value; if it is zero then Perl will compute it.  The return value will be
-null if the operation failed, otherwise it can be dereferenced to get the
-original C<SV*>.
+NULL if the operation failed or if the value did not need to be actually
+stored within the hash (as in the case of tied hashes).  Otherwise it can
+be dereferenced to get the original C<SV*>.  Note that the caller is
+responsible for suitably incrementing the reference count of C<val>
+before the call, and decrementing it if the function returned NULL.
 
+See L<Understanding the Magic of Tied Hashes and Arrays> for more
+information on how to use this function on tied hashes.
+
 	SV**	hv_store _((HV* tb, char* key, U32 klen, SV* val, U32 hash));
 
 =item hv_store_ent
@@ -1668,9 +1753,15 @@
 Stores C<val> in a hash.  The hash key is specified as C<key>.  The C<hash>
 parameter is the precomputed hash value; if it is zero then Perl will
 compute it.  The return value is the new hash entry so created.  It will be
-null if the operation failed or if the entry was stored in a tied hash.
-Otherwise the contents of the return value can be accessed using the
-C<He???> macros described here.
+NULL if the operation failed or if the value did not need to be actually
+stored within the hash (as in the case of tied hashes).  Otherwise the
+contents of the return value can be accessed using the C<He???> macros
+described here.  Note that the caller is responsible for suitably
+incrementing the reference count of C<val> before the call, and decrementing
+it if the function returned NULL.
+
+See L<Understanding the Magic of Tied Hashes and Arrays> for more
+information on how to use this function on tied hashes.
 
 	HE*     hv_store_ent  _((HV* tb, SV* key, SV* val, U32 hash));
 
@@ -1981,7 +2072,7 @@
 
 Returns the AV of the specified Perl array.  If C<create> is set and the
 Perl variable does not exist then it will be created.  If C<create> is not
-set and the variable does not exist then null is returned.
+set and the variable does not exist then NULL is returned.
 
 	AV*	perl_get_av _((char* name, I32 create));
 
@@ -1989,7 +2080,7 @@
 
 Returns the CV of the specified Perl sub.  If C<create> is set and the Perl
 variable does not exist then it will be created.  If C<create> is not
-set and the variable does not exist then null is returned.
+set and the variable does not exist then NULL is returned.
 
 	CV*	perl_get_cv _((char* name, I32 create));
 
@@ -1997,7 +2088,7 @@
 
 Returns the HV of the specified Perl hash.  If C<create> is set and the Perl
 variable does not exist then it will be created.  If C<create> is not
-set and the variable does not exist then null is returned.
+set and the variable does not exist then NULL is returned.
 
 	HV*	perl_get_hv _((char* name, I32 create));
 
@@ -2005,7 +2096,7 @@
 
 Returns the SV of the specified Perl scalar.  If C<create> is set and the
 Perl variable does not exist then it will be created.  If C<create> is not
-set and the variable does not exist then null is returned.
+set and the variable does not exist then NULL is returned.
 
 	SV*	perl_get_sv _((char* name, I32 create));
 
@@ -2957,4 +3048,4 @@
 
 =head1 DATE
 
-Version 31.7: 1997/5/1
+Version 31.8: 1997/5/17
diff -ur perl5.004/pp.c perl5.004-bc/pp.c
--- perl5.004/pp.c	Wed May 21 11:19:28 1997
+++ perl5.004-bc/pp.c	Mon May 19 21:58:52 1997
@@ -178,7 +178,7 @@
 	    GV *gv = (GV*) sv_newmortal();
 	    gv_init(gv, 0, "", 0, 0);
 	    GvIOp(gv) = (IO *)sv;
-	    SvREFCNT_inc(sv);
+	    (void)SvREFCNT_inc(sv);
 	    sv = (SV*) gv;
 	} else if (SvTYPE(sv) != SVt_PVGV)
 	    DIE("Not a GLOB reference");
diff -ur perl5.004/pp_ctl.c perl5.004-bc/pp_ctl.c
--- perl5.004/pp_ctl.c	Wed May 21 11:19:28 1997
+++ perl5.004-bc/pp_ctl.c	Mon May 19 22:00:02 1997
@@ -724,7 +724,7 @@
 		cx->blk_gimme = G_SCALAR;
 		PUSHSUB(cx);
 		if (!CvDEPTH(cv))
-		    SvREFCNT_inc(cv);	/* in preparation for POPSUB */
+		    (void)SvREFCNT_inc(cv); /* in preparation for POPSUB */
 	    }
 	    sortcxix = cxstack_ix;
 
diff -ur perl5.004/pp_hot.c perl5.004-bc/pp_hot.c
--- perl5.004/pp_hot.c	Wed May 21 11:19:30 1997
+++ perl5.004-bc/pp_hot.c	Tue May 27 15:14:04 1997
@@ -625,13 +625,17 @@
 	    av_extend(ary, lastrelem - relem);
 	    i = 0;
 	    while (relem <= lastrelem) {	/* gobble up all the rest */
+		SV **didstore;
 		sv = NEWSV(28,0);
 		assert(*relem);
 		sv_setsv(sv,*relem);
 		*(relem++) = sv;
-		(void)av_store(ary,i++,sv);
-		if (magic)
+		didstore = av_store(ary,i++,sv);
+		if (magic) {
 		    mg_set(sv);
+		    if (!didstore)
+			SvREFCNT_dec(sv);
+		}
 		TAINT_NOT;
 	    }
 	    break;
@@ -644,6 +648,7 @@
 
 		while (relem < lastrelem) {	/* gobble up all the rest */
 		    STRLEN len;
+		    HE *didstore;
 		    if (*relem)
 			sv = *(relem++);
 		    else
@@ -652,9 +657,12 @@
 		    if (*relem)
 			sv_setsv(tmpstr,*relem);	/* value */
 		    *(relem++) = tmpstr;
-		    (void)hv_store_ent(hash,sv,tmpstr,0);
-		    if (magic)
+		    didstore = hv_store_ent(hash,sv,tmpstr,0);
+		    if (magic) {
 			mg_set(tmpstr);
+			if (!didstore)
+			    SvREFCNT_dec(tmpstr);
+		    }
 		    TAINT_NOT;
 		}
 		if (relem == lastrelem)
diff -ur perl5.004/pp_sys.c perl5.004-bc/pp_sys.c
--- perl5.004/pp_sys.c	Wed May 21 11:19:30 1997
+++ perl5.004-bc/pp_sys.c	Sat May 24 22:41:40 1997
@@ -71,7 +71,7 @@
 #endif
 
 #ifdef I_UTIME
-#  ifdef WIN32
+#  ifdef _MSC_VER
 #    include <sys/utime.h>
 #  else
 #    include <utime.h>
@@ -469,8 +469,19 @@
     else
 	RETPUSHUNDEF;
 #else
-    if (setmode(PerlIO_fileno(fp), OP_BINARY) != -1)
+    if (setmode(PerlIO_fileno(fp), OP_BINARY) != -1) {
+#if defined(WIN32) && defined(__BORLANDC__)
+	/* The translation mode of the stream is maintained independent
+	 * of the translation mode of the fd in the Borland RTL (heavy
+	 * digging through their runtime sources reveal).  User has to
+	 * set the mode explicitly for the stream (though they don't
+	 * document this anywhere). GSAR 97-5-24
+	 */
+	PerlIO_seek(fp,0L,0);
+	fp->flags |= _F_BIN;
+#endif
 	RETPUSHYES;
+    }
     else
 	RETPUSHUNDEF;
 #endif
diff -ur perl5.004/regcomp.h perl5.004-bc/regcomp.h
--- perl5.004/regcomp.h	Wed May 21 11:19:30 1997
+++ perl5.004-bc/regcomp.h	Mon May 19 13:56:24 1997
@@ -115,7 +115,7 @@
  */
 
 #ifndef DOINIT
-EXT char regarglen[];
+EXT char regarglen[PERL_DUMMY_SIZE];
 #else
 EXT char regarglen[] = {
     0,0,0,0,0,0,0,0,0,0,
@@ -127,7 +127,7 @@
 #endif
 
 #ifndef DOINIT
-EXT char regkind[];
+EXT char regkind[PERL_DUMMY_SIZE];
 #else
 EXT char regkind[] = {
 	END,
@@ -178,7 +178,7 @@
 
 /* The following have no fixed length. */
 #ifndef DOINIT
-EXT char varies[];
+EXT char varies[PERL_DUMMY_SIZE];
 #else
 EXT char varies[] = {
     BRANCH, BACK, STAR, PLUS, CURLY, CURLYX, REF, WHILEM, 0
@@ -187,7 +187,7 @@
 
 /* The following always have a length of 1. */
 #ifndef DOINIT
-EXT char simple[];
+EXT char simple[PERL_DUMMY_SIZE];
 #else
 EXT char simple[] = {
     ANY, SANY, ANYOF,
diff -ur perl5.004/t/op/mkdir.t perl5.004-bc/t/op/mkdir.t
--- perl5.004/t/op/mkdir.t	Wed May 21 11:19:30 1997
+++ perl5.004-bc/t/op/mkdir.t	Sat May 24 20:13:52 1997
@@ -8,7 +8,7 @@
 
 print (mkdir('blurfl',0777) ? "ok 1\n" : "not ok 1\n");
 print (mkdir('blurfl',0777) ? "not ok 2\n" : "ok 2\n");
-print ($! =~ /exist/ ? "ok 3\n" : "not ok 3\n");
+print ($! =~ /exist|denied/ ? "ok 3\n" : "# $!\nnot ok 3\n");
 print (-d 'blurfl' ? "ok 4\n" : "not ok 4\n");
 print (rmdir('blurfl') ? "ok 5\n" : "not ok 5\n");
 print (rmdir('blurfl') ? "not ok 6\n" : "ok 6\n");
diff -ur perl5.004/t/op/stat.t perl5.004-bc/t/op/stat.t
--- perl5.004/t/op/stat.t	Wed May 21 11:19:30 1997
+++ perl5.004-bc/t/op/stat.t	Sat May 24 23:42:08 1997
@@ -74,7 +74,9 @@
 if (!$> || ! -w 'Op.stat.tmp') {print "ok 10\n";} else {print "not ok 10\n";}
 eval '$> = $olduid;';		# switch uid back (may not be implemented)
 print "# olduid=$olduid, newuid=$>\n" unless ($> == $olduid);
-if (! -x 'Op.stat.tmp') {print "ok 11\n";} else {print "not ok 11\n";}
+
+if ($Is_MSWin32 or ! -x 'Op.stat.tmp') {print "ok 11\n";}
+else                                   {print "not ok 11\n";}
 
 foreach ((12,13,14,15,16,17)) {
     print "ok $_\n";		#deleted tests
diff -ur perl5.004/util.c perl5.004-bc/util.c
--- perl5.004/util.c	Wed May 21 11:19:32 1997
+++ perl5.004-bc/util.c	Sat May 24 15:58:26 1997
@@ -1334,7 +1334,7 @@
 }
 
 #ifndef VMS  /* VMS' my_setenv() is in VMS.c */
-#ifndef _WIN32
+#ifndef WIN32
 void
 my_setenv(nam,val)
 char *nam, *val;
@@ -1395,7 +1395,7 @@
     return i;
 }
 
-#else /* if _WIN32 */
+#else /* if WIN32 */
 
 void
 my_setenv(nam,val)
@@ -1403,8 +1403,12 @@
 {
     register char *envstr;
     STRLEN namlen = strlen(nam);
-    STRLEN vallen = strlen(val ? val : "");
+    STRLEN vallen = 0;
 
+    if (val)
+	vallen = strlen(val);
+    else
+	val = "";
     New(904, envstr, namlen + vallen + 3, char);
     (void)sprintf(envstr,"%s=%s",nam,val);
     if (!vallen) {
@@ -1423,7 +1427,7 @@
     (void)_putenv(envstr);
 }
 
-#endif /* _WIN32 */
+#endif /* WIN32 */
 #endif /* !VMS */
 
 #ifdef UNLINK_ALL_VERSIONS
diff -ur perl5.004/win32/include/sys/socket.h perl5.004-bc/win32/include/sys/socket.h
--- perl5.004/win32/include/sys/socket.h	Wed May 21 11:19:32 1997
+++ perl5.004-bc/win32/include/sys/socket.h	Mon May 19 22:09:54 1997
@@ -85,12 +85,15 @@
 struct servent *win32_getservent(void);
 void win32_sethostent(int stayopen);
 void win32_setnetent(int stayopen);
+struct netent * win32_getnetent(void);
+struct netent * win32_getnetbyname(char *name);
+struct netent * win32_getnetbyaddr(long net, int type);
 void win32_setprotoent(int stayopen);
 void win32_setservent(int stayopen);
-void win32_endhostent();
-void win32_endnetent();
-void win32_endprotoent();
-void win32_endservent();
+void win32_endhostent(void);
+void win32_endnetent(void);
+void win32_endprotoent(void);
+void win32_endservent(void);
 
 //
 // direct to our version
diff -ur perl5.004/win32/makedef.pl perl5.004-bc/win32/makedef.pl
--- perl5.004/win32/makedef.pl	Wed May 21 11:19:32 1997
+++ perl5.004-bc/win32/makedef.pl	Tue May 27 17:04:48 1997
@@ -14,6 +14,8 @@
 # that does not present in the WIN32 port but there is no easy
 # way to find them so I just put a exeception list here
 
+my $CCTYPE = shift || "MSVC";
+
 $skip_sym=<<'!END!OF!SKIP!';
 Perl_SvIV
 Perl_SvNV
@@ -119,18 +121,13 @@
 Perl_yyrule
 allgvs
 curblock
-curcop
-curcopdb
 curcsv
-envgv
 lastretstr
 mystack_mark
 perl_init_ext
 perl_requirepv
-siggv
 stack
 statusvalue_vms
-tainting
 Perl_safexcalloc
 Perl_safexmalloc
 Perl_safexfree
@@ -158,8 +155,8 @@
 	next if (/_amg[ \t]*$/);
 	$symbol = "Perl_$_";
     	next if ($skip_sym =~ m/$symbol/m);
-	print "\t$symbol";
-	};
+	emit_symbol($symbol);
+}
 close(GLOBAL);
 
 # also add symbols from interp.sym
@@ -175,8 +172,8 @@
 	$symbol = $_;
     	next if ($skip_sym =~ m/$symbol/m);
 	#print "\t$symbol";
-	print "\tPerl_$symbol";
-	};
+	emit_symbol("Perl_" . $symbol);
+}
 
 #close(INTERP);
 
@@ -186,8 +183,22 @@
 	next if (/^#/);
 	$symbol = $_;
     	next if ($skip_sym =~ m/^$symbol/m);
-	print "\t$symbol";
-	};
+	emit_symbol($symbol);
+}
+
+sub emit_symbol {
+	my $symbol = shift;
+	chomp $symbol;
+	if ($CCTYPE eq "BORLAND") {
+		# workaround Borland quirk by exporting both the straight
+		# name and a name with leading underscore
+		#print "\t$symbol = _$symbol\n";
+		print "\t_$symbol\n";
+	}
+	else {
+		print "\t$symbol\n";
+	}
+}
 
 1;
 __DATA__
diff -ur perl5.004/win32/makeperldef.pl perl5.004-bc/win32/makeperldef.pl
--- perl5.004/win32/makeperldef.pl	Wed May 21 11:19:32 1997
+++ perl5.004-bc/win32/makeperldef.pl	Mon May 19 16:04:10 1997
@@ -1,4 +1,23 @@
+my $CCTYPE = "";
 print "EXPORTS\n";
 foreach (@ARGV) {
-	print "\tboot_$_\n"
-	};
+	if (/CCTYPE=(.*)$/) {
+		$CCTYPE = $1;
+		next;
+	}
+	emit_symbol("boot_$_");
+}
+
+sub emit_symbol {
+	my $symbol = shift;
+	if ($CCTYPE eq "BORLAND") {
+		# workaround Borland quirk by export both the straight
+		# name and a name with leading underscore
+		print "\t$symbol=_$symbol\n";
+		print "\t_$symbol\n";
+	}
+	else {
+		print "\t$symbol\n";
+	}
+}
+
diff -ur perl5.004/win32/perlglob.c perl5.004-bc/win32/perlglob.c
--- perl5.004/win32/perlglob.c	Wed May 21 11:19:32 1997
+++ perl5.004-bc/win32/perlglob.c	Tue May 20 12:04:08 1997
@@ -21,7 +21,6 @@
     BOOL downcase = TRUE;
 
     /* check out the file system characteristics */
-
     if (GetFullPathName(".", MAX_PATH, root, &dummy)) {
 	if (dummy = strchr(root, '\\'))
 	    *++dummy = '\0';
@@ -31,7 +30,7 @@
 	}
     }
 
-    _setmode(_fileno(stdout), _O_BINARY);
+    setmode(fileno(stdout), O_BINARY);
     for (i = 1; i < argc; i++) {
 	len = strlen(argv[i]);
 	if (downcase)
diff -ur perl5.004/win32/perllib.c perl5.004-bc/win32/perllib.c
--- perl5.004/win32/perllib.c	Wed May 21 11:19:32 1997
+++ perl5.004-bc/win32/perllib.c	Sat May 24 21:02:50 1997
@@ -66,10 +66,10 @@
     case DLL_PROCESS_ATTACH:
 /* #define DEFAULT_BINMODE */
 #ifdef DEFAULT_BINMODE
-	_setmode( _fileno( stdin  ), _O_BINARY );
-	_setmode( _fileno( stdout ), _O_BINARY );
-	_setmode( _fileno( stderr ), _O_BINARY );
-	_fmode = _O_BINARY;
+	setmode( fileno( stdin  ), O_BINARY );
+	setmode( fileno( stdout ), O_BINARY );
+	setmode( fileno( stderr ), O_BINARY );
+	_fmode = O_BINARY;
 #endif
 	PerlDllHandle = hModule;
 	break;
diff -ur perl5.004/win32/win32.c perl5.004-bc/win32/win32.c
--- perl5.004/win32/win32.c	Wed May 21 11:19:34 1997
+++ perl5.004-bc/win32/win32.c	Sat May 24 19:50:36 1997
@@ -152,6 +152,10 @@
  * GSAR 97/03/13
  */
     fixcmd(cmd);
+#ifdef __BORLANDC__ /* workaround a Borland stdio bug */
+    win32_fflush(stdout);
+    win32_fflush(stderr);
+#endif
     return win32_popen(cmd, mode);
 #else
 /*
@@ -187,11 +191,11 @@
 	goto error1;
 
     if ( *(mode + 1) == _T('t') )
-	tm = _O_TEXT;
+	tm = O_TEXT;
     else if ( *(mode + 1) == _T('b') )
-	tm = _O_BINARY;
+	tm = O_BINARY;
     else
-	tm = (*mode == 'w' ? _O_BINARY : _O_TEXT);
+	tm = (*mode == 'w' ? O_BINARY : O_TEXT);
 
 
     fixcmd(cmd);
@@ -459,7 +463,7 @@
 /*  char           *dummy;*/
 
     /* check to see if filename is a directory */
-    if(stat(filename, &sbuf) < 0 || sbuf.st_mode & _S_IFDIR == 0) {
+    if(stat(filename, &sbuf) < 0 || sbuf.st_mode & S_IFDIR == 0) {
 	return NULL;
     }
 
@@ -674,12 +678,14 @@
  * File system stuff
  */
 
+#if 0
 int
 ioctl(int i, unsigned int u, char *data)
 {
     CROAK("ioctl not implemented!\n");
     return -1;
 }
+#endif
 
 unsigned int
 sleep(unsigned int t)
@@ -805,7 +811,9 @@
 DllExport char *
 win32_strerror(int e) 
 {
+#ifndef __BORLANDC__		/* Borland intolerance */
     extern int sys_nerr;
+#endif
     DWORD source = 0;
 
     if(e < 0 || e > sys_nerr) {
@@ -1060,13 +1068,13 @@
 }
 
 DllExport int
-win32_read(int fd, char *buf, unsigned int cnt)
+win32_read(int fd, void *buf, unsigned int cnt)
 {
     return pIOSubSystem->pfnread(fd, buf, cnt);
 }
 
 DllExport int
-win32_write(int fd, const char *buf, unsigned int cnt)
+win32_write(int fd, const void *buf, unsigned int cnt)
 {
     return pIOSubSystem->pfnwrite(fd, buf, cnt);
 }
diff -ur perl5.004/win32/win32.h perl5.004-bc/win32/win32.h
--- perl5.004/win32/win32.h	Wed May 21 11:19:34 1997
+++ perl5.004-bc/win32/win32.h	Mon May 19 22:31:42 1997
@@ -25,20 +25,43 @@
 
 /* For UNIX compatibility. */
 
+#ifdef __BORLANDC__
+
+#define NEED_SIZE_ON_EXTERN_ARRAYS
+
+#define _putenv putenv
+#define _access access
+#define _chdir chdir
+#include <sys/types.h>
+
+#pragma warn -ccc
+#pragma warn -rch
+#pragma warn -sig
+#pragma warn -pia
+#pragma warn -par
+#pragma warn -aus
+#pragma warn -use
+#pragma warn -csu
+#pragma warn -pro
+
+#else
+
 typedef long		uid_t;
 typedef long		gid_t;
 
-extern  char	*staticlinkmodules[];
+#endif
 
 extern  uid_t	getuid(void);
 extern  gid_t	getgid(void);
 extern  uid_t	geteuid(void);
 extern  gid_t	getegid(void);
-
 extern  int	setuid(uid_t uid);
 extern  int	setgid(gid_t gid);
+
 extern  int	kill(int pid, int sig);
 
+extern  char	*staticlinkmodules[];
+
 #define USE_SOCKETS_AS_HANDLES
 #ifndef USE_SOCKETS_AS_HANDLES
 extern FILE *myfdopen(int, char *);
@@ -50,10 +73,10 @@
 #define  STANDARD_C	1		/* Perl5 likes standard C. */
 #define  DOSISH		1		/* Take advantage of DOSish code in Perl5. */
 
-#define  OP_BINARY	_O_BINARY	/* Mistake in in pp_sys.c. */
+#define  OP_BINARY	O_BINARY	/* Mistake in in pp_sys.c. */
 
 #undef	 pipe
-#define  pipe(fd)	win32_pipe((fd), 512, _O_BINARY) /* the pipe call is a bit different */
+#define  pipe(fd)	win32_pipe((fd), 512, O_BINARY) /* the pipe call is a bit different */
 
 #undef	 pause
 #define  pause()	sleep((32767L << 16) + 32767)
@@ -73,7 +96,7 @@
 };
 
 unsigned int sleep(unsigned int);
-char *win32PerlLibPath();
+char *win32PerlLibPath(void);
 int mytimes(struct tms *timebuf);
 unsigned int myalarm(unsigned int sec);
 int do_aspawn(void* really, void** mark, void** arglast);
@@ -86,6 +109,7 @@
  */
 
 #define DllExport	__declspec(dllexport)
+#define DllImport	__declspec(dllimport)
 
 /*
  * handle socket stuff, assuming socket is always available
@@ -94,7 +118,9 @@
 #include <sys/socket.h>
 #include <netdb.h>
 
+#ifdef _MSC_VER
 #pragma  warning(disable: 4018 4035 4101 4102 4244 4245 4761)
+#endif
 
 int IsWin95(void);
 int IsWinNT(void);
diff -ur perl5.004/win32/win32io.c perl5.004-bc/win32/win32io.c
--- perl5.004/win32/win32io.c	Wed May 21 11:19:34 1997
+++ perl5.004-bc/win32/win32io.c	Mon May 19 22:23:40 1997
@@ -65,7 +65,7 @@
     return o;
 }
 
-#ifdef _DLL
+#if defined(_DLL) || defined(__BORLANDC__)
 /* It may or may not be fixed (ok on NT), but DLL runtime
    does not export the functions used in the workround
 */
@@ -147,10 +147,10 @@
     /* copy relevant flags from second parameter */
     fileflags = FDEV;
 
-    if(flags & _O_APPEND)
+    if(flags & O_APPEND)
 	fileflags |= FAPPEND;
 
-    if(flags & _O_TEXT)
+    if(flags & O_TEXT)
 	fileflags |= FTEXT;
 
     /* attempt to allocate a C Runtime file handle */
@@ -190,6 +190,9 @@
     return _get_osfhandle(filehandle);
 }
 
+#ifdef __BORLANDC__
+#define _chdir chdir
+#endif
 
 /* simulate flock by locking a range on the file */
 
diff -ur perl5.004/win32/win32io.h perl5.004-bc/win32/win32io.h
--- perl5.004/win32/win32io.h	Wed May 21 11:19:34 1997
+++ perl5.004-bc/win32/win32io.h	Sun May 18 14:48:30 1997
@@ -1,6 +1,10 @@
 #ifndef WIN32IO_H
 #define WIN32IO_H
 
+#ifdef __BORLANDC__
+#include <stdarg.h>
+#endif
+
 typedef struct {
 int	signature_begin;
 int *	(*pfnerrno)(void);
diff -ur perl5.004/win32/win32iop.h perl5.004-bc/win32/win32iop.h
--- perl5.004/win32/win32iop.h	Wed May 21 11:19:34 1997
+++ perl5.004-bc/win32/win32iop.h	Mon May 19 21:28:50 1997
@@ -9,8 +9,8 @@
 /*
  * function prototypes for our own win32io layer
  */
-EXT int * 	win32_errno();
-EXT char *** 	win32_environ();
+EXT int * 	win32_errno(void);
+EXT char *** 	win32_environ(void);
 EXT FILE*	win32_stdin(void);
 EXT FILE*	win32_stdout(void);
 EXT FILE*	win32_stderr(void);
@@ -94,6 +94,12 @@
 #undef stdout
 #undef ferror
 #undef feof
+
+#ifdef __BORLANDC__
+#undef ungetc
+#undef getc
+#undef fileno
+#endif
 
 #define stderr				win32_stderr()
 #define stdout				win32_stdout()
diff -ur perl5.004/win32/win32sck.c perl5.004-bc/win32/win32sck.c
--- perl5.004/win32/win32sck.c	Wed May 21 11:19:34 1997
+++ perl5.004-bc/win32/win32sck.c	Mon May 19 22:23:18 1997
@@ -22,7 +22,7 @@
 #ifdef USE_SOCKETS_AS_HANDLES
 /* thanks to Beverly Brown	(beverly@datacube.com) */
 
-#define OPEN_SOCKET(x)	_open_osfhandle(x,_O_RDWR|_O_BINARY)
+#define OPEN_SOCKET(x)	_open_osfhandle(x,O_RDWR|O_BINARY)
 #define TO_SOCKET(x)	_get_osfhandle(x)
 
 #else
--- /dev/null	Tue May 27 15:27:30 1997
+++ perl5.004-bc/lib/File/DosGlob.pm	Tue May 27 15:27:30 1997
@@ -0,0 +1,201 @@
+#!perl -w
+
+#
+# Documentation at the __END__
+#
+
+package File::DosGlob;
+
+unless (caller) {
+    $| = 1;
+    while (@ARGV) {
+	#
+	# We have to do this one by one for compatibility reasons.
+	# If an arg doesn't match anything, we are supposed to return
+	# the original arg.  I know, it stinks, eh?
+	#
+	my $arg = shift;
+	my @m = doglob(1,$arg);
+	print (@m ? join("\0", sort @m) : $arg);
+	print "\0" if @ARGV;
+    }
+}
+
+sub doglob {
+    my $cond = shift;
+    my @retval = ();
+    #print "doglob: ", join('|', @_), "\n";
+  OUTER:
+    for my $arg (@_) {
+        local $_ = $arg;
+	my @matched = ();
+	my @globdirs = ();
+	my $head = '.';
+	my $sepchr = '/';
+	next OUTER unless defined $_ and $_ ne '';
+	# if arg is within quotes strip em and do no globbing
+	if (/^"(.*)"$/) {
+	    $_ = $1;
+	    if ($cond eq 'd') { push(@retval, $_) if -d $_ }
+	    else              { push(@retval, $_) if -e $_ }
+	    next OUTER;
+	}
+	if (m|^(.*)([\\/])([^\\/]*)$|) {
+	    my $tail;
+	    ($head, $sepchr, $tail) = ($1,$2,$3);
+	    #print "div: |$head|$sepchr|$tail|\n";
+	    push (@retval, $_), next OUTER if $tail eq '';
+	    if ($head =~ /[*?]/) {
+		@globdirs = doglob('d', $head);
+		push(@retval, doglob($cond, map {"$_$sepchr$tail"} @globdirs)),
+		    next OUTER if @globdirs;
+	    }
+	    $head .= $sepchr if $head eq '' or $head =~ /^[A-Za-z]:$/;
+	    $_ = $tail;
+	}
+	#
+	# If file component has no wildcards, we can avoid opendir
+	unless (/[*?]/) {
+	    $head = '' if $head eq '.';
+	    $head .= $sepchr unless $head eq '' or substr($head,-1) eq $sepchr;
+	    $head .= $_;
+	    if ($cond eq 'd') { push(@retval,$head) if -d $head }
+	    else              { push(@retval,$head) if -e $head }
+	    next OUTER;
+	}
+	opendir(D, $head) or next OUTER;
+	my @leaves = readdir D;
+	closedir D;
+	$head = '' if $head eq '.';
+	$head .= $sepchr unless $head eq '' or substr($head,-1) eq $sepchr;
+
+	# escape regex metachars but not glob chars
+	s:([].+^\-\${}[|]):\\$1:g;
+	# and convert DOS-style wildcards to regex
+	s/\*/.*/g;
+	s/\?/.?/g;
+
+	#print "regex: '$_', head: '$head'\n";
+	my $matchsub = eval 'sub { $_[0] =~ m|^' . $_ . '$|io }';
+	warn($@), next OUTER if $@;
+      INNER:
+	for my $e (@leaves) {
+	    next INNER if $e eq '.' or $e eq '..';
+	    next INNER if $cond eq 'd' and ! -d "$head$e";
+	    push(@matched, "$head$e"), next INNER if &$matchsub($e);
+	    #
+	    # [DOS compatibility special case]
+	    # Failed, add a trailing dot and try again, but only
+	    # if name does not have a dot in it *and* pattern
+	    # has a dot *and* name is shorter than 9 chars.
+	    #
+	    if (index($e,'.') == -1 and length($e) < 9
+	        and index($_,'\\.') != -1) {
+		push(@matched, "$head$e"), next INNER if &$matchsub("$e.");
+	    }
+	}
+	push @retval, @matched if @matched;
+    }
+    return @retval;
+}
+
+#
+# this can be used to override CORE::glob
+# by saying C<use File::DosGlob 'glob';>.
+#
+sub glob { doglob(1,@_) }
+
+sub import {
+    my $pkg = shift;
+    my $callpkg = caller(0);
+    my $sym = shift;
+    *{$callpkg.'::'.$sym} = \&{$pkg.'::'.$sym} if $sym eq 'glob';
+}
+
+1;
+
+__END__
+
+=head1 NAME
+
+File::DosGlob - DOS like globbing and then some
+
+perlglob.bat - a more capable perlglob.exe replacement
+
+=head1 SYNOPSIS
+
+    require 5.004;
+    use File::DosGlob 'glob';  # override CORE::glob
+    @perlfiles = glob  "..\\pe?l/*.p?";
+    print <..\\pe?l/*.p?>;
+    
+    # from the command line
+    > perl -MFile::DosGlob=glob -e "print <../pe*/*p?>"
+    
+    > perlglob ../pe*/*p?
+
+=head1 DESCRIPTION
+
+A module that implements DOS-like globbing with a few enhancements.
+This file is also a portable replacement for perlglob.exe.  It
+is largely compatible with perlglob.exe (the M$ setargv.obj
+version) in all but one respect--it understands wildcards in
+directory components.
+
+For example, C<<..\\l*b\\file/*glob.p?>> will work as expected (in
+that it will find something like '..\lib\File/DosGlob.pm' alright).
+Note that all path components are case-insensitive, and that
+backslashes and forward slashes are both accepted, and preserved.
+You may have to double the backslashes if you are putting them in
+literally, due to double-quotish parsing of the pattern by perl.
+
+When invoked as a program, it will print null-separated filenames
+to standard output.
+
+While one may replace perlglob.exe with this, usage by overriding
+CORE::glob via importation should be much more efficient, because
+it avoids launching a separate process, and is therefore strongly
+recommended.
+
+Extending it to csh patterns is left as an exercise to the reader.
+
+=head1 EXPORTS (by request only)
+
+glob()
+
+=head1 BUGS
+
+Should probably be built into the core, and needs to stop
+pandering to DOS habits.  Needs a dose of optimizium too.
+
+=head1 AUTHOR
+
+Gurusamy Sarathy <gsar@umich.edu>
+
+=head1 HISTORY
+
+=over 4
+
+=item *
+
+A few dir-vs-file optimizations result in glob importation being
+10 times faster than using perlglob.exe, and using perlglob.bat is
+only twice as slow as perlglob.exe (GSAR 28-MAY-97)
+
+=item *
+
+Several cleanups prompted by lack of compatible perlglob.exe
+under Borland (GSAR 27-MAY-97)
+
+=item *
+
+Initial version (GSAR 20-FEB-97)
+
+=back
+
+=head1 SEE ALSO
+
+perl
+
+=cut
+
--- /dev/null	Tue May 27 15:27:30 1997
+++ perl5.004-bc/win32/config.bc	Mon May 26 14:35:06 1997
@@ -0,0 +1,498 @@
+#
+## This file was hand coded and a lot of information is invalid
+#
+## Configured by: garyng
+## Target system: WIN32 
+#
+
+archlibexp='~INST_TOP~\lib'
+archname='MSWin32'
+cc='bcc32'
+ccflags='-DWIN32'
+cppflags='-DWIN32'
+dlsrc='dl_win32.xs'
+dynamic_ext='Fcntl IO Opcode SDBM_File Socket'
+extensions='Fcntl IO Opcode SDBM_File Socket'
+installarchlib='~INST_TOP~\lib'
+installprivlib='~INST_TOP~\lib'
+libpth=''
+libs=''
+osname='MSWin32'
+osvers='4.0'
+prefix='~INST_DRV~'
+privlibexp='~INST_TOP~\lib'
+sharpbang='#!'
+shsharp='true'
+sig_name='ZERO HUP INT QUIT ILL TRAP ABRT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM USR1 USR2 CHLD PWR WINCH URG IO STOP TSTP CONT TTIN TTOU VTALRM PROF XCPU XFSZ WAITING LWP FREEZE THAW RTMIN NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 RTMAX IOT CLD POLL'
+so='dll'
+startsh='#!/bin/sh'
+static_ext=' '
+Author=''
+CONFIG='true'
+Date='$Date'
+Header=''
+Id='$Id'
+Locker=''
+Log='$Log'
+Mcc='Mcc'
+PATCHLEVEL='~PATCHLEVEL~'
+POSIX_cflags='ccflags="$ccflags -DSTRUCT_TM_HASZONE"'
+RCSfile='$RCSfile'
+Revision='$Revision'
+SUBVERSION='~SUBVERSION~'
+Source=''
+State=''
+afs='false'
+alignbytes='8'
+aphostname=''
+ar='tlib'
+archlib='~INST_TOP~\lib'
+archobjs=''
+awk='awk'
+baserev='5.0'
+bash=''
+bin='~INST_TOP~\bin'
+binexp='~INST_TOP~\bin'
+bison=''
+byacc='byacc'
+byteorder='1234'
+c=''
+castflags='0'
+cat='cat'
+cccdlflags=''
+ccdlflags=' '
+cf_by='garyng'
+cf_email='71564.1743@compuserve.com'
+cf_time='Thu Apr 11 06:20:49 PDT 1996'
+chgrp=''
+chmod=''
+chown=''
+clocktype='clock_t'
+comm='comm'
+compress=''
+contains='grep'
+cp='cp'
+cpio=''
+cpp='cpp32'
+cpp_stuff='42'
+cpplast=''
+cppminus=''
+cpprun=''
+cppstdin=''
+cryptlib=''
+csh='undef'
+d_Gconvert='sprintf((b),"%.*g",(n),(x))'
+d_access='define'
+d_alarm='undef'
+d_archlib='define'
+d_attribut='undef'
+d_bcmp='undef'
+d_bcopy='undef'
+d_bincompat3='undef'
+d_bsd='define'
+d_bsdgetpgrp='undef'
+d_bsdpgrp='undef'
+d_bsdsetpgrp='undef'
+d_bzero='undef'
+d_casti32='define'
+d_castneg='define'
+d_charvspr='undef'
+d_chown='undef'
+d_chroot='undef'
+d_chsize='define'
+d_closedir='define'
+d_const='define'
+d_crypt='undef'
+d_csh='undef'
+d_cuserid='undef'
+d_dbl_dig='define'
+d_difftime='define'
+d_dirnamlen='define'
+d_dlerror='define'
+d_dlopen='define'
+d_dlsymun='undef'
+d_dosuid='undef'
+d_dup2='define'
+d_eofnblk='define'
+d_eunice='undef'
+d_fchmod='undef'
+d_fchown='undef'
+d_fcntl='undef'
+d_fd_macros='define'
+d_fd_set='define'
+d_fds_bits='define'
+d_fgetpos='define'
+d_flexfnam='define'
+d_flock='define'
+d_fork='undef'
+d_fpathconf='undef'
+d_fsetpos='define'
+d_getgrps='undef'
+d_setgrps='undef'
+d_gethent='undef'
+d_gethname='undef'
+d_getlogin='undef'
+d_getpgrp2='undef'
+d_getpgrp='undef'
+d_getpgid='undef'
+d_getppid='undef'
+d_getprior='undef'
+d_gettimeod='undef'
+d_htonl='define'
+d_index='undef'
+d_inetaton='undef'
+d_isascii='define'
+d_killpg='undef'
+d_link='undef'
+d_locconv='define'
+d_lockf='undef'
+d_lstat='undef'
+d_mblen='define'
+d_mbstowcs='define'
+d_mbtowc='define'
+d_memcmp='define'
+d_memcpy='define'
+d_memmove='define'
+d_memset='define'
+d_mkdir='define'
+d_mkfifo='undef'
+d_mktime='define'
+d_msg='undef'
+d_msgctl='define'
+d_msgget='define'
+d_msgrcv='define'
+d_msgsnd='define'
+d_mymalloc='undef'
+d_nice='undef'
+d_oldarchlib='undef'
+d_oldsock='undef'
+d_open3='undef'
+d_pathconf='undef'
+d_pause='define'
+d_phostname='undef'
+d_pipe='define'
+d_poll='undef'
+d_portable='define'
+d_pwage='undef'
+d_pwchange='undef'
+d_pwclass='undef'
+d_pwcomment='undef'
+d_pwexpire='undef'
+d_pwquota='undef'
+d_readdir='define'
+d_readlink='undef'
+d_rename='define'
+d_rewinddir='define'
+d_rmdir='define'
+d_safebcpy='undef'
+d_safemcpy='undef'
+d_sanemcmp='define'
+d_seekdir='define'
+d_select='define'
+d_sem='undef'
+d_semctl='define'
+d_semget='define'
+d_semop='define'
+d_setegid='undef'
+d_seteuid='undef'
+d_setlinebuf='undef'
+d_setlocale='define'
+d_setpgid='undef'
+d_setpgrp2='undef'
+d_setpgrp='undef'
+d_setprior='undef'
+d_setregid='undef'
+d_setresgid='undef'
+d_setresuid='undef'
+d_setreuid='undef'
+d_setrgid='undef'
+d_setruid='undef'
+d_setsid='undef'
+d_sfio='undef'
+d_shm='undef'
+d_shmat='undef'
+d_shmatprototype='undef'
+d_shmctl='define'
+d_shmdt='define'
+d_shmget='define'
+d_shrplib='undef'
+d_sigaction='undef'
+d_sigintrp=''
+d_sigsetjmp='undef'
+d_sigvec='define'
+d_sigvectr='undef'
+d_socket='define'
+d_sockpair='undef'
+d_statblks='undef'
+d_stdio_cnt_lval='define'
+d_stdio_ptr_lval='define'
+d_stdiobase='define'
+d_stdstdio='define'
+d_strchr='define'
+d_strcoll='define'
+d_strctcpy='define'
+d_strerrm='strerror(e)'
+d_strerror='define'
+d_strtod='define'
+d_strtol='define'
+d_strtoul='define'
+d_strxfrm='define'
+d_suidsafe='undef'
+d_symlink='undef'
+d_syscall='undef'
+d_sysconf='undef'
+d_sysernlst=''
+d_syserrlst='define'
+d_system='define'
+d_tcgetpgrp='undef'
+d_tcsetpgrp='undef'
+d_telldir='define'
+d_time='define'
+d_times='define'
+d_truncate='undef'
+d_tzname='define'
+d_umask='define'
+d_uname='undef'
+d_vfork='undef'
+d_void_closedir='undef'
+d_voidsig='define'
+d_voidtty=''
+d_volatile='define'
+d_vprintf='define'
+d_wait4='undef'
+d_waitpid='undef'
+d_wcstombs='define'
+d_wctomb='define'
+d_xenix='undef'
+date='date'
+db_hashtype='int'
+db_prefixtype='int'
+defvoidused='15'
+direntrytype='struct direct'
+dlext='dll'
+eagain='EAGAIN'
+echo='echo'
+egrep='egrep'
+emacs=''
+eunicefix=':'
+exe_ext='.exe'
+expr='expr'
+find='find'
+firstmakefile='makefile'
+flex=''
+fpostype='fpos_t'
+freetype='void'
+full_csh=''
+full_sed=''
+gcc=''
+gccversion=''
+gidtype='gid_t'
+glibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '
+grep='grep'
+groupcat=''
+groupstype='gid_t'
+h_fcntl='false'
+h_sysfile='true'
+hint='recommended'
+hostcat='ypcat hosts'
+huge=''
+i_bsdioctl=''
+i_db='undef'
+i_dbm='undef'
+i_dirent='define'
+i_dld='undef'
+i_dlfcn='define'
+i_fcntl='define'
+i_float='define'
+i_gdbm='define'
+i_grp='define'
+i_limits='define'
+i_locale='define'
+i_malloc='define'
+i_math='define'
+i_memory='undef'
+i_ndbm='undef'
+i_neterrno='undef'
+i_niin='undef'
+i_pwd='undef'
+i_rpcsvcdbm='define'
+i_sfio='undef'
+i_sgtty='undef'
+i_stdarg='define'
+i_stddef='define'
+i_stdlib='define'
+i_string='define'
+i_sysdir='undef'
+i_sysfile='undef'
+i_sysfilio='define'
+i_sysin='undef'
+i_sysioctl='undef'
+i_sysndir='undef'
+i_sysparam='undef'
+i_sysresrc='undef'
+i_sysselct='undef'
+i_syssockio=''
+i_sysstat='define'
+i_systime='undef'
+i_systimek='undef'
+i_systimes='undef'
+i_systypes='define'
+i_sysun='undef'
+i_syswait='undef'
+i_termio='undef'
+i_termios='undef'
+i_time='define'
+i_unistd='undef'
+i_utime='define'
+i_values='undef'
+i_varargs='undef'
+i_varhdr='varargs.h'
+i_vfork='undef'
+incpath=''
+inews=''
+installbin='~INST_TOP~\bin'
+installman1dir='~INST_TOP~\man\man1'
+installman3dir='~INST_TOP~\man\man3'
+installscript='~INST_TOP~\bin'
+installsitearch='~INST_TOP~\lib\site'
+installsitelib='~INST_TOP~\lib\site'
+intsize='4'
+known_extensions='DB_File Fcntl GDBM_File NDBM_File ODBM_File Opcode POSIX SDBM_File Socket'
+ksh=''
+large=''
+ld='tlink32'
+lddlflags='-Tpd'
+ldflags=''
+less='less'
+lib_ext='.lib'
+libc='import32.lib'
+libswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl dld ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'
+line='line'
+lint=''
+lkflags=''
+ln=''
+lns=''
+locincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'
+loclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'
+longsize='4'
+lp=''
+lpr=''
+ls='ls'
+lseektype='off_t'
+mail=''
+mailx=''
+make='dmake'
+mallocobj='malloc.o'
+mallocsrc='malloc.c'
+malloctype='void *'
+man1dir='~INST_TOP~\man\man1'
+man1direxp='~INST_TOP~\man\man1'
+man1ext='1'
+man3dir='~INST_TOP~\man\man3'
+man3direxp='~INST_TOP~\man\man3'
+man3ext='3'
+medium=''
+mips=''
+mips_type=''
+mkdir='mkdir'
+models='none'
+modetype='mode_t'
+more='more /e'
+mv=''
+myarchname='MSWin32'
+mydomain=''
+myhostname=''
+myuname=''
+n='-n'
+nm_opt=''
+nm_so_opt=''
+nroff=''
+o_nonblock='O_NONBLOCK'
+obj_ext='.obj'
+oldarchlib=''
+oldarchlibexp=''
+optimize='-O'
+orderlib='false'
+package='perl5'
+pager='more /e'
+passcat=''
+patchlevel='2'
+path_sep=';'
+perl='perl'
+perladmin=''
+perlpath='~INST_TOP~\bin\perl.exe'
+pg='pg'
+phostname='hostname'
+plibpth=''
+pmake=''
+pr=''
+prefixexp='~INST_DRV~'
+privlib='~INST_TOP~\lib'
+prototype='define'
+randbits='15'
+ranlib=''
+rd_nodata='-1'
+rm='rm'
+rmail=''
+runnm='true'
+scriptdir='~INST_TOP~\bin'
+scriptdirexp='~INST_TOP~\bin'
+sed='sed'
+selecttype='int *'
+sendmail='blat'
+sh='cmd /x /c'
+shar=''
+shmattype='void *'
+shortsize='2'
+shrpdir='none'
+sig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 6 18 22'
+signal_t='void'
+sitearch='~INST_TOP~\lib\site'
+sitearchexp='~INST_TOP~\lib\site'
+sitelib='~INST_TOP~\lib\site'
+sitelibexp='~INST_TOP~\lib\site'
+sizetype='size_t'
+sleep=''
+smail=''
+small=''
+sockethdr=''
+socketlib=''
+sort='sort'
+spackage='Perl5'
+spitshell='cat'
+split=''
+ssizetype='int'
+startperl='#perl'
+stdchar='unsigned char'
+stdio_base='((fp)->buffer)'
+stdio_bufsiz='((fp)->level + (fp)->curp - (fp)->buffer)'
+stdio_cnt='((fp)->level)'
+stdio_ptr='((fp)->curp)'
+strings='/usr/include/string.h'
+submit=''
+sysman='/usr/man/man1'
+tail=''
+tar=''
+tbl=''
+test='test'
+timeincl='/usr/include/sys/time.h '
+timetype='time_t'
+touch='touch'
+tr='tr'
+troff=''
+uidtype='uid_t'
+uname='uname'
+uniq='uniq'
+usedl='define'
+usemymalloc='n'
+usenm='false'
+useperlio='undef'
+useposix='true'
+usesafe='true'
+usevfork='false'
+usrinc='/usr/include'
+uuname=''
+vi=''
+voidflags='15'
+xlibpth='/usr/lib/386 /lib/386'
+zcat=''
--- /dev/null	Tue May 27 15:27:30 1997
+++ perl5.004-bc/win32/config.vc	Tue May 20 04:14:14 1997
@@ -0,0 +1,498 @@
+#
+## This file was hand coded and a lot of information is invalid
+#
+## Configured by: garyng
+## Target system: WIN32 
+#
+
+archlibexp='~INST_TOP~\lib'
+archname='MSWin32'
+cc='cl'
+ccflags='-MD -DWIN32'
+cppflags='-DWIN32'
+dlsrc='dl_win32.xs'
+dynamic_ext='Fcntl IO Opcode SDBM_File Socket'
+extensions='Fcntl IO Opcode SDBM_File Socket'
+installarchlib='~INST_TOP~\lib'
+installprivlib='~INST_TOP~\lib'
+libpth=''
+libs=''
+osname='MSWin32'
+osvers='4.0'
+prefix='~INST_DRV~'
+privlibexp='~INST_TOP~\lib'
+sharpbang='#!'
+shsharp='true'
+sig_name='ZERO HUP INT QUIT ILL TRAP ABRT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM USR1 USR2 CHLD PWR WINCH URG IO STOP TSTP CONT TTIN TTOU VTALRM PROF XCPU XFSZ WAITING LWP FREEZE THAW RTMIN NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 RTMAX IOT CLD POLL'
+so='dll'
+startsh='#!/bin/sh'
+static_ext=' '
+Author=''
+CONFIG='true'
+Date='$Date'
+Header=''
+Id='$Id'
+Locker=''
+Log='$Log'
+Mcc='Mcc'
+PATCHLEVEL='~PATCHLEVEL~'
+POSIX_cflags='ccflags="$ccflags -DSTRUCT_TM_HASZONE"'
+RCSfile='$RCSfile'
+Revision='$Revision'
+SUBVERSION='~SUBVERSION~'
+Source=''
+State=''
+afs='false'
+alignbytes='8'
+aphostname=''
+ar='lib'
+archlib='~INST_TOP~\lib'
+archobjs=''
+awk='awk'
+baserev='5.0'
+bash=''
+bin='~INST_TOP~\bin'
+binexp='~INST_TOP~\bin'
+bison=''
+byacc='byacc'
+byteorder='1234'
+c=''
+castflags='0'
+cat='cat'
+cccdlflags=''
+ccdlflags=' '
+cf_by='garyng'
+cf_email='71564.1743@compuserve.com'
+cf_time='Thu Apr 11 06:20:49 PDT 1996'
+chgrp=''
+chmod=''
+chown=''
+clocktype='clock_t'
+comm='comm'
+compress=''
+contains='grep'
+cp='cp'
+cpio=''
+cpp='cpp'
+cpp_stuff='42'
+cpplast=''
+cppminus=''
+cpprun='cl -E'
+cppstdin='cl -E'
+cryptlib=''
+csh='undef'
+d_Gconvert='sprintf((b),"%.*g",(n),(x))'
+d_access='define'
+d_alarm='undef'
+d_archlib='define'
+d_attribut='undef'
+d_bcmp='undef'
+d_bcopy='undef'
+d_bincompat3='undef'
+d_bsd='define'
+d_bsdgetpgrp='undef'
+d_bsdpgrp='undef'
+d_bsdsetpgrp='undef'
+d_bzero='undef'
+d_casti32='define'
+d_castneg='define'
+d_charvspr='undef'
+d_chown='undef'
+d_chroot='undef'
+d_chsize='define'
+d_closedir='define'
+d_const='define'
+d_crypt='undef'
+d_csh='undef'
+d_cuserid='undef'
+d_dbl_dig='define'
+d_difftime='define'
+d_dirnamlen='define'
+d_dlerror='define'
+d_dlopen='define'
+d_dlsymun='undef'
+d_dosuid='undef'
+d_dup2='define'
+d_eofnblk='define'
+d_eunice='undef'
+d_fchmod='undef'
+d_fchown='undef'
+d_fcntl='undef'
+d_fd_macros='define'
+d_fd_set='define'
+d_fds_bits='define'
+d_fgetpos='define'
+d_flexfnam='define'
+d_flock='define'
+d_fork='undef'
+d_fpathconf='undef'
+d_fsetpos='define'
+d_getgrps='undef'
+d_setgrps='undef'
+d_gethent='undef'
+d_gethname='undef'
+d_getlogin='undef'
+d_getpgrp2='undef'
+d_getpgrp='undef'
+d_getpgid='undef'
+d_getppid='undef'
+d_getprior='undef'
+d_gettimeod='undef'
+d_htonl='define'
+d_index='undef'
+d_inetaton='undef'
+d_isascii='define'
+d_killpg='undef'
+d_link='undef'
+d_locconv='define'
+d_lockf='undef'
+d_lstat='undef'
+d_mblen='define'
+d_mbstowcs='define'
+d_mbtowc='define'
+d_memcmp='define'
+d_memcpy='define'
+d_memmove='define'
+d_memset='define'
+d_mkdir='define'
+d_mkfifo='undef'
+d_mktime='define'
+d_msg='undef'
+d_msgctl='define'
+d_msgget='define'
+d_msgrcv='define'
+d_msgsnd='define'
+d_mymalloc='undef'
+d_nice='undef'
+d_oldarchlib='undef'
+d_oldsock='undef'
+d_open3='undef'
+d_pathconf='undef'
+d_pause='define'
+d_phostname='undef'
+d_pipe='define'
+d_poll='undef'
+d_portable='define'
+d_pwage='undef'
+d_pwchange='undef'
+d_pwclass='undef'
+d_pwcomment='undef'
+d_pwexpire='undef'
+d_pwquota='undef'
+d_readdir='define'
+d_readlink='undef'
+d_rename='define'
+d_rewinddir='define'
+d_rmdir='define'
+d_safebcpy='undef'
+d_safemcpy='undef'
+d_sanemcmp='define'
+d_seekdir='define'
+d_select='define'
+d_sem='undef'
+d_semctl='define'
+d_semget='define'
+d_semop='define'
+d_setegid='undef'
+d_seteuid='undef'
+d_setlinebuf='undef'
+d_setlocale='define'
+d_setpgid='undef'
+d_setpgrp2='undef'
+d_setpgrp='undef'
+d_setprior='undef'
+d_setregid='undef'
+d_setresgid='undef'
+d_setresuid='undef'
+d_setreuid='undef'
+d_setrgid='undef'
+d_setruid='undef'
+d_setsid='undef'
+d_sfio='undef'
+d_shm='undef'
+d_shmat='undef'
+d_shmatprototype='undef'
+d_shmctl='define'
+d_shmdt='define'
+d_shmget='define'
+d_shrplib='undef'
+d_sigaction='undef'
+d_sigintrp=''
+d_sigsetjmp='undef'
+d_sigvec='define'
+d_sigvectr='undef'
+d_socket='define'
+d_sockpair='undef'
+d_statblks='undef'
+d_stdio_cnt_lval='define'
+d_stdio_ptr_lval='define'
+d_stdiobase='define'
+d_stdstdio='define'
+d_strchr='define'
+d_strcoll='define'
+d_strctcpy='define'
+d_strerrm='strerror(e)'
+d_strerror='define'
+d_strtod='define'
+d_strtol='define'
+d_strtoul='define'
+d_strxfrm='define'
+d_suidsafe='undef'
+d_symlink='undef'
+d_syscall='undef'
+d_sysconf='undef'
+d_sysernlst=''
+d_syserrlst='define'
+d_system='define'
+d_tcgetpgrp='undef'
+d_tcsetpgrp='undef'
+d_telldir='define'
+d_time='define'
+d_times='define'
+d_truncate='undef'
+d_tzname='define'
+d_umask='define'
+d_uname='undef'
+d_vfork='undef'
+d_void_closedir='undef'
+d_voidsig='define'
+d_voidtty=''
+d_volatile='define'
+d_vprintf='define'
+d_wait4='undef'
+d_waitpid='undef'
+d_wcstombs='define'
+d_wctomb='define'
+d_xenix='undef'
+date='date'
+db_hashtype='int'
+db_prefixtype='int'
+defvoidused='15'
+direntrytype='struct direct'
+dlext='dll'
+eagain='EAGAIN'
+echo='echo'
+egrep='egrep'
+emacs=''
+eunicefix=':'
+exe_ext='.exe'
+expr='expr'
+find='find'
+firstmakefile='makefile'
+flex=''
+fpostype='fpos_t'
+freetype='void'
+full_csh=''
+full_sed=''
+gcc=''
+gccversion=''
+gidtype='gid_t'
+glibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '
+grep='grep'
+groupcat=''
+groupstype='gid_t'
+h_fcntl='false'
+h_sysfile='true'
+hint='recommended'
+hostcat='ypcat hosts'
+huge=''
+i_bsdioctl=''
+i_db='undef'
+i_dbm='undef'
+i_dirent='define'
+i_dld='undef'
+i_dlfcn='define'
+i_fcntl='define'
+i_float='define'
+i_gdbm='define'
+i_grp='define'
+i_limits='define'
+i_locale='define'
+i_malloc='define'
+i_math='define'
+i_memory='undef'
+i_ndbm='undef'
+i_neterrno='undef'
+i_niin='undef'
+i_pwd='undef'
+i_rpcsvcdbm='define'
+i_sfio='undef'
+i_sgtty='undef'
+i_stdarg='define'
+i_stddef='define'
+i_stdlib='define'
+i_string='define'
+i_sysdir='undef'
+i_sysfile='undef'
+i_sysfilio='define'
+i_sysin='undef'
+i_sysioctl='undef'
+i_sysndir='undef'
+i_sysparam='undef'
+i_sysresrc='undef'
+i_sysselct='undef'
+i_syssockio=''
+i_sysstat='define'
+i_systime='undef'
+i_systimek='undef'
+i_systimes='undef'
+i_systypes='define'
+i_sysun='undef'
+i_syswait='undef'
+i_termio='undef'
+i_termios='undef'
+i_time='define'
+i_unistd='undef'
+i_utime='define'
+i_values='undef'
+i_varargs='undef'
+i_varhdr='varargs.h'
+i_vfork='undef'
+incpath=''
+inews=''
+installbin='~INST_TOP~\bin'
+installman1dir='~INST_TOP~\man\man1'
+installman3dir='~INST_TOP~\man\man3'
+installscript='~INST_TOP~\bin'
+installsitearch='~INST_TOP~\lib\site'
+installsitelib='~INST_TOP~\lib\site'
+intsize='4'
+known_extensions='DB_File Fcntl GDBM_File NDBM_File ODBM_File Opcode POSIX SDBM_File Socket'
+ksh=''
+large=''
+ld='link'
+lddlflags='-dll'
+ldflags='-nologo -subsystem:windows'
+less='less'
+lib_ext='.lib'
+libc='msvcrt.lib'
+libswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl dld ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'
+line='line'
+lint=''
+lkflags=''
+ln=''
+lns=''
+locincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'
+loclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'
+longsize='4'
+lp=''
+lpr=''
+ls='ls'
+lseektype='off_t'
+mail=''
+mailx=''
+make='nmake'
+mallocobj='malloc.o'
+mallocsrc='malloc.c'
+malloctype='void *'
+man1dir='~INST_TOP~\man\man1'
+man1direxp='~INST_TOP~\man\man1'
+man1ext='1'
+man3dir='~INST_TOP~\man\man3'
+man3direxp='~INST_TOP~\man\man3'
+man3ext='3'
+medium=''
+mips=''
+mips_type=''
+mkdir='mkdir'
+models='none'
+modetype='mode_t'
+more='more /e'
+mv=''
+myarchname='MSWin32'
+mydomain=''
+myhostname=''
+myuname=''
+n='-n'
+nm_opt=''
+nm_so_opt=''
+nroff=''
+o_nonblock='O_NONBLOCK'
+obj_ext='.obj'
+oldarchlib=''
+oldarchlibexp=''
+optimize='-O'
+orderlib='false'
+package='perl5'
+pager='more /e'
+passcat=''
+patchlevel='2'
+path_sep=';'
+perl='perl'
+perladmin=''
+perlpath='~INST_TOP~\bin\perl.exe'
+pg='pg'
+phostname='hostname'
+plibpth=''
+pmake=''
+pr=''
+prefixexp='~INST_DRV~'
+privlib='~INST_TOP~\lib'
+prototype='define'
+randbits='15'
+ranlib=''
+rd_nodata='-1'
+rm='rm'
+rmail=''
+runnm='true'
+scriptdir='~INST_TOP~\bin'
+scriptdirexp='~INST_TOP~\bin'
+sed='sed'
+selecttype='int *'
+sendmail='blat'
+sh='cmd /x /c'
+shar=''
+shmattype='void *'
+shortsize='2'
+shrpdir='none'
+sig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 6 18 22'
+signal_t='void'
+sitearch='~INST_TOP~\lib\site'
+sitearchexp='~INST_TOP~\lib\site'
+sitelib='~INST_TOP~\lib\site'
+sitelibexp='~INST_TOP~\lib\site'
+sizetype='size_t'
+sleep=''
+smail=''
+small=''
+sockethdr=''
+socketlib=''
+sort='sort'
+spackage='Perl5'
+spitshell='cat'
+split=''
+ssizetype='int'
+startperl='#perl'
+stdchar='unsigned char'
+stdio_base='((fp)->_base)'
+stdio_bufsiz='((fp)->_cnt + (fp)->_ptr - (fp)->_base)'
+stdio_cnt='((fp)->_cnt)'
+stdio_ptr='((fp)->_ptr)'
+strings='/usr/include/string.h'
+submit=''
+sysman='/usr/man/man1'
+tail=''
+tar=''
+tbl=''
+test='test'
+timeincl='/usr/include/sys/time.h '
+timetype='time_t'
+touch='touch'
+tr='tr'
+troff=''
+uidtype='uid_t'
+uname='uname'
+uniq='uniq'
+usedl='define'
+usemymalloc='n'
+usenm='false'
+useperlio='undef'
+useposix='true'
+usesafe='true'
+usevfork='false'
+usrinc='/usr/include'
+uuname=''
+vi=''
+voidflags='15'
+xlibpth='/usr/lib/386 /lib/386'
+zcat=''
--- /dev/null	Tue May 27 15:27:30 1997
+++ perl5.004-bc/win32/config_H.bc	Sat May 24 19:07:10 1997
@@ -0,0 +1,1798 @@
+/*
+ * This file was produced by running the config_h.SH script, which
+ * gets its values from config.sh, which is generally produced by
+ * running Configure.
+ *
+ * Feel free to modify any of this as the need arises.  Note, however,
+ * that running config_h.SH again will wipe out any changes you've made.
+ * For a more permanent change edit config.sh and rerun config_h.SH.
+ *
+ * $Id: Config_h.U,v 3.0.1.4 1995/09/25 09:10:49 ram Exp $
+ */
+
+/* Configuration time: Thu Apr 11 06:20:49 PDT 1996
+ * Configured by: garyng
+ * Target system: 
+ */
+
+#ifndef _config_h_
+#define _config_h_
+
+/* MEM_ALIGNBYTES:
+ *	This symbol contains the number of bytes required to align a
+ *	double. Usual values are 2, 4 and 8.
+ *	On NeXT starting with 3.2, you can build "Fat" Multiple Architecture
+ *	Binaries (MAB) for targets with varying alignment.  This only matters
+ *	for perl, where the config.h can be generated and installed on one
+ *	system, and used by a different architecture to build an extension.
+ *	The default is eight, for safety.
+ */
+#ifndef NeXT
+#define MEM_ALIGNBYTES 8	/**/
+#else  /* NeXT */
+#ifdef __m68k__
+#define MEM_ALIGNBYTES 2
+#else
+#ifdef __i386__
+#define MEM_ALIGNBYTES 4
+#else /* __hppa__, __sparc__ and default for unknown architectures */
+#define MEM_ALIGNBYTES 8
+#endif /* __i386__ */
+#endif /* __m68k__ */
+#endif /* NeXT */
+
+/* ARCHNAME:
+ *	This symbol holds a string representing the architecture name.
+ *	It may be used to construct an architecture-dependant pathname
+ *	where library files may be held under a private library, for
+ *	instance.
+ */
+#define ARCHNAME "MSWin32"		/**/
+
+/* BIN:
+ *	This symbol holds the path of the bin directory where the package will
+ *	be installed. Program must be prepared to deal with ~name substitution.
+ */
+/* BIN_EXP:
+ *	This symbol is the filename expanded version of the BIN symbol, for
+ *	programs that do not want to deal with that at run-time.
+ */
+#define BIN "c:\\perl\\bin"	/**/
+#define BIN_EXP "c:\\perl\\bin"	/**/
+
+/* CAT2:
+ *	This macro catenates 2 tokens together.
+ */
+/* STRINGIFY:
+ *	This macro surrounds its token with double quotes.
+ */
+#if 42 == 1
+#define CAT2(a,b)a/**/b
+#define CAT3(a,b,c)a/**/b/**/c
+#define CAT4(a,b,c,d)a/**/b/**/c/**/d
+#define CAT5(a,b,c,d,e)a/**/b/**/c/**/d/**/e
+#define STRINGIFY(a)"a"
+		/* If you can get stringification with catify, tell me how! */
+#endif
+#if 42 == 42
+#define CAT2(a,b)a ## b
+#define CAT3(a,b,c)a ## b ## c
+#define CAT4(a,b,c,d)a ## b ## c ## d
+#define CAT5(a,b,c,d,e)a ## b ## c ## d ## e
+#define StGiFy(a)# a
+#define STRINGIFY(a)StGiFy(a)
+#define SCAT2(a,b)StGiFy(a) StGiFy(b)
+#define SCAT3(a,b,c)StGiFy(a) StGiFy(b) StGiFy(c)
+#define SCAT4(a,b,c,d)StGiFy(a) StGiFy(b) StGiFy(c) StGiFy(d)
+#define SCAT5(a,b,c,d,e)StGiFy(a) StGiFy(b) StGiFy(c) StGiFy(d) StGiFy(e)
+#endif
+#ifndef CAT2
+#include "Bletch: How does this C preprocessor catenate tokens?"
+#endif
+
+/* CPPSTDIN:
+ *	This symbol contains the first part of the string which will invoke
+ *	the C preprocessor on the standard input and produce to standard
+ *	output.	 Typical value of "cc -E" or "/lib/cpp", but it can also
+ *	call a wrapper. See CPPRUN.
+ */
+/* CPPMINUS:
+ *	This symbol contains the second part of the string which will invoke
+ *	the C preprocessor on the standard input and produce to standard
+ *	output.  This symbol will have the value "-" if CPPSTDIN needs a minus
+ *	to specify standard input, otherwise the value is "".
+ */
+#define CPPSTDIN ""
+#define CPPMINUS ""
+
+/* HAS_ALARM:
+ *	This symbol, if defined, indicates that the alarm routine is
+ *	available.
+ */
+/*#define HAS_ALARM		/**/
+
+/* HASATTRIBUTE:
+ *	This symbol indicates the C compiler can check for function attributes,
+ *	such as printf formats. This is normally only supported by GNU cc.
+ */
+/*#define HASATTRIBUTE 	/**/
+#ifndef HASATTRIBUTE
+#define __attribute__(_arg_)
+#endif
+
+/* HAS_BCMP:
+ *	This symbol is defined if the bcmp() routine is available to
+ *	compare blocks of memory.
+ */
+/*#define HAS_BCMP	/**/
+
+/* HAS_BCOPY:
+ *	This symbol is defined if the bcopy() routine is available to
+ *	copy blocks of memory.
+ */
+/*#define HAS_BCOPY	/**/
+
+/* HAS_BZERO:
+ *	This symbol is defined if the bzero() routine is available to
+ *	set a memory block to 0.
+ */
+/*#define HAS_BZERO	/**/
+
+/* CASTI32:
+ *	This symbol is defined if the C compiler can cast negative
+ *	or large floating point numbers to 32-bit ints.
+ */
+#define	CASTI32		/**/
+
+/* CASTNEGFLOAT:
+ *	This symbol is defined if the C compiler can cast negative
+ *	numbers to unsigned longs, ints and shorts.
+ */
+/* CASTFLAGS:
+ *	This symbol contains flags that say what difficulties the compiler
+ *	has casting odd floating values to unsigned long:
+ *		0 = ok
+ *		1 = couldn't cast < 0
+ *		2 = couldn't cast >= 0x80000000
+ *		4 = couldn't cast in argument expression list
+ */
+#define	CASTNEGFLOAT		/**/
+#define CASTFLAGS 0		/**/
+
+/* HAS_CHOWN:
+ *	This symbol, if defined, indicates that the chown routine is
+ *	available.
+ */
+/*#define HAS_CHOWN		/**/
+
+/* HAS_CHROOT:
+ *	This symbol, if defined, indicates that the chroot routine is
+ *	available.
+ */
+/*#define HAS_CHROOT		/**/
+
+/* HAS_CHSIZE:
+ *	This symbol, if defined, indicates that the chsize routine is available
+ *	to truncate files.  You might need a -lx to get this routine.
+ */
+#define	HAS_CHSIZE		/**/
+
+/* VOID_CLOSEDIR:
+ *	This symbol, if defined, indicates that the closedir() routine
+ *	does not return a value.
+ */
+/*#define VOID_CLOSEDIR		/**/
+
+/* HASCONST:
+ *	This symbol, if defined, indicates that this C compiler knows about
+ *	the const type. There is no need to actually test for that symbol
+ *	within your programs. The mere use of the "const" keyword will
+ *	trigger the necessary tests.
+ */
+#define HASCONST	/**/
+#ifndef HASCONST
+#define const
+#endif
+
+/* HAS_CRYPT:
+ *	This symbol, if defined, indicates that the crypt routine is available
+ *	to encrypt passwords and the like.
+ */
+/*#define HAS_CRYPT		/**/
+
+/* HAS_CUSERID:
+ *	This symbol, if defined, indicates that the cuserid routine is
+ *	available to get character login names.
+ */
+/*#define HAS_CUSERID		/**/
+
+/* HAS_DBL_DIG:
+ *	This symbol, if defined, indicates that this system's <float.h>
+ *	or <limits.h> defines the symbol DBL_DIG, which is the number
+ *	of significant digits in a double precision number.  If this
+ *	symbol is not defined, a guess of 15 is usually pretty good.
+ */
+#define HAS_DBL_DIG 	/**/
+
+/* HAS_DIFFTIME:
+ *	This symbol, if defined, indicates that the difftime routine is
+ *	available.
+ */
+#define HAS_DIFFTIME		/**/
+
+/* HAS_DLERROR:
+ *	This symbol, if defined, indicates that the dlerror routine is
+ *	available to return a string describing the last error that
+ *	occurred from a call to dlopen(), dlclose() or dlsym().
+ */
+#define HAS_DLERROR	/**/
+
+/* HAS_DUP2:
+ *	This symbol, if defined, indicates that the dup2 routine is
+ *	available to duplicate file descriptors.
+ */
+#define HAS_DUP2	/**/
+
+/* HAS_FCHMOD:
+ *	This symbol, if defined, indicates that the fchmod routine is available
+ *	to change mode of opened files.  If unavailable, use chmod().
+ */
+/*#define HAS_FCHMOD		/**/
+
+/* HAS_FCHOWN:
+ *	This symbol, if defined, indicates that the fchown routine is available
+ *	to change ownership of opened files.  If unavailable, use chown().
+ */
+/*#define HAS_FCHOWN		/**/
+
+/* HAS_FCNTL:
+ *	This symbol, if defined, indicates to the C program that
+ *	the fcntl() function exists.
+ */
+/*#define HAS_FCNTL		/**/
+
+/* HAS_FGETPOS:
+ *	This symbol, if defined, indicates that the fgetpos routine is
+ *	available to get the file position indicator, similar to ftell().
+ */
+#define HAS_FGETPOS	/**/
+
+/* FLEXFILENAMES:
+ *	This symbol, if defined, indicates that the system supports filenames
+ *	longer than 14 characters.
+ */
+#define	FLEXFILENAMES		/**/
+
+/* HAS_FLOCK:
+ *	This symbol, if defined, indicates that the flock routine is
+ *	available to do file locking.
+ */
+#define HAS_FLOCK		/**/
+
+/* HAS_FORK:
+ *	This symbol, if defined, indicates that the fork routine is
+ *	available.
+ */
+/*#define HAS_FORK		/**/
+
+/* HAS_FSETPOS:
+ *	This symbol, if defined, indicates that the fsetpos routine is
+ *	available to set the file position indicator, similar to fseek().
+ */
+#define HAS_FSETPOS	/**/
+
+/* HAS_GETTIMEOFDAY:
+ *	This symbol, if defined, indicates that the gettimeofday() system
+ *	call is available for a sub-second accuracy clock. Usually, the file
+ *	<sys/resource.h> needs to be included (see I_SYS_RESOURCE).
+ *	The type "Timeval" should be used to refer to "struct timeval".
+ */
+/*#define HAS_GETTIMEOFDAY	/**/
+#ifdef HAS_GETTIMEOFDAY
+#define Timeval struct timeval	/* Structure used by gettimeofday() */
+#endif
+
+/* HAS_GETGROUPS:
+ *	This symbol, if defined, indicates that the getgroups() routine is
+ *	available to get the list of process groups.  If unavailable, multiple
+ *	groups are probably not supported.
+ */
+/* HAS_SETGROUPS:
+ *	This symbol, if defined, indicates that the setgroups() routine is
+ *	available to set the list of process groups.  If unavailable, multiple
+ *	groups are probably not supported.
+ */
+/*#define HAS_GETGROUPS		/**/
+/*#define HAS_SETGROUPS		/**/
+
+/* HAS_GETHOSTENT:
+ *	This symbol, if defined, indicates that the gethostent routine is
+ *	available to lookup host names in some data base or other.
+ */
+/*#define HAS_GETHOSTENT		/**/
+
+/* HAS_UNAME:
+ *	This symbol, if defined, indicates that the C program may use the
+ *	uname() routine to derive the host name.  See also HAS_GETHOSTNAME
+ *	and PHOSTNAME.
+ */
+/*#define HAS_UNAME		/**/
+
+/* HAS_GETLOGIN:
+ *	This symbol, if defined, indicates that the getlogin routine is
+ *	available to get the login name.
+ */
+/*#define HAS_GETLOGIN		/**/
+
+/* HAS_GETPGRP2:
+ *	This symbol, if defined, indicates that the getpgrp2() (as in DG/UX)
+ *	routine is available to get the current process group.
+ */
+/*#define HAS_GETPGRP2		/**/
+
+/* HAS_GETPPID:
+ *	This symbol, if defined, indicates that the getppid routine is
+ *	available to get the parent process ID.
+ */
+/*#define HAS_GETPPID		/**/
+
+/* HAS_GETPRIORITY:
+ *	This symbol, if defined, indicates that the getpriority routine is
+ *	available to get a process's priority.
+ */
+/*#define HAS_GETPRIORITY		/**/
+
+/* HAS_HTONL:
+ *	This symbol, if defined, indicates that the htonl() routine (and
+ *	friends htons() ntohl() ntohs()) are available to do network
+ *	order byte swapping.
+ */
+/* HAS_HTONS:
+ *	This symbol, if defined, indicates that the htons() routine (and
+ *	friends htonl() ntohl() ntohs()) are available to do network
+ *	order byte swapping.
+ */
+/* HAS_NTOHL:
+ *	This symbol, if defined, indicates that the ntohl() routine (and
+ *	friends htonl() htons() ntohs()) are available to do network
+ *	order byte swapping.
+ */
+/* HAS_NTOHS:
+ *	This symbol, if defined, indicates that the ntohs() routine (and
+ *	friends htonl() htons() ntohl()) are available to do network
+ *	order byte swapping.
+ */
+#define HAS_HTONL		/**/
+#define HAS_HTONS		/**/
+#define HAS_NTOHL		/**/
+#define HAS_NTOHS		/**/
+
+/* HAS_ISASCII:
+ *	This manifest constant lets the C program know that isascii 
+ *	is available.
+ */
+#define HAS_ISASCII		/**/
+
+/* HAS_KILLPG:
+ *	This symbol, if defined, indicates that the killpg routine is available
+ *	to kill process groups.  If unavailable, you probably should use kill
+ *	with a negative process number.
+ */
+/*#define HAS_KILLPG	/**/
+
+/* HAS_LINK:
+ *	This symbol, if defined, indicates that the link routine is
+ *	available to create hard links.
+ */
+/*#define HAS_LINK	/**/
+
+/* HAS_LOCALECONV:
+ *	This symbol, if defined, indicates that the localeconv routine is
+ *	available for numeric and monetary formatting conventions.
+ */
+#define HAS_LOCALECONV	/**/
+
+/* HAS_LOCKF:
+ *	This symbol, if defined, indicates that the lockf routine is
+ *	available to do file locking.
+ */
+/*#define HAS_LOCKF		/**/
+
+/* HAS_LSTAT:
+ *	This symbol, if defined, indicates that the lstat routine is
+ *	available to do file stats on symbolic links.
+ */
+/*#define HAS_LSTAT		/**/
+
+/* HAS_MBLEN:
+ *	This symbol, if defined, indicates that the mblen routine is available
+ *	to find the number of bytes in a multibye character.
+ */
+#define HAS_MBLEN		/**/
+
+/* HAS_MBSTOWCS:
+ *	This symbol, if defined, indicates that the mbstowcs routine is
+ *	available to covert a multibyte string into a wide character string.
+ */
+#define	HAS_MBSTOWCS		/**/
+
+/* HAS_MBTOWC:
+ *	This symbol, if defined, indicates that the mbtowc routine is available
+ *	to covert a multibyte to a wide character.
+ */
+#define HAS_MBTOWC		/**/
+
+/* HAS_MEMCMP:
+ *	This symbol, if defined, indicates that the memcmp routine is available
+ *	to compare blocks of memory.
+ */
+#define HAS_MEMCMP	/**/
+
+/* HAS_MEMCPY:
+ *	This symbol, if defined, indicates that the memcpy routine is available
+ *	to copy blocks of memory.
+ */
+#define HAS_MEMCPY	/**/
+
+/* HAS_MEMMOVE:
+ *	This symbol, if defined, indicates that the memmove routine is available
+ *	to copy potentially overlapping blocks of memory. This should be used
+ *	only when HAS_SAFE_BCOPY is not defined. If neither is there, roll your
+ *	own version.
+ */
+#define HAS_MEMMOVE	/**/
+
+/* HAS_MEMSET:
+ *	This symbol, if defined, indicates that the memset routine is available
+ *	to set blocks of memory.
+ */
+#define HAS_MEMSET	/**/
+
+/* HAS_MKDIR:
+ *	This symbol, if defined, indicates that the mkdir routine is available
+ *	to create directories.  Otherwise you should fork off a new process to
+ *	exec /bin/mkdir.
+ */
+#define HAS_MKDIR		/**/
+
+/* HAS_MKFIFO:
+ *	This symbol, if defined, indicates that the mkfifo routine is
+ *	available to create FIFOs. Otherwise, mknod should be able to
+ *	do it for you. However, if mkfifo is there, mknod might require
+ *	super-user privileges which mkfifo will not.
+ */
+/*#define HAS_MKFIFO		/**/
+
+/* HAS_MKTIME:
+ *	This symbol, if defined, indicates that the mktime routine is
+ *	available.
+ */
+#define HAS_MKTIME		/**/
+
+/* HAS_MSG:
+ *	This symbol, if defined, indicates that the entire msg*(2) library is
+ *	supported (IPC mechanism based on message queues).
+ */
+/*#define HAS_MSG		/**/
+
+/* HAS_NICE:
+ *	This symbol, if defined, indicates that the nice routine is
+ *	available.
+ */
+/*#define HAS_NICE		/**/
+
+/* HAS_OPEN3:
+ *	This manifest constant lets the C program know that the three
+ *	argument form of open(2) is available.
+ */
+/*#define HAS_OPEN3		/**/
+
+/* HAS_PATHCONF:
+ *	This symbol, if defined, indicates that pathconf() is available
+ *	to determine file-system related limits and options associated
+ *	with a given filename.
+ */
+/* HAS_FPATHCONF:
+ *	This symbol, if defined, indicates that pathconf() is available
+ *	to determine file-system related limits and options associated
+ *	with a given open file descriptor.
+ */
+/*#define HAS_PATHCONF		/**/
+/*#define HAS_FPATHCONF		/**/
+
+/* HAS_PAUSE:
+ *	This symbol, if defined, indicates that the pause routine is
+ *	available to suspend a process until a signal is received.
+ */
+#define HAS_PAUSE		/**/
+
+/* HAS_PIPE:
+ *	This symbol, if defined, indicates that the pipe routine is
+ *	available to create an inter-process channel.
+ */
+#define HAS_PIPE		/**/
+
+/* HAS_POLL:
+ *	This symbol, if defined, indicates that the poll routine is
+ *	available to poll active file descriptors.
+ */
+/*#define HAS_POLL		/**/
+
+/* HAS_READDIR:
+ *	This symbol, if defined, indicates that the readdir routine is
+ *	available to read directory entries. You may have to include
+ *	<dirent.h>. See I_DIRENT.
+ */
+#define HAS_READDIR		/**/
+
+/* HAS_SEEKDIR:
+ *	This symbol, if defined, indicates that the seekdir routine is
+ *	available. You may have to include <dirent.h>. See I_DIRENT.
+ */
+#define HAS_SEEKDIR		/**/
+
+/* HAS_TELLDIR:
+ *	This symbol, if defined, indicates that the telldir routine is
+ *	available. You may have to include <dirent.h>. See I_DIRENT.
+ */
+#define HAS_TELLDIR		/**/
+
+/* HAS_REWINDDIR:
+ *	This symbol, if defined, indicates that the rewinddir routine is
+ *	available. You may have to include <dirent.h>. See I_DIRENT.
+ */
+#define HAS_REWINDDIR		/**/
+
+/* HAS_READLINK:
+ *	This symbol, if defined, indicates that the readlink routine is
+ *	available to read the value of a symbolic link.
+ */
+/*#define HAS_READLINK		/**/
+
+/* HAS_RENAME:
+ *	This symbol, if defined, indicates that the rename routine is available
+ *	to rename files.  Otherwise you should do the unlink(), link(), unlink()
+ *	trick.
+ */
+#define HAS_RENAME	/**/
+
+/* HAS_RMDIR:
+ *	This symbol, if defined, indicates that the rmdir routine is
+ *	available to remove directories. Otherwise you should fork off a
+ *	new process to exec /bin/rmdir.
+ */
+#define HAS_RMDIR		/**/
+
+/* HAS_SAFE_BCOPY:
+ *	This symbol, if defined, indicates that the bcopy routine is available
+ *	to copy potentially overlapping memory blocks. Otherwise you should
+ *	probably use memmove() or memcpy(). If neither is defined, roll your
+ *	own version.
+ */
+/*#define HAS_SAFE_BCOPY	/**/
+
+/* HAS_SAFE_MEMCPY:
+ *	This symbol, if defined, indicates that the memcpy routine is available
+ *	to copy potentially overlapping memory blocks. Otherwise you should
+ *	probably use memmove() or memcpy(). If neither is defined, roll your
+ *	own version.
+ */
+/*#define HAS_SAFE_MEMCPY	/**/
+
+/* HAS_SANE_MEMCMP:
+ *	This symbol, if defined, indicates that the memcmp routine is available
+ *	and can be used to compare relative magnitudes of chars with their high
+ *	bits set.  If it is not defined, roll your own version.
+ */
+#define HAS_SANE_MEMCMP	/**/
+
+/* HAS_SELECT:
+ *	This symbol, if defined, indicates that the select routine is
+ *	available to select active file descriptors. If the timeout field
+ *	is used, <sys/time.h> may need to be included.
+ */
+#define HAS_SELECT	/**/
+
+/* HAS_SEM:
+ *	This symbol, if defined, indicates that the entire sem*(2) library is
+ *	supported.
+ */
+/*#define HAS_SEM		/**/
+
+/* HAS_SETEGID:
+ *	This symbol, if defined, indicates that the setegid routine is available
+ *	to change the effective gid of the current program.
+ */
+/*#define HAS_SETEGID		/**/
+
+/* HAS_SETEUID:
+ *	This symbol, if defined, indicates that the seteuid routine is available
+ *	to change the effective uid of the current program.
+ */
+/*#define HAS_SETEUID		/**/
+
+/* HAS_SETLINEBUF:
+ *	This symbol, if defined, indicates that the setlinebuf routine is
+ *	available to change stderr or stdout from block-buffered or unbuffered
+ *	to a line-buffered mode.
+ */
+/*#define HAS_SETLINEBUF		/**/
+
+/* HAS_SETLOCALE:
+ *	This symbol, if defined, indicates that the setlocale routine is
+ *	available to handle locale-specific ctype implementations.
+ */
+#define HAS_SETLOCALE	/**/
+
+/* HAS_SETPGRP2:
+ *	This symbol, if defined, indicates that the setpgrp2() (as in DG/UX)
+ *	routine is available to set the current process group.
+ */
+/*#define HAS_SETPGRP2		/**/
+
+/* HAS_SETPRIORITY:
+ *	This symbol, if defined, indicates that the setpriority routine is
+ *	available to set a process's priority.
+ */
+/*#define HAS_SETPRIORITY		/**/
+
+/* HAS_SETREGID:
+ *	This symbol, if defined, indicates that the setregid routine is
+ *	available to change the real and effective gid of the current
+ *	process.
+ */
+/* HAS_SETRESGID:
+ *	This symbol, if defined, indicates that the setresgid routine is
+ *	available to change the real, effective and saved gid of the current
+ *	process.
+ */
+/*#define HAS_SETREGID		/**/
+/*#define HAS_SETRESGID		/**/
+
+/* HAS_SETREUID:
+ *	This symbol, if defined, indicates that the setreuid routine is
+ *	available to change the real and effective uid of the current
+ *	process.
+ */
+/* HAS_SETRESUID:
+ *	This symbol, if defined, indicates that the setresuid routine is
+ *	available to change the real, effective and saved uid of the current
+ *	process.
+ */
+/*#define HAS_SETREUID		/**/
+/*#define HAS_SETRESUID		/**/
+
+/* HAS_SETRGID:
+ *	This symbol, if defined, indicates that the setrgid routine is available
+ *	to change the real gid of the current program.
+ */
+/*#define HAS_SETRGID		/**/
+
+/* HAS_SETRUID:
+ *	This symbol, if defined, indicates that the setruid routine is available
+ *	to change the real uid of the current program.
+ */
+/*#define HAS_SETRUID		/**/
+
+/* HAS_SETSID:
+ *	This symbol, if defined, indicates that the setsid routine is
+ *	available to set the process group ID.
+ */
+/*#define HAS_SETSID	/**/
+
+/* HAS_SHM:
+ *	This symbol, if defined, indicates that the entire shm*(2) library is
+ *	supported.
+ */
+/*#define HAS_SHM		/**/
+
+/* Shmat_t:
+ *	This symbol holds the return type of the shmat() system call.
+ *	Usually set to 'void *' or 'char *'.
+ */
+/* HAS_SHMAT_PROTOTYPE:
+ *	This symbol, if defined, indicates that the sys/shm.h includes
+ *	a prototype for shmat().  Otherwise, it is up to the program to
+ *	guess one.  Shmat_t shmat _((int, Shmat_t, int)) is a good guess,
+ *	but not always right so it should be emitted by the program only
+ *	when HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.
+ */
+#define Shmat_t void *	/**/
+/*#define HAS_SHMAT_PROTOTYPE	/**/
+
+/* HAS_SIGACTION:
+ *	This symbol, if defined, indicates that Vr4's sigaction() routine
+ *	is available.
+ */
+/*#define HAS_SIGACTION	/**/
+
+/* HAS_SOCKET:
+ *	This symbol, if defined, indicates that the BSD socket interface is
+ *	supported.
+ */
+/* HAS_SOCKETPAIR:
+ *	This symbol, if defined, indicates that the BSD socketpair() call is
+ *	supported.
+ */
+#define HAS_SOCKET		/**/
+/*#define HAS_SOCKETPAIR	/**/
+
+/* USE_STAT_BLOCKS:
+ *	This symbol is defined if this system has a stat structure declaring
+ *	st_blksize and st_blocks.
+ */
+/*#define USE_STAT_BLOCKS 	/**/
+
+/* USE_STDIO_PTR:
+ *	This symbol is defined if the _ptr and _cnt fields (or similar)
+ *	of the stdio FILE structure can be used to access the stdio buffer
+ *	for a file handle.  If this is defined, then the FILE_ptr(fp)
+ *	and FILE_cnt(fp) macros will also be defined and should be used
+ *	to access these fields.
+ */
+/* FILE_ptr:
+ *	This macro is used to access the _ptr field (or equivalent) of the
+ *	FILE structure pointed to by its argument. This macro will always be
+ *	defined if USE_STDIO_PTR is defined.
+ */
+/* STDIO_PTR_LVALUE:
+ *	This symbol is defined if the FILE_ptr macro can be used as an
+ *	lvalue.
+ */
+/* FILE_cnt:
+ *	This macro is used to access the _cnt field (or equivalent) of the
+ *	FILE structure pointed to by its argument. This macro will always be
+ *	defined if USE_STDIO_PTR is defined.
+ */
+/* STDIO_CNT_LVALUE:
+ *	This symbol is defined if the FILE_cnt macro can be used as an
+ *	lvalue.
+ */
+#define USE_STDIO_PTR 	/**/
+#ifdef USE_STDIO_PTR
+#define FILE_ptr(fp)	((fp)->curp)
+#define STDIO_PTR_LVALUE 		/**/
+#define FILE_cnt(fp)	((fp)->level)
+#define STDIO_CNT_LVALUE 		/**/
+#endif
+
+/* USE_STDIO_BASE:
+ *	This symbol is defined if the _base field (or similar) of the
+ *	stdio FILE structure can be used to access the stdio buffer for
+ *	a file handle.  If this is defined, then the FILE_base(fp) macro
+ *	will also be defined and should be used to access this field.
+ *	Also, the FILE_bufsiz(fp) macro will be defined and should be used
+ *	to determine the number of bytes in the buffer.  USE_STDIO_BASE
+ *	will never be defined unless USE_STDIO_PTR is.
+ */
+/* FILE_base:
+ *	This macro is used to access the _base field (or equivalent) of the
+ *	FILE structure pointed to by its argument. This macro will always be
+ *	defined if USE_STDIO_BASE is defined.
+ */
+/* FILE_bufsiz:
+ *	This macro is used to determine the number of bytes in the I/O
+ *	buffer pointed to by _base field (or equivalent) of the FILE
+ *	structure pointed to its argument. This macro will always be defined
+ *	if USE_STDIO_BASE is defined.
+ */
+#define USE_STDIO_BASE 	/**/
+#ifdef USE_STDIO_BASE
+#define FILE_base(fp)	((fp)->buffer)
+#define FILE_bufsiz(fp)	((fp)->level + (fp)->curp - (fp)->buffer)
+#endif
+
+/* HAS_STRCHR:
+ *	This symbol is defined to indicate that the strchr()/strrchr()
+ *	functions are available for string searching. If not, try the
+ *	index()/rindex() pair.
+ */
+/* HAS_INDEX:
+ *	This symbol is defined to indicate that the index()/rindex()
+ *	functions are available for string searching.
+ */
+#define HAS_STRCHR	/**/
+/*#define HAS_INDEX	/**/
+
+/* HAS_STRCOLL:
+ *	This symbol, if defined, indicates that the strcoll routine is
+ *	available to compare strings using collating information.
+ */
+#define HAS_STRCOLL	/**/
+
+/* USE_STRUCT_COPY:
+ *	This symbol, if defined, indicates that this C compiler knows how
+ *	to copy structures.  If undefined, you'll need to use a block copy
+ *	routine of some sort instead.
+ */
+#define	USE_STRUCT_COPY	/**/
+
+/* HAS_STRERROR:
+ *	This symbol, if defined, indicates that the strerror routine is
+ *	available to translate error numbers to strings. See the writeup
+ *	of Strerror() in this file before you try to define your own.
+ */
+/* HAS_SYS_ERRLIST:
+ *	This symbol, if defined, indicates that the sys_errlist array is
+ *	available to translate error numbers to strings. The extern int
+ *	sys_nerr gives the size of that table.
+ */
+/* Strerror:
+ *	This preprocessor symbol is defined as a macro if strerror() is
+ *	not available to translate error numbers to strings but sys_errlist[]
+ *	array is there.
+ */
+#define HAS_STRERROR		/**/
+#define HAS_SYS_ERRLIST	/**/
+#define Strerror(e) strerror(e)
+
+/* HAS_STRTOD:
+ *	This symbol, if defined, indicates that the strtod routine is
+ *	available to provide better numeric string conversion than atof().
+ */
+#define HAS_STRTOD	/**/
+
+/* HAS_STRTOL:
+ *	This symbol, if defined, indicates that the strtol routine is available
+ *	to provide better numeric string conversion than atoi() and friends.
+ */
+#define HAS_STRTOL	/**/
+
+/* HAS_STRTOUL:
+ *	This symbol, if defined, indicates that the strtoul routine is
+ *	available to provide conversion of strings to unsigned long.
+ */
+#define HAS_STRTOUL	/**/
+
+/* HAS_STRXFRM:
+ *	This symbol, if defined, indicates that the strxfrm() routine is
+ *	available to transform strings.
+ */
+#define HAS_STRXFRM	/**/
+
+/* HAS_SYMLINK:
+ *	This symbol, if defined, indicates that the symlink routine is available
+ *	to create symbolic links.
+ */
+/*#define HAS_SYMLINK	/**/
+
+/* HAS_SYSCALL:
+ *	This symbol, if defined, indicates that the syscall routine is
+ *	available to call arbitrary system calls. If undefined, that's tough.
+ */
+/*#define HAS_SYSCALL	/**/
+
+/* HAS_SYSCONF:
+ *	This symbol, if defined, indicates that sysconf() is available
+ *	to determine system related limits and options.
+ */
+/*#define HAS_SYSCONF	/**/
+
+/* HAS_SYSTEM:
+ *	This symbol, if defined, indicates that the system routine is
+ *	available to issue a shell command.
+ */
+#define HAS_SYSTEM	/**/
+
+/* HAS_TCGETPGRP:
+ *	This symbol, if defined, indicates that the tcgetpgrp routine is
+ *	available to get foreground process group ID.
+ */
+/*#define HAS_TCGETPGRP		/**/
+
+/* HAS_TCSETPGRP:
+ *	This symbol, if defined, indicates that the tcsetpgrp routine is
+ *	available to set foreground process group ID.
+ */
+/*#define HAS_TCSETPGRP		/**/
+
+/* Time_t:
+ *	This symbol holds the type returned by time(). It can be long,
+ *	or time_t on BSD sites (in which case <sys/types.h> should be
+ *	included).
+ */
+#define Time_t time_t		/* Time type */
+
+/* HAS_TIMES:
+ *	This symbol, if defined, indicates that the times() routine exists.
+ *	Note that this became obsolete on some systems (SUNOS), which now
+ * use getrusage(). It may be necessary to include <sys/times.h>.
+ */
+#define HAS_TIMES		/**/
+
+/* HAS_TRUNCATE:
+ *	This symbol, if defined, indicates that the truncate routine is
+ *	available to truncate files.
+ */
+/*#define HAS_TRUNCATE	/**/
+
+/* HAS_TZNAME:
+ *	This symbol, if defined, indicates that the tzname[] array is
+ *	available to access timezone names.
+ */
+#define HAS_TZNAME		/**/
+
+/* HAS_UMASK:
+ *	This symbol, if defined, indicates that the umask routine is
+ *	available to set and get the value of the file creation mask.
+ */
+#define HAS_UMASK		/**/
+
+/* HAS_VFORK:
+ *	This symbol, if defined, indicates that vfork() exists.
+ */
+/*#define HAS_VFORK	/**/
+
+/* Signal_t:
+ *	This symbol's value is either "void" or "int", corresponding to the
+ *	appropriate return type of a signal handler.  Thus, you can declare
+ *	a signal handler using "Signal_t (*handler)()", and define the
+ *	handler using "Signal_t handler(sig)".
+ */
+#define Signal_t void	/* Signal handler's return type */
+
+/* HASVOLATILE:
+ *	This symbol, if defined, indicates that this C compiler knows about
+ *	the volatile declaration.
+ */
+#define	HASVOLATILE	/**/
+#ifndef HASVOLATILE
+#define volatile
+#endif
+
+/* HAS_VPRINTF:
+ *	This symbol, if defined, indicates that the vprintf routine is available
+ *	to printf with a pointer to an argument list.  If unavailable, you
+ *	may need to write your own, probably in terms of _doprnt().
+ */
+/* USE_CHAR_VSPRINTF:
+ *	This symbol is defined if this system has vsprintf() returning type
+ *	(char*).  The trend seems to be to declare it as "int vsprintf()".  It
+ *	is up to the package author to declare vsprintf correctly based on the
+ *	symbol.
+ */
+#define HAS_VPRINTF	/**/
+/*#define USE_CHAR_VSPRINTF 	/**/
+
+/* HAS_WAIT4:
+ *	This symbol, if defined, indicates that wait4() exists.
+ */
+/*#define HAS_WAIT4	/**/
+
+/* HAS_WAITPID:
+ *	This symbol, if defined, indicates that the waitpid routine is
+ *	available to wait for child process.
+ */
+/*#define HAS_WAITPID	/**/
+
+/* HAS_WCSTOMBS:
+ *	This symbol, if defined, indicates that the wcstombs routine is
+ *	available to convert wide character strings to multibyte strings.
+ */
+#define HAS_WCSTOMBS	/**/
+
+/* HAS_WCTOMB:
+ *	This symbol, if defined, indicates that the wctomb routine is available
+ *	to covert a wide character to a multibyte.
+ */
+#define HAS_WCTOMB		/**/
+
+/* Fpos_t:
+ *	This symbol holds the type used to declare file positions in libc.
+ *	It can be fpos_t, long, uint, etc... It may be necessary to include
+ *	<sys/types.h> to get any typedef'ed information.
+ */
+#define Fpos_t fpos_t		/* File position type */
+
+/* Gid_t:
+ *	This symbol holds the return type of getgid() and the type of
+ *	argument to setrgid() and related functions.  Typically,
+ *	it is the type of group ids in the kernel. It can be int, ushort,
+ *	uid_t, etc... It may be necessary to include <sys/types.h> to get
+ *	any typedef'ed information.
+ */
+#define Gid_t gid_t		/* Type for getgid(), etc... */
+
+/* Groups_t:
+ *	This symbol holds the type used for the second argument to
+ *	[gs]etgroups().  Usually, this is the same of gidtype, but
+ *	sometimes it isn't.  It can be int, ushort, uid_t, etc... 
+ *	It may be necessary to include <sys/types.h> to get any 
+ *	typedef'ed information.  This is only required if you have
+ *	getgroups() or setgroups().
+ */
+#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)
+#define Groups_t gid_t	/* Type for 2nd arg to [gs]etgroups() */
+#endif
+
+/* DB_Prefix_t:
+ *	This symbol contains the type of the prefix structure element
+ *	in the <db.h> header file.  In older versions of DB, it was
+ *	int, while in newer ones it is u_int32_t.
+ */
+/* DB_Hash_t:
+ *	This symbol contains the type of the prefix structure element
+ *	in the <db.h> header file.  In older versions of DB, it was
+ *	int, while in newer ones it is size_t.
+ */
+#define DB_Hash_t	int		/**/
+#define DB_Prefix_t	int  	/**/
+
+/* I_DIRENT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <dirent.h>. Using this symbol also triggers the definition
+ *	of the Direntry_t define which ends up being 'struct dirent' or
+ *	'struct direct' depending on the availability of <dirent.h>.
+ */
+/* DIRNAMLEN:
+ *	This symbol, if defined, indicates to the C program that the length
+ *	of directory entry names is provided by a d_namlen field.  Otherwise
+ *	you need to do strlen() on the d_name field.
+ */
+/* Direntry_t:
+ *	This symbol is set to 'struct direct' or 'struct dirent' depending on
+ *	whether dirent is available or not. You should use this pseudo type to
+ *	portably declare your directory entries.
+ */
+#define I_DIRENT		/**/
+#define DIRNAMLEN	/**/
+#define Direntry_t struct direct
+
+/* I_DLFCN:
+ *	This symbol, if defined, indicates that <dlfcn.h> exists and should
+ *	be included.
+ */
+#define I_DLFCN		/**/
+
+/* I_FCNTL:
+ *	This manifest constant tells the C program to include <fcntl.h>.
+ */
+#define I_FCNTL	/**/
+
+/* I_FLOAT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <float.h> to get definition of symbols like DBL_MAX or
+ *	DBL_MIN, i.e. machine dependent floating point values.
+ */
+#define I_FLOAT		/**/
+
+/* I_GRP:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <grp.h>.
+ */
+#define I_GRP		/**/
+
+/* I_LIMITS:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <limits.h> to get definition of symbols like WORD_BIT or
+ *	LONG_MAX, i.e. machine dependant limitations.
+ */
+#define I_LIMITS		/**/
+
+/* I_MATH:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <math.h>.
+ */
+#define I_MATH		/**/
+
+/* I_MEMORY:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <memory.h>.
+ */
+/*#define I_MEMORY		/**/
+
+/* I_NDBM:
+ *	This symbol, if defined, indicates that <ndbm.h> exists and should
+ *	be included.
+ */
+/*#define I_NDBM	/**/
+
+/* I_NET_ERRNO:
+ *	This symbol, if defined, indicates that <net/errno.h> exists and 
+ *	should be included.
+ */
+/*#define I_NET_ERRNO		/**/
+
+/* I_NETINET_IN:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <netinet/in.h>. Otherwise, you may try <sys/in.h>.
+ */
+/*#define I_NETINET_IN	/**/
+
+/* I_PWD:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <pwd.h>.
+ */
+/* PWQUOTA:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_quota.
+ */
+/* PWAGE:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_age.
+ */
+/* PWCHANGE:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_change.
+ */
+/* PWCLASS:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_class.
+ */
+/* PWEXPIRE:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_expire.
+ */
+/* PWCOMMENT:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_comment.
+ */
+/*#define I_PWD		/**/
+/*#define PWQUOTA	/**/
+/*#define PWAGE	/**/
+/*#define PWCHANGE	/**/
+/*#define PWCLASS	/**/
+/*#define PWEXPIRE	/**/
+/*#define PWCOMMENT	/**/
+
+/* I_STDDEF:
+ *	This symbol, if defined, indicates that <stddef.h> exists and should
+ *	be included.
+ */
+#define I_STDDEF	/**/
+
+/* I_STDLIB:
+ *	This symbol, if defined, indicates that <stdlib.h> exists and should
+ *	be included.
+ */
+#define I_STDLIB		/**/
+
+/* I_STRING:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <string.h> (USG systems) instead of <strings.h> (BSD systems).
+ */
+#define I_STRING		/**/
+
+/* I_SYS_DIR:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/dir.h>.
+ */
+/*#define I_SYS_DIR		/**/
+
+/* I_SYS_FILE:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/file.h> to get definition of R_OK and friends.
+ */
+/*#define I_SYS_FILE		/**/
+
+/* I_SYS_IOCTL:
+ *	This symbol, if defined, indicates that <sys/ioctl.h> exists and should
+ *	be included. Otherwise, include <sgtty.h> or <termio.h>.
+ */
+/*#define	I_SYS_IOCTL		/**/
+
+/* I_SYS_NDIR:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/ndir.h>.
+ */
+/*#define I_SYS_NDIR	/**/
+
+/* I_SYS_PARAM:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/param.h>.
+ */
+/*#define I_SYS_PARAM		/**/
+
+/* I_SYS_RESOURCE:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/resource.h>.
+ */
+/*#define I_SYS_RESOURCE		/**/
+
+/* I_SYS_SELECT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/select.h> in order to get definition of struct timeval.
+ */
+/*#define I_SYS_SELECT	/**/
+
+/* I_SYS_TIMES:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/times.h>.
+ */
+/*#define	I_SYS_TIMES		/**/
+
+/* I_SYS_TYPES:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/types.h>.
+ */
+#define	I_SYS_TYPES		/**/
+
+/* I_SYS_UN:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/un.h> to get UNIX domain socket definitions.
+ */
+/*#define I_SYS_UN		/**/
+
+/* I_SYS_WAIT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/wait.h>.
+ */
+/*#define I_SYS_WAIT	/**/
+
+/* I_TERMIO:
+ *	This symbol, if defined, indicates that the program should include
+ *	<termio.h> rather than <sgtty.h>.  There are also differences in
+ *	the ioctl() calls that depend on the value of this symbol.
+ */
+/* I_TERMIOS:
+ *	This symbol, if defined, indicates that the program should include
+ *	the POSIX termios.h rather than sgtty.h or termio.h.
+ *	There are also differences in the ioctl() calls that depend on the
+ *	value of this symbol.
+ */
+/* I_SGTTY:
+ *	This symbol, if defined, indicates that the program should include
+ *	<sgtty.h> rather than <termio.h>.  There are also differences in
+ *	the ioctl() calls that depend on the value of this symbol.
+ */
+/*#define I_TERMIO		/**/
+/*#define I_TERMIOS		/**/
+/*#define I_SGTTY		/**/
+
+/* I_TIME:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <time.h>.
+ */
+/* I_SYS_TIME:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/time.h>.
+ */
+/* I_SYS_TIME_KERNEL:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/time.h> with KERNEL defined.
+ */
+#define I_TIME		/**/
+/*#define I_SYS_TIME		/**/
+/*#define I_SYS_TIME_KERNEL		/**/
+
+/* I_UNISTD:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <unistd.h>.
+ */
+/*#define I_UNISTD		/**/
+
+/* I_UTIME:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <utime.h>.
+ */
+#define I_UTIME		/**/
+
+/* I_STDARG:
+ *	This symbol, if defined, indicates that <stdarg.h> exists and should
+ *	be included.
+ */
+/* I_VARARGS:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <varargs.h>.
+ */
+#define I_STDARG		/**/
+/*#define I_VARARGS	/**/
+
+/* I_VFORK:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include vfork.h.
+ */
+/*#define I_VFORK	/**/
+
+/* INTSIZE:
+ *	This symbol contains the value of sizeof(int) so that the C
+ *	preprocessor can make decisions based on it.
+ */
+/* LONGSIZE:
+ *	This symbol contains the value of sizeof(long) so that the C
+ *	preprocessor can make decisions based on it.
+ */
+/* SHORTSIZE:
+ *	This symbol contains the value of sizeof(short) so that the C
+ *	preprocessor can make decisions based on it.
+ */
+#define INTSIZE 4		/**/
+#define LONGSIZE 4		/**/
+#define SHORTSIZE 2		/**/
+
+/* Off_t:
+ *	This symbol holds the type used to declare offsets in the kernel.
+ *	It can be int, long, off_t, etc... It may be necessary to include
+ *	<sys/types.h> to get any typedef'ed information.
+ */
+#define Off_t off_t		/* <offset> type */
+
+/* Mode_t:
+ *	This symbol holds the type used to declare file modes 
+ *	for systems calls.  It is usually mode_t, but may be
+ *	int or unsigned short.  It may be necessary to include <sys/types.h>
+ *	to get any typedef'ed information.
+ */
+#define Mode_t mode_t	 /* file mode parameter for system calls */
+
+/* VAL_O_NONBLOCK:
+ *	This symbol is to be used during open() or fcntl(F_SETFL) to turn on
+ *	non-blocking I/O for the file descriptor. Note that there is no way
+ *	back, i.e. you cannot turn it blocking again this way. If you wish to
+ *	alternatively switch between blocking and non-blocking, use the
+ *	ioctl(FIOSNBIO) call instead, but that is not supported by all devices.
+ */
+/* VAL_EAGAIN:
+ *	This symbol holds the errno error code set by read() when no data was
+ *	present on the non-blocking file descriptor.
+ */
+/* RD_NODATA:
+ *	This symbol holds the return code from read() when no data is present
+ *	on the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is
+ *	not defined, then you can't distinguish between no data and EOF by
+ *	issuing a read(). You'll have to find another way to tell for sure!
+ */
+/* EOF_NONBLOCK:
+ *	This symbol, if defined, indicates to the C program that a read() on
+ *	a non-blocking file descriptor will return 0 on EOF, and not the value
+ *	held in RD_NODATA (-1 usually, in that case!).
+ */
+#define VAL_O_NONBLOCK O_NONBLOCK
+#define VAL_EAGAIN EAGAIN
+#define RD_NODATA -1
+#define EOF_NONBLOCK
+
+/* CAN_PROTOTYPE:
+ *	If defined, this macro indicates that the C compiler can handle
+ *	function prototypes.
+ */
+/* _:
+ *	This macro is used to declare function parameters for folks who want
+ *	to make declarations with prototypes using a different style than
+ *	the above macros.  Use double parentheses.  For example:
+ *
+ *		int main _((int argc, char *argv[]));
+ */
+#define	CAN_PROTOTYPE	/**/
+#ifdef CAN_PROTOTYPE
+#define	_(args) args
+#else
+#define	_(args) ()
+#endif
+
+/* RANDBITS:
+ *	This symbol contains the number of bits of random number the rand()
+ *	function produces.  Usual values are 15, 16, and 31.
+ */
+#define RANDBITS 15		/**/
+
+/* Select_fd_set_t:
+ *	This symbol holds the type used for the 2nd, 3rd, and 4th
+ *	arguments to select.  Usually, this is 'fd_set *', if HAS_FD_SET
+ *	is defined, and 'int *' otherwise.  This is only useful if you 
+ *	have select(), of course.
+ */
+#define Select_fd_set_t 	int *	/**/
+
+/* Size_t:
+ *	This symbol holds the type used to declare length parameters
+ *	for string functions.  It is usually size_t, but may be
+ *	unsigned long, int, etc.  It may be necessary to include
+ *	<sys/types.h> to get any typedef'ed information.
+ */
+#define Size_t size_t	 /* length paramater for string functions */
+
+/* SSize_t:
+ *	This symbol holds the type used by functions that return
+ *	a count of bytes or an error condition.  It must be a signed type.
+ *	It is usually ssize_t, but may be long or int, etc.
+ *	It may be necessary to include <sys/types.h> or <unistd.h>
+ *	to get any typedef'ed information.
+ *	We will pick a type such that sizeof(SSize_t) == sizeof(Size_t).
+ */
+#define SSize_t int	 /* signed count of bytes */
+
+/* STDCHAR:
+ *	This symbol is defined to be the type of char used in stdio.h.
+ *	It has the values "unsigned char" or "char".
+ */
+#define STDCHAR unsigned char	/**/
+
+/* Uid_t:
+ *	This symbol holds the type used to declare user ids in the kernel.
+ *	It can be int, ushort, uid_t, etc... It may be necessary to include
+ *	<sys/types.h> to get any typedef'ed information.
+ */
+#define Uid_t uid_t		/* UID type */
+
+/* LOC_SED:
+ *	This symbol holds the complete pathname to the sed program.
+ */
+#define LOC_SED 	""	/**/
+
+/* OSNAME:
+ *	This symbol contains the name of the operating system, as determined
+ *	by Configure.  You shouldn't rely on it too much; the specific
+ *	feature tests from Configure are generally more reliable.
+ */
+#define OSNAME "MSWin32"		/**/
+
+/* ARCHLIB:
+ *	This variable, if defined, holds the name of the directory in
+ *	which the user wants to put architecture-dependent public
+ *	library files for perl5.  It is most often a local directory
+ *	such as /usr/local/lib.  Programs using this variable must be
+ *	prepared to deal with filename expansion.  If ARCHLIB is the
+ *	same as PRIVLIB, it is not defined, since presumably the
+ *	program already searches PRIVLIB.
+ */
+/* ARCHLIB_EXP:
+ *	This symbol contains the ~name expanded version of ARCHLIB, to be used
+ *	in programs that are not prepared to deal with ~ expansion at run-time.
+ */
+#define ARCHLIB "c:\\perl\\lib"		/**/
+#define ARCHLIB_EXP (win32PerlLibPath())	/**/
+
+/* BINCOMPAT3:
+ *	This symbol, if defined, indicates that Perl 5.004 should be
+ *	binary-compatible with Perl 5.003.
+ */
+/*#define BINCOMPAT3			/**/
+
+/* BYTEORDER:
+ *	This symbol holds the hexadecimal constant defined in byteorder,
+ *	i.e. 0x1234 or 0x4321, etc...
+ *	On NeXT 3.2 (and greater), you can build "Fat" Multiple Architecture
+ *	Binaries (MAB) on either big endian or little endian machines.
+ *	The endian-ness is available at compile-time.  This only matters
+ *	for perl, where the config.h can be generated and installed on 
+ *	one system, and used by a different architecture to build an
+ *	extension.  Older versions of NeXT that might not have
+ *	defined either *_ENDIAN__ were all on Motorola 680x0 series,
+ *	so the default case (for NeXT) is big endian to catch them. 
+ *	This might matter for NeXT 3.0.
+ */
+#ifndef NeXT
+#define BYTEORDER 0x1234	/* large digits for MSB */
+#else  /* NeXT */
+#ifdef __LITTLE_ENDIAN__
+#define BYTEORDER 0x1234
+#else /* __BIG_ENDIAN__ */
+#define BYTEORDER 0x4321
+#endif /* ENDIAN CHECK */
+#endif /* NeXT */
+
+/* CSH:
+ *	This symbol, if defined, indicates that the C-shell exists.
+ *	If defined, contains the full pathname of csh.
+ */
+/*#define CSH ""		/**/
+
+/* DLSYM_NEEDS_UNDERSCORE:
+ *	This symbol, if defined, indicates that we need to prepend an
+ *	underscore to the symbol name before calling dlsym().  This only
+ *	makes sense if you *have* dlsym, which we will presume is the
+ *	case if you're using dl_dlopen.xs.
+ */
+/*#define 	DLSYM_NEEDS_UNDERSCORE 	/**/
+
+/* SETUID_SCRIPTS_ARE_SECURE_NOW:
+ *	This symbol, if defined, indicates that the bug that prevents
+ *	setuid scripts from being secure is not present in this kernel.
+ */
+/* DOSUID:
+ *	This symbol, if defined, indicates that the C program should
+ *	check the script that it is executing for setuid/setgid bits, and
+ *	attempt to emulate setuid/setgid on systems that have disabled
+ *	setuid #! scripts because the kernel can't do it securely.
+ *	It is up to the package designer to make sure that this emulation
+ *	is done securely.  Among other things, it should do an fstat on
+ *	the script it just opened to make sure it really is a setuid/setgid
+ *	script, it should make sure the arguments passed correspond exactly
+ *	to the argument on the #! line, and it should not trust any
+ *	subprocesses to which it must pass the filename rather than the
+ *	file descriptor of the script to be executed.
+ */
+/*#define SETUID_SCRIPTS_ARE_SECURE_NOW	/**/
+/*#define DOSUID		/**/
+
+/* Gconvert:
+ *	This preprocessor macro is defined to convert a floating point
+ *	number to a string without a trailing decimal point.  This
+ *	emulates the behavior of sprintf("%g"), but is sometimes much more
+ *	efficient.  If gconvert() is not available, but gcvt() drops the
+ *	trailing decimal point, then gcvt() is used.  If all else fails,
+ *	a macro using sprintf("%g") is used. Arguments for the Gconvert
+ *	macro are: value, number of digits, whether trailing zeros should
+ *	be retained, and the output buffer.
+ *	Possible values are:
+ *		d_Gconvert='gconvert((x),(n),(t),(b))'
+ *		d_Gconvert='gcvt((x),(n),(b))'
+ *		d_Gconvert='sprintf((b),"%.*g",(n),(x))'
+ *	The last two assume trailing zeros should not be kept.
+ */
+#define Gconvert(x,n,t,b) sprintf((b),"%.*g",(n),(x))
+
+/* HAS_GETPGID:
+ *	This symbol, if defined, indicates to the C program that 
+ *	the getpgid(pid) function is available to get the
+ *	process group id.
+ */
+/*#define HAS_GETPGID		/**/
+
+/* HAS_GETPGRP:
+ *	This symbol, if defined, indicates that the getpgrp routine is
+ *	available to get the current process group.
+ */
+/* USE_BSD_GETPGRP:
+ *	This symbol, if defined, indicates that getpgrp needs one
+ *	arguments whereas USG one needs none.
+ */
+/*#define HAS_GETPGRP		/**/
+/*#define USE_BSD_GETPGRP	/**/
+
+/* HAS_INET_ATON:
+ *	This symbol, if defined, indicates to the C program that the
+ *	inet_aton() function is available to parse IP address "dotted-quad"
+ *	strings.
+ */
+/*#define HAS_INET_ATON		/**/
+
+/* HAS_SETPGID:
+ *	This symbol, if defined, indicates to the C program that 
+ *	the setpgid(pid, gpid) function is available to set the
+ *	process group id.
+ */
+/*#define HAS_SETPGID		/**/
+
+/* HAS_SETPGRP:
+ *	This symbol, if defined, indicates that the setpgrp routine is
+ *	available to set the current process group.
+ */
+/* USE_BSD_SETPGRP:
+ *	This symbol, if defined, indicates that setpgrp needs two
+ *	arguments whereas USG one needs none.  See also HAS_SETPGID
+ *	for a POSIX interface.
+ */
+/* USE_BSDPGRP:
+ *	This symbol, if defined, indicates that the BSD notion of process
+ *	group is to be used. For instance, you have to say setpgrp(pid, pgrp)
+ *	instead of the USG setpgrp().  This should be obsolete since
+ *	there are systems which have BSD-ish setpgrp but USG-ish getpgrp.
+ */
+/*#define HAS_SETPGRP		/**/
+/*#define USE_BSD_SETPGRP	/**/
+/*#define USE_BSDPGRP		/**/
+
+/* USE_SFIO:
+ *	This symbol, if defined, indicates that sfio should
+ *	be used.
+ */
+/*#define	USE_SFIO		/**/
+
+/* Sigjmp_buf:
+ *	This is the buffer type to be used with Sigsetjmp and Siglongjmp.
+ */
+/* Sigsetjmp:
+ *	This macro is used in the same way as sigsetjmp(), but will invoke
+ *	traditional setjmp() if sigsetjmp isn't available.
+ *	See HAS_SIGSETJMP.
+ */
+/* Siglongjmp:
+ *	This macro is used in the same way as siglongjmp(), but will invoke
+ *	traditional longjmp() if siglongjmp isn't available.
+ *	See HAS_SIGSETJMP.
+ */
+/*#define HAS_SIGSETJMP	/**/
+#ifdef HAS_SIGSETJMP
+#define Sigjmp_buf sigjmp_buf
+#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))
+#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))
+#else
+#define Sigjmp_buf jmp_buf
+#define Sigsetjmp(buf,save_mask) setjmp((buf))
+#define Siglongjmp(buf,retval) longjmp((buf),(retval))
+#endif
+
+/* USE_DYNAMIC_LOADING:
+ *	This symbol, if defined, indicates that dynamic loading of
+ *	some sort is available.
+ */
+#define USE_DYNAMIC_LOADING		/**/
+
+/* I_DBM:
+ *	This symbol, if defined, indicates that <dbm.h> exists and should
+ *	be included.
+ */
+/* I_RPCSVC_DBM:
+ *	This symbol, if defined, indicates that <rpcsvc/dbm.h> exists and
+ *	should be included.
+ */
+/*#define I_DBM	/**/
+#define I_RPCSVC_DBM	/**/
+
+/* I_LOCALE:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <locale.h>.
+ */
+#define	I_LOCALE		/**/
+
+/* I_SFIO:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sfio.h>.
+ */
+/*#define	I_SFIO		/**/
+
+/* I_SYS_STAT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/stat.h>.
+ */
+#define	I_SYS_STAT		/**/
+
+/* I_VALUES:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <values.h> to get definition of symbols like MINFLOAT or
+ *	MAXLONG, i.e. machine dependant limitations.  Probably, you
+ *	should use <limits.h> instead, if it is available.
+ */
+/*#define I_VALUES		/**/
+
+/* Free_t:
+ *	This variable contains the return type of free().  It is usually
+ * void, but occasionally int.
+ */
+/* Malloc_t:
+ *	This symbol is the type of pointer returned by malloc and realloc.
+ */
+#define Malloc_t void *			/**/
+#define Free_t void			/**/
+
+/* MYMALLOC:
+ *	This symbol, if defined, indicates that we're using our own malloc.
+ */
+/*#define MYMALLOC			/**/
+
+/* OLDARCHLIB:
+ *	This variable, if defined, holds the name of the directory in
+ *	which the user has perl5.000 or perl5.001 architecture-dependent
+ *	public library files for perl5.  For the most part, these
+ *	files will work with 5.002 (and later), but that is not
+ *	guaranteed.
+ */
+/* OLDARCHLIB_EXP:
+ *	This symbol contains the ~name expanded version of OLDARCHLIB, to be
+ *	used in programs that are not prepared to deal with ~ expansion at 
+ *	run-time.
+ */
+/*#define OLDARCHLIB ""		/**/
+/*#define OLDARCHLIB_EXP ""		/**/
+
+/* PRIVLIB:
+ *	This symbol contains the name of the private library for this package.
+ *	The library is private in the sense that it needn't be in anyone's
+ *	execution path, but it should be accessible by the world.  The program
+ *	should be prepared to do ~ expansion.
+ */
+/* PRIVLIB_EXP:
+ *	This symbol contains the ~name expanded version of PRIVLIB, to be used
+ *	in programs that are not prepared to deal with ~ expansion at run-time.
+ */
+#define PRIVLIB "c:\\perl\\lib"		/**/
+#define PRIVLIB_EXP "c:\\perl\\lib"		/**/
+
+/* SH_PATH:
+ *	This symbol contains the full pathname to the shell used on this
+ *	on this system to execute Bourne shell scripts.  Usually, this will be
+ *	/bin/sh, though it's possible that some systems will have /bin/ksh,
+ *	/bin/pdksh, /bin/ash, /bin/bash, or even something such as
+ *	D:/bin/sh.exe.
+ */
+#define SH_PATH "cmd /x /c"  /**/
+
+/* SIG_NAME:
+ *	This symbol contains a list of signal names in order of
+ *	signal number. This is intended
+ *	to be used as a static array initialization, like this:
+ *		char *sig_name[] = { SIG_NAME };
+ *	The signals in the list are separated with commas, and each signal
+ *	is surrounded by double quotes. There is no leading SIG in the signal
+ *	name, i.e. SIGQUIT is known as "QUIT".
+ *	Gaps in the signal numbers (up to NSIG) are filled in with NUMnn,
+ *	etc., where nn is the actual signal number (e.g. NUM37).
+ *	The signal number for sig_name[i] is stored in sig_num[i].
+ *	The last element is 0 to terminate the list with a NULL.  This
+ *	corresponds to the 0 at the end of the sig_num list.
+ */
+/* SIG_NUM:
+ *	This symbol contains a list of signal numbers, in the same order as the
+ *	SIG_NAME list. It is suitable for static array initialization, as in:
+ *		int sig_num[] = { SIG_NUM };
+ *	The signals in the list are separated with commas, and the indices
+ *	within that list and the SIG_NAME list match, so it's easy to compute
+ *	the signal name from a number or vice versa at the price of a small
+ *	dynamic linear lookup. 
+ *	Duplicates are allowed, but are moved to the end of the list.
+ *	The signal number corresponding to sig_name[i] is sig_number[i].
+ *	if (i < NSIG) then sig_number[i] == i.  
+ *	The last element is 0, corresponding to the 0 at the end of
+ *	the sig_name list.
+ */
+#define SIG_NAME "ZERO","HUP","INT","QUIT","ILL","TRAP","ABRT","EMT","FPE","KILL","BUS","SEGV","SYS","PIPE","ALRM","TERM","USR1","USR2","CHLD","PWR","WINCH","URG","IO","STOP","TSTP","CONT","TTIN","TTOU","VTALRM","PROF","XCPU","XFSZ","WAITING","LWP","FREEZE","THAW","RTMIN","NUM37","NUM38","NUM39","NUM40","NUM41","NUM42","RTMAX","IOT","CLD","POLL",0	/**/
+#define SIG_NUM 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,6,18,22,0	/**/
+
+/* SITEARCH:
+ *	This symbol contains the name of the private library for this package.
+ *	The library is private in the sense that it needn't be in anyone's
+ *	execution path, but it should be accessible by the world.  The program
+ *	should be prepared to do ~ expansion.
+ *	The standard distribution will put nothing in this directory.
+ *	Individual sites may place their own extensions and modules in
+ *	this directory.
+ */
+/* SITEARCH_EXP:
+ *	This symbol contains the ~name expanded version of SITEARCH, to be used
+ *	in programs that are not prepared to deal with ~ expansion at run-time.
+ */
+#define SITEARCH "c:\\perl\\lib\\site"		/**/
+#define SITEARCH_EXP "c:\\perl\\lib\\site"		/**/
+
+/* SITELIB:
+ *	This symbol contains the name of the private library for this package.
+ *	The library is private in the sense that it needn't be in anyone's
+ *	execution path, but it should be accessible by the world.  The program
+ *	should be prepared to do ~ expansion.
+ *	The standard distribution will put nothing in this directory.
+ *	Individual sites may place their own extensions and modules in
+ *	this directory.
+ */
+/* SITELIB_EXP:
+ *	This symbol contains the ~name expanded version of SITELIB, to be used
+ *	in programs that are not prepared to deal with ~ expansion at run-time.
+ */
+#define SITELIB "c:\\perl\\lib\\site"		/**/
+#define SITELIB_EXP "c:\\perl\\lib\\site"		/**/
+
+/* STARTPERL:
+ *	This variable contains the string to put in front of a perl
+ *	script to make sure (one hopes) that it runs with perl and not
+ *	some shell.
+ */
+#define STARTPERL "#perl"		/**/
+
+/* USE_PERLIO:
+ *	This symbol, if defined, indicates that the PerlIO abstraction should
+ *	be used throughout.  If not defined, stdio should be
+ *	used in a fully backward compatible manner.
+ */
+/*#define	USE_PERLIO		/**/
+
+/* VOIDFLAGS:
+ *	This symbol indicates how much support of the void type is given by this
+ *	compiler.  What various bits mean:
+ *
+ *	    1 = supports declaration of void
+ *	    2 = supports arrays of pointers to functions returning void
+ *	    4 = supports comparisons between pointers to void functions and
+ *		    addresses of void functions
+ *	    8 = suports declaration of generic void pointers
+ *
+ *	The package designer should define VOIDUSED to indicate the requirements
+ *	of the package.  This can be done either by #defining VOIDUSED before
+ *	including config.h, or by defining defvoidused in Myinit.U.  If the
+ *	latter approach is taken, only those flags will be tested.  If the
+ *	level of void support necessary is not present, defines void to int.
+ */
+#ifndef VOIDUSED
+#define VOIDUSED 15
+#endif
+#define VOIDFLAGS 15
+#if (VOIDFLAGS & VOIDUSED) != VOIDUSED
+#define void int		/* is void to be avoided? */
+#define M_VOID			/* Xenix strikes again */
+#endif
+
+#endif
+#include <win32.h>
+#ifndef DEBUGGING
+#define DEBUGGING
+#endif
--- /dev/null	Tue May 27 15:27:30 1997
+++ perl5.004-bc/win32/config_H.vc	Mon May 19 13:25:28 1997
@@ -0,0 +1,1798 @@
+/*
+ * This file was produced by running the config_h.SH script, which
+ * gets its values from config.sh, which is generally produced by
+ * running Configure.
+ *
+ * Feel free to modify any of this as the need arises.  Note, however,
+ * that running config_h.SH again will wipe out any changes you've made.
+ * For a more permanent change edit config.sh and rerun config_h.SH.
+ *
+ * $Id: Config_h.U,v 3.0.1.4 1995/09/25 09:10:49 ram Exp $
+ */
+
+/* Configuration time: Thu Apr 11 06:20:49 PDT 1996
+ * Configured by: garyng
+ * Target system: 
+ */
+
+#ifndef _config_h_
+#define _config_h_
+
+/* MEM_ALIGNBYTES:
+ *	This symbol contains the number of bytes required to align a
+ *	double. Usual values are 2, 4 and 8.
+ *	On NeXT starting with 3.2, you can build "Fat" Multiple Architecture
+ *	Binaries (MAB) for targets with varying alignment.  This only matters
+ *	for perl, where the config.h can be generated and installed on one
+ *	system, and used by a different architecture to build an extension.
+ *	The default is eight, for safety.
+ */
+#ifndef NeXT
+#define MEM_ALIGNBYTES 8	/**/
+#else  /* NeXT */
+#ifdef __m68k__
+#define MEM_ALIGNBYTES 2
+#else
+#ifdef __i386__
+#define MEM_ALIGNBYTES 4
+#else /* __hppa__, __sparc__ and default for unknown architectures */
+#define MEM_ALIGNBYTES 8
+#endif /* __i386__ */
+#endif /* __m68k__ */
+#endif /* NeXT */
+
+/* ARCHNAME:
+ *	This symbol holds a string representing the architecture name.
+ *	It may be used to construct an architecture-dependant pathname
+ *	where library files may be held under a private library, for
+ *	instance.
+ */
+#define ARCHNAME "MSWin32"		/**/
+
+/* BIN:
+ *	This symbol holds the path of the bin directory where the package will
+ *	be installed. Program must be prepared to deal with ~name substitution.
+ */
+/* BIN_EXP:
+ *	This symbol is the filename expanded version of the BIN symbol, for
+ *	programs that do not want to deal with that at run-time.
+ */
+#define BIN "c:\\perl\\bin"	/**/
+#define BIN_EXP "c:\\perl\\bin"	/**/
+
+/* CAT2:
+ *	This macro catenates 2 tokens together.
+ */
+/* STRINGIFY:
+ *	This macro surrounds its token with double quotes.
+ */
+#if 42 == 1
+#define CAT2(a,b)a/**/b
+#define CAT3(a,b,c)a/**/b/**/c
+#define CAT4(a,b,c,d)a/**/b/**/c/**/d
+#define CAT5(a,b,c,d,e)a/**/b/**/c/**/d/**/e
+#define STRINGIFY(a)"a"
+		/* If you can get stringification with catify, tell me how! */
+#endif
+#if 42 == 42
+#define CAT2(a,b)a ## b
+#define CAT3(a,b,c)a ## b ## c
+#define CAT4(a,b,c,d)a ## b ## c ## d
+#define CAT5(a,b,c,d,e)a ## b ## c ## d ## e
+#define StGiFy(a)# a
+#define STRINGIFY(a)StGiFy(a)
+#define SCAT2(a,b)StGiFy(a) StGiFy(b)
+#define SCAT3(a,b,c)StGiFy(a) StGiFy(b) StGiFy(c)
+#define SCAT4(a,b,c,d)StGiFy(a) StGiFy(b) StGiFy(c) StGiFy(d)
+#define SCAT5(a,b,c,d,e)StGiFy(a) StGiFy(b) StGiFy(c) StGiFy(d) StGiFy(e)
+#endif
+#ifndef CAT2
+#include "Bletch: How does this C preprocessor catenate tokens?"
+#endif
+
+/* CPPSTDIN:
+ *	This symbol contains the first part of the string which will invoke
+ *	the C preprocessor on the standard input and produce to standard
+ *	output.	 Typical value of "cc -E" or "/lib/cpp", but it can also
+ *	call a wrapper. See CPPRUN.
+ */
+/* CPPMINUS:
+ *	This symbol contains the second part of the string which will invoke
+ *	the C preprocessor on the standard input and produce to standard
+ *	output.  This symbol will have the value "-" if CPPSTDIN needs a minus
+ *	to specify standard input, otherwise the value is "".
+ */
+#define CPPSTDIN "cl -E"
+#define CPPMINUS ""
+
+/* HAS_ALARM:
+ *	This symbol, if defined, indicates that the alarm routine is
+ *	available.
+ */
+/*#define HAS_ALARM		/**/
+
+/* HASATTRIBUTE:
+ *	This symbol indicates the C compiler can check for function attributes,
+ *	such as printf formats. This is normally only supported by GNU cc.
+ */
+/*#define HASATTRIBUTE 	/**/
+#ifndef HASATTRIBUTE
+#define __attribute__(_arg_)
+#endif
+
+/* HAS_BCMP:
+ *	This symbol is defined if the bcmp() routine is available to
+ *	compare blocks of memory.
+ */
+/*#define HAS_BCMP	/**/
+
+/* HAS_BCOPY:
+ *	This symbol is defined if the bcopy() routine is available to
+ *	copy blocks of memory.
+ */
+/*#define HAS_BCOPY	/**/
+
+/* HAS_BZERO:
+ *	This symbol is defined if the bzero() routine is available to
+ *	set a memory block to 0.
+ */
+/*#define HAS_BZERO	/**/
+
+/* CASTI32:
+ *	This symbol is defined if the C compiler can cast negative
+ *	or large floating point numbers to 32-bit ints.
+ */
+#define	CASTI32		/**/
+
+/* CASTNEGFLOAT:
+ *	This symbol is defined if the C compiler can cast negative
+ *	numbers to unsigned longs, ints and shorts.
+ */
+/* CASTFLAGS:
+ *	This symbol contains flags that say what difficulties the compiler
+ *	has casting odd floating values to unsigned long:
+ *		0 = ok
+ *		1 = couldn't cast < 0
+ *		2 = couldn't cast >= 0x80000000
+ *		4 = couldn't cast in argument expression list
+ */
+#define	CASTNEGFLOAT		/**/
+#define CASTFLAGS 0		/**/
+
+/* HAS_CHOWN:
+ *	This symbol, if defined, indicates that the chown routine is
+ *	available.
+ */
+/*#define HAS_CHOWN		/**/
+
+/* HAS_CHROOT:
+ *	This symbol, if defined, indicates that the chroot routine is
+ *	available.
+ */
+/*#define HAS_CHROOT		/**/
+
+/* HAS_CHSIZE:
+ *	This symbol, if defined, indicates that the chsize routine is available
+ *	to truncate files.  You might need a -lx to get this routine.
+ */
+#define	HAS_CHSIZE		/**/
+
+/* VOID_CLOSEDIR:
+ *	This symbol, if defined, indicates that the closedir() routine
+ *	does not return a value.
+ */
+/*#define VOID_CLOSEDIR		/**/
+
+/* HASCONST:
+ *	This symbol, if defined, indicates that this C compiler knows about
+ *	the const type. There is no need to actually test for that symbol
+ *	within your programs. The mere use of the "const" keyword will
+ *	trigger the necessary tests.
+ */
+#define HASCONST	/**/
+#ifndef HASCONST
+#define const
+#endif
+
+/* HAS_CRYPT:
+ *	This symbol, if defined, indicates that the crypt routine is available
+ *	to encrypt passwords and the like.
+ */
+/*#define HAS_CRYPT		/**/
+
+/* HAS_CUSERID:
+ *	This symbol, if defined, indicates that the cuserid routine is
+ *	available to get character login names.
+ */
+/*#define HAS_CUSERID		/**/
+
+/* HAS_DBL_DIG:
+ *	This symbol, if defined, indicates that this system's <float.h>
+ *	or <limits.h> defines the symbol DBL_DIG, which is the number
+ *	of significant digits in a double precision number.  If this
+ *	symbol is not defined, a guess of 15 is usually pretty good.
+ */
+#define HAS_DBL_DIG 	/**/
+
+/* HAS_DIFFTIME:
+ *	This symbol, if defined, indicates that the difftime routine is
+ *	available.
+ */
+#define HAS_DIFFTIME		/**/
+
+/* HAS_DLERROR:
+ *	This symbol, if defined, indicates that the dlerror routine is
+ *	available to return a string describing the last error that
+ *	occurred from a call to dlopen(), dlclose() or dlsym().
+ */
+#define HAS_DLERROR	/**/
+
+/* HAS_DUP2:
+ *	This symbol, if defined, indicates that the dup2 routine is
+ *	available to duplicate file descriptors.
+ */
+#define HAS_DUP2	/**/
+
+/* HAS_FCHMOD:
+ *	This symbol, if defined, indicates that the fchmod routine is available
+ *	to change mode of opened files.  If unavailable, use chmod().
+ */
+/*#define HAS_FCHMOD		/**/
+
+/* HAS_FCHOWN:
+ *	This symbol, if defined, indicates that the fchown routine is available
+ *	to change ownership of opened files.  If unavailable, use chown().
+ */
+/*#define HAS_FCHOWN		/**/
+
+/* HAS_FCNTL:
+ *	This symbol, if defined, indicates to the C program that
+ *	the fcntl() function exists.
+ */
+/*#define HAS_FCNTL		/**/
+
+/* HAS_FGETPOS:
+ *	This symbol, if defined, indicates that the fgetpos routine is
+ *	available to get the file position indicator, similar to ftell().
+ */
+#define HAS_FGETPOS	/**/
+
+/* FLEXFILENAMES:
+ *	This symbol, if defined, indicates that the system supports filenames
+ *	longer than 14 characters.
+ */
+#define	FLEXFILENAMES		/**/
+
+/* HAS_FLOCK:
+ *	This symbol, if defined, indicates that the flock routine is
+ *	available to do file locking.
+ */
+#define HAS_FLOCK		/**/
+
+/* HAS_FORK:
+ *	This symbol, if defined, indicates that the fork routine is
+ *	available.
+ */
+/*#define HAS_FORK		/**/
+
+/* HAS_FSETPOS:
+ *	This symbol, if defined, indicates that the fsetpos routine is
+ *	available to set the file position indicator, similar to fseek().
+ */
+#define HAS_FSETPOS	/**/
+
+/* HAS_GETTIMEOFDAY:
+ *	This symbol, if defined, indicates that the gettimeofday() system
+ *	call is available for a sub-second accuracy clock. Usually, the file
+ *	<sys/resource.h> needs to be included (see I_SYS_RESOURCE).
+ *	The type "Timeval" should be used to refer to "struct timeval".
+ */
+/*#define HAS_GETTIMEOFDAY	/**/
+#ifdef HAS_GETTIMEOFDAY
+#define Timeval struct timeval	/* Structure used by gettimeofday() */
+#endif
+
+/* HAS_GETGROUPS:
+ *	This symbol, if defined, indicates that the getgroups() routine is
+ *	available to get the list of process groups.  If unavailable, multiple
+ *	groups are probably not supported.
+ */
+/* HAS_SETGROUPS:
+ *	This symbol, if defined, indicates that the setgroups() routine is
+ *	available to set the list of process groups.  If unavailable, multiple
+ *	groups are probably not supported.
+ */
+/*#define HAS_GETGROUPS		/**/
+/*#define HAS_SETGROUPS		/**/
+
+/* HAS_GETHOSTENT:
+ *	This symbol, if defined, indicates that the gethostent routine is
+ *	available to lookup host names in some data base or other.
+ */
+/*#define HAS_GETHOSTENT		/**/
+
+/* HAS_UNAME:
+ *	This symbol, if defined, indicates that the C program may use the
+ *	uname() routine to derive the host name.  See also HAS_GETHOSTNAME
+ *	and PHOSTNAME.
+ */
+/*#define HAS_UNAME		/**/
+
+/* HAS_GETLOGIN:
+ *	This symbol, if defined, indicates that the getlogin routine is
+ *	available to get the login name.
+ */
+/*#define HAS_GETLOGIN		/**/
+
+/* HAS_GETPGRP2:
+ *	This symbol, if defined, indicates that the getpgrp2() (as in DG/UX)
+ *	routine is available to get the current process group.
+ */
+/*#define HAS_GETPGRP2		/**/
+
+/* HAS_GETPPID:
+ *	This symbol, if defined, indicates that the getppid routine is
+ *	available to get the parent process ID.
+ */
+/*#define HAS_GETPPID		/**/
+
+/* HAS_GETPRIORITY:
+ *	This symbol, if defined, indicates that the getpriority routine is
+ *	available to get a process's priority.
+ */
+/*#define HAS_GETPRIORITY		/**/
+
+/* HAS_HTONL:
+ *	This symbol, if defined, indicates that the htonl() routine (and
+ *	friends htons() ntohl() ntohs()) are available to do network
+ *	order byte swapping.
+ */
+/* HAS_HTONS:
+ *	This symbol, if defined, indicates that the htons() routine (and
+ *	friends htonl() ntohl() ntohs()) are available to do network
+ *	order byte swapping.
+ */
+/* HAS_NTOHL:
+ *	This symbol, if defined, indicates that the ntohl() routine (and
+ *	friends htonl() htons() ntohs()) are available to do network
+ *	order byte swapping.
+ */
+/* HAS_NTOHS:
+ *	This symbol, if defined, indicates that the ntohs() routine (and
+ *	friends htonl() htons() ntohl()) are available to do network
+ *	order byte swapping.
+ */
+#define HAS_HTONL		/**/
+#define HAS_HTONS		/**/
+#define HAS_NTOHL		/**/
+#define HAS_NTOHS		/**/
+
+/* HAS_ISASCII:
+ *	This manifest constant lets the C program know that isascii 
+ *	is available.
+ */
+#define HAS_ISASCII		/**/
+
+/* HAS_KILLPG:
+ *	This symbol, if defined, indicates that the killpg routine is available
+ *	to kill process groups.  If unavailable, you probably should use kill
+ *	with a negative process number.
+ */
+/*#define HAS_KILLPG	/**/
+
+/* HAS_LINK:
+ *	This symbol, if defined, indicates that the link routine is
+ *	available to create hard links.
+ */
+/*#define HAS_LINK	/**/
+
+/* HAS_LOCALECONV:
+ *	This symbol, if defined, indicates that the localeconv routine is
+ *	available for numeric and monetary formatting conventions.
+ */
+#define HAS_LOCALECONV	/**/
+
+/* HAS_LOCKF:
+ *	This symbol, if defined, indicates that the lockf routine is
+ *	available to do file locking.
+ */
+/*#define HAS_LOCKF		/**/
+
+/* HAS_LSTAT:
+ *	This symbol, if defined, indicates that the lstat routine is
+ *	available to do file stats on symbolic links.
+ */
+/*#define HAS_LSTAT		/**/
+
+/* HAS_MBLEN:
+ *	This symbol, if defined, indicates that the mblen routine is available
+ *	to find the number of bytes in a multibye character.
+ */
+#define HAS_MBLEN		/**/
+
+/* HAS_MBSTOWCS:
+ *	This symbol, if defined, indicates that the mbstowcs routine is
+ *	available to covert a multibyte string into a wide character string.
+ */
+#define	HAS_MBSTOWCS		/**/
+
+/* HAS_MBTOWC:
+ *	This symbol, if defined, indicates that the mbtowc routine is available
+ *	to covert a multibyte to a wide character.
+ */
+#define HAS_MBTOWC		/**/
+
+/* HAS_MEMCMP:
+ *	This symbol, if defined, indicates that the memcmp routine is available
+ *	to compare blocks of memory.
+ */
+#define HAS_MEMCMP	/**/
+
+/* HAS_MEMCPY:
+ *	This symbol, if defined, indicates that the memcpy routine is available
+ *	to copy blocks of memory.
+ */
+#define HAS_MEMCPY	/**/
+
+/* HAS_MEMMOVE:
+ *	This symbol, if defined, indicates that the memmove routine is available
+ *	to copy potentially overlapping blocks of memory. This should be used
+ *	only when HAS_SAFE_BCOPY is not defined. If neither is there, roll your
+ *	own version.
+ */
+#define HAS_MEMMOVE	/**/
+
+/* HAS_MEMSET:
+ *	This symbol, if defined, indicates that the memset routine is available
+ *	to set blocks of memory.
+ */
+#define HAS_MEMSET	/**/
+
+/* HAS_MKDIR:
+ *	This symbol, if defined, indicates that the mkdir routine is available
+ *	to create directories.  Otherwise you should fork off a new process to
+ *	exec /bin/mkdir.
+ */
+#define HAS_MKDIR		/**/
+
+/* HAS_MKFIFO:
+ *	This symbol, if defined, indicates that the mkfifo routine is
+ *	available to create FIFOs. Otherwise, mknod should be able to
+ *	do it for you. However, if mkfifo is there, mknod might require
+ *	super-user privileges which mkfifo will not.
+ */
+/*#define HAS_MKFIFO		/**/
+
+/* HAS_MKTIME:
+ *	This symbol, if defined, indicates that the mktime routine is
+ *	available.
+ */
+#define HAS_MKTIME		/**/
+
+/* HAS_MSG:
+ *	This symbol, if defined, indicates that the entire msg*(2) library is
+ *	supported (IPC mechanism based on message queues).
+ */
+/*#define HAS_MSG		/**/
+
+/* HAS_NICE:
+ *	This symbol, if defined, indicates that the nice routine is
+ *	available.
+ */
+/*#define HAS_NICE		/**/
+
+/* HAS_OPEN3:
+ *	This manifest constant lets the C program know that the three
+ *	argument form of open(2) is available.
+ */
+/*#define HAS_OPEN3		/**/
+
+/* HAS_PATHCONF:
+ *	This symbol, if defined, indicates that pathconf() is available
+ *	to determine file-system related limits and options associated
+ *	with a given filename.
+ */
+/* HAS_FPATHCONF:
+ *	This symbol, if defined, indicates that pathconf() is available
+ *	to determine file-system related limits and options associated
+ *	with a given open file descriptor.
+ */
+/*#define HAS_PATHCONF		/**/
+/*#define HAS_FPATHCONF		/**/
+
+/* HAS_PAUSE:
+ *	This symbol, if defined, indicates that the pause routine is
+ *	available to suspend a process until a signal is received.
+ */
+#define HAS_PAUSE		/**/
+
+/* HAS_PIPE:
+ *	This symbol, if defined, indicates that the pipe routine is
+ *	available to create an inter-process channel.
+ */
+#define HAS_PIPE		/**/
+
+/* HAS_POLL:
+ *	This symbol, if defined, indicates that the poll routine is
+ *	available to poll active file descriptors.
+ */
+/*#define HAS_POLL		/**/
+
+/* HAS_READDIR:
+ *	This symbol, if defined, indicates that the readdir routine is
+ *	available to read directory entries. You may have to include
+ *	<dirent.h>. See I_DIRENT.
+ */
+#define HAS_READDIR		/**/
+
+/* HAS_SEEKDIR:
+ *	This symbol, if defined, indicates that the seekdir routine is
+ *	available. You may have to include <dirent.h>. See I_DIRENT.
+ */
+#define HAS_SEEKDIR		/**/
+
+/* HAS_TELLDIR:
+ *	This symbol, if defined, indicates that the telldir routine is
+ *	available. You may have to include <dirent.h>. See I_DIRENT.
+ */
+#define HAS_TELLDIR		/**/
+
+/* HAS_REWINDDIR:
+ *	This symbol, if defined, indicates that the rewinddir routine is
+ *	available. You may have to include <dirent.h>. See I_DIRENT.
+ */
+#define HAS_REWINDDIR		/**/
+
+/* HAS_READLINK:
+ *	This symbol, if defined, indicates that the readlink routine is
+ *	available to read the value of a symbolic link.
+ */
+/*#define HAS_READLINK		/**/
+
+/* HAS_RENAME:
+ *	This symbol, if defined, indicates that the rename routine is available
+ *	to rename files.  Otherwise you should do the unlink(), link(), unlink()
+ *	trick.
+ */
+#define HAS_RENAME	/**/
+
+/* HAS_RMDIR:
+ *	This symbol, if defined, indicates that the rmdir routine is
+ *	available to remove directories. Otherwise you should fork off a
+ *	new process to exec /bin/rmdir.
+ */
+#define HAS_RMDIR		/**/
+
+/* HAS_SAFE_BCOPY:
+ *	This symbol, if defined, indicates that the bcopy routine is available
+ *	to copy potentially overlapping memory blocks. Otherwise you should
+ *	probably use memmove() or memcpy(). If neither is defined, roll your
+ *	own version.
+ */
+/*#define HAS_SAFE_BCOPY	/**/
+
+/* HAS_SAFE_MEMCPY:
+ *	This symbol, if defined, indicates that the memcpy routine is available
+ *	to copy potentially overlapping memory blocks. Otherwise you should
+ *	probably use memmove() or memcpy(). If neither is defined, roll your
+ *	own version.
+ */
+/*#define HAS_SAFE_MEMCPY	/**/
+
+/* HAS_SANE_MEMCMP:
+ *	This symbol, if defined, indicates that the memcmp routine is available
+ *	and can be used to compare relative magnitudes of chars with their high
+ *	bits set.  If it is not defined, roll your own version.
+ */
+#define HAS_SANE_MEMCMP	/**/
+
+/* HAS_SELECT:
+ *	This symbol, if defined, indicates that the select routine is
+ *	available to select active file descriptors. If the timeout field
+ *	is used, <sys/time.h> may need to be included.
+ */
+#define HAS_SELECT	/**/
+
+/* HAS_SEM:
+ *	This symbol, if defined, indicates that the entire sem*(2) library is
+ *	supported.
+ */
+/*#define HAS_SEM		/**/
+
+/* HAS_SETEGID:
+ *	This symbol, if defined, indicates that the setegid routine is available
+ *	to change the effective gid of the current program.
+ */
+/*#define HAS_SETEGID		/**/
+
+/* HAS_SETEUID:
+ *	This symbol, if defined, indicates that the seteuid routine is available
+ *	to change the effective uid of the current program.
+ */
+/*#define HAS_SETEUID		/**/
+
+/* HAS_SETLINEBUF:
+ *	This symbol, if defined, indicates that the setlinebuf routine is
+ *	available to change stderr or stdout from block-buffered or unbuffered
+ *	to a line-buffered mode.
+ */
+/*#define HAS_SETLINEBUF		/**/
+
+/* HAS_SETLOCALE:
+ *	This symbol, if defined, indicates that the setlocale routine is
+ *	available to handle locale-specific ctype implementations.
+ */
+#define HAS_SETLOCALE	/**/
+
+/* HAS_SETPGRP2:
+ *	This symbol, if defined, indicates that the setpgrp2() (as in DG/UX)
+ *	routine is available to set the current process group.
+ */
+/*#define HAS_SETPGRP2		/**/
+
+/* HAS_SETPRIORITY:
+ *	This symbol, if defined, indicates that the setpriority routine is
+ *	available to set a process's priority.
+ */
+/*#define HAS_SETPRIORITY		/**/
+
+/* HAS_SETREGID:
+ *	This symbol, if defined, indicates that the setregid routine is
+ *	available to change the real and effective gid of the current
+ *	process.
+ */
+/* HAS_SETRESGID:
+ *	This symbol, if defined, indicates that the setresgid routine is
+ *	available to change the real, effective and saved gid of the current
+ *	process.
+ */
+/*#define HAS_SETREGID		/**/
+/*#define HAS_SETRESGID		/**/
+
+/* HAS_SETREUID:
+ *	This symbol, if defined, indicates that the setreuid routine is
+ *	available to change the real and effective uid of the current
+ *	process.
+ */
+/* HAS_SETRESUID:
+ *	This symbol, if defined, indicates that the setresuid routine is
+ *	available to change the real, effective and saved uid of the current
+ *	process.
+ */
+/*#define HAS_SETREUID		/**/
+/*#define HAS_SETRESUID		/**/
+
+/* HAS_SETRGID:
+ *	This symbol, if defined, indicates that the setrgid routine is available
+ *	to change the real gid of the current program.
+ */
+/*#define HAS_SETRGID		/**/
+
+/* HAS_SETRUID:
+ *	This symbol, if defined, indicates that the setruid routine is available
+ *	to change the real uid of the current program.
+ */
+/*#define HAS_SETRUID		/**/
+
+/* HAS_SETSID:
+ *	This symbol, if defined, indicates that the setsid routine is
+ *	available to set the process group ID.
+ */
+/*#define HAS_SETSID	/**/
+
+/* HAS_SHM:
+ *	This symbol, if defined, indicates that the entire shm*(2) library is
+ *	supported.
+ */
+/*#define HAS_SHM		/**/
+
+/* Shmat_t:
+ *	This symbol holds the return type of the shmat() system call.
+ *	Usually set to 'void *' or 'char *'.
+ */
+/* HAS_SHMAT_PROTOTYPE:
+ *	This symbol, if defined, indicates that the sys/shm.h includes
+ *	a prototype for shmat().  Otherwise, it is up to the program to
+ *	guess one.  Shmat_t shmat _((int, Shmat_t, int)) is a good guess,
+ *	but not always right so it should be emitted by the program only
+ *	when HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.
+ */
+#define Shmat_t void *	/**/
+/*#define HAS_SHMAT_PROTOTYPE	/**/
+
+/* HAS_SIGACTION:
+ *	This symbol, if defined, indicates that Vr4's sigaction() routine
+ *	is available.
+ */
+/*#define HAS_SIGACTION	/**/
+
+/* HAS_SOCKET:
+ *	This symbol, if defined, indicates that the BSD socket interface is
+ *	supported.
+ */
+/* HAS_SOCKETPAIR:
+ *	This symbol, if defined, indicates that the BSD socketpair() call is
+ *	supported.
+ */
+#define HAS_SOCKET		/**/
+/*#define HAS_SOCKETPAIR	/**/
+
+/* USE_STAT_BLOCKS:
+ *	This symbol is defined if this system has a stat structure declaring
+ *	st_blksize and st_blocks.
+ */
+/*#define USE_STAT_BLOCKS 	/**/
+
+/* USE_STDIO_PTR:
+ *	This symbol is defined if the _ptr and _cnt fields (or similar)
+ *	of the stdio FILE structure can be used to access the stdio buffer
+ *	for a file handle.  If this is defined, then the FILE_ptr(fp)
+ *	and FILE_cnt(fp) macros will also be defined and should be used
+ *	to access these fields.
+ */
+/* FILE_ptr:
+ *	This macro is used to access the _ptr field (or equivalent) of the
+ *	FILE structure pointed to by its argument. This macro will always be
+ *	defined if USE_STDIO_PTR is defined.
+ */
+/* STDIO_PTR_LVALUE:
+ *	This symbol is defined if the FILE_ptr macro can be used as an
+ *	lvalue.
+ */
+/* FILE_cnt:
+ *	This macro is used to access the _cnt field (or equivalent) of the
+ *	FILE structure pointed to by its argument. This macro will always be
+ *	defined if USE_STDIO_PTR is defined.
+ */
+/* STDIO_CNT_LVALUE:
+ *	This symbol is defined if the FILE_cnt macro can be used as an
+ *	lvalue.
+ */
+#define USE_STDIO_PTR 	/**/
+#ifdef USE_STDIO_PTR
+#define FILE_ptr(fp)	((fp)->_ptr)
+#define STDIO_PTR_LVALUE 		/**/
+#define FILE_cnt(fp)	((fp)->_cnt)
+#define STDIO_CNT_LVALUE 		/**/
+#endif
+
+/* USE_STDIO_BASE:
+ *	This symbol is defined if the _base field (or similar) of the
+ *	stdio FILE structure can be used to access the stdio buffer for
+ *	a file handle.  If this is defined, then the FILE_base(fp) macro
+ *	will also be defined and should be used to access this field.
+ *	Also, the FILE_bufsiz(fp) macro will be defined and should be used
+ *	to determine the number of bytes in the buffer.  USE_STDIO_BASE
+ *	will never be defined unless USE_STDIO_PTR is.
+ */
+/* FILE_base:
+ *	This macro is used to access the _base field (or equivalent) of the
+ *	FILE structure pointed to by its argument. This macro will always be
+ *	defined if USE_STDIO_BASE is defined.
+ */
+/* FILE_bufsiz:
+ *	This macro is used to determine the number of bytes in the I/O
+ *	buffer pointed to by _base field (or equivalent) of the FILE
+ *	structure pointed to its argument. This macro will always be defined
+ *	if USE_STDIO_BASE is defined.
+ */
+#define USE_STDIO_BASE 	/**/
+#ifdef USE_STDIO_BASE
+#define FILE_base(fp)	((fp)->_base)
+#define FILE_bufsiz(fp)	((fp)->_cnt + (fp)->_ptr - (fp)->_base)
+#endif
+
+/* HAS_STRCHR:
+ *	This symbol is defined to indicate that the strchr()/strrchr()
+ *	functions are available for string searching. If not, try the
+ *	index()/rindex() pair.
+ */
+/* HAS_INDEX:
+ *	This symbol is defined to indicate that the index()/rindex()
+ *	functions are available for string searching.
+ */
+#define HAS_STRCHR	/**/
+/*#define HAS_INDEX	/**/
+
+/* HAS_STRCOLL:
+ *	This symbol, if defined, indicates that the strcoll routine is
+ *	available to compare strings using collating information.
+ */
+#define HAS_STRCOLL	/**/
+
+/* USE_STRUCT_COPY:
+ *	This symbol, if defined, indicates that this C compiler knows how
+ *	to copy structures.  If undefined, you'll need to use a block copy
+ *	routine of some sort instead.
+ */
+#define	USE_STRUCT_COPY	/**/
+
+/* HAS_STRERROR:
+ *	This symbol, if defined, indicates that the strerror routine is
+ *	available to translate error numbers to strings. See the writeup
+ *	of Strerror() in this file before you try to define your own.
+ */
+/* HAS_SYS_ERRLIST:
+ *	This symbol, if defined, indicates that the sys_errlist array is
+ *	available to translate error numbers to strings. The extern int
+ *	sys_nerr gives the size of that table.
+ */
+/* Strerror:
+ *	This preprocessor symbol is defined as a macro if strerror() is
+ *	not available to translate error numbers to strings but sys_errlist[]
+ *	array is there.
+ */
+#define HAS_STRERROR		/**/
+#define HAS_SYS_ERRLIST	/**/
+#define Strerror(e) strerror(e)
+
+/* HAS_STRTOD:
+ *	This symbol, if defined, indicates that the strtod routine is
+ *	available to provide better numeric string conversion than atof().
+ */
+#define HAS_STRTOD	/**/
+
+/* HAS_STRTOL:
+ *	This symbol, if defined, indicates that the strtol routine is available
+ *	to provide better numeric string conversion than atoi() and friends.
+ */
+#define HAS_STRTOL	/**/
+
+/* HAS_STRTOUL:
+ *	This symbol, if defined, indicates that the strtoul routine is
+ *	available to provide conversion of strings to unsigned long.
+ */
+#define HAS_STRTOUL	/**/
+
+/* HAS_STRXFRM:
+ *	This symbol, if defined, indicates that the strxfrm() routine is
+ *	available to transform strings.
+ */
+#define HAS_STRXFRM	/**/
+
+/* HAS_SYMLINK:
+ *	This symbol, if defined, indicates that the symlink routine is available
+ *	to create symbolic links.
+ */
+/*#define HAS_SYMLINK	/**/
+
+/* HAS_SYSCALL:
+ *	This symbol, if defined, indicates that the syscall routine is
+ *	available to call arbitrary system calls. If undefined, that's tough.
+ */
+/*#define HAS_SYSCALL	/**/
+
+/* HAS_SYSCONF:
+ *	This symbol, if defined, indicates that sysconf() is available
+ *	to determine system related limits and options.
+ */
+/*#define HAS_SYSCONF	/**/
+
+/* HAS_SYSTEM:
+ *	This symbol, if defined, indicates that the system routine is
+ *	available to issue a shell command.
+ */
+#define HAS_SYSTEM	/**/
+
+/* HAS_TCGETPGRP:
+ *	This symbol, if defined, indicates that the tcgetpgrp routine is
+ *	available to get foreground process group ID.
+ */
+/*#define HAS_TCGETPGRP		/**/
+
+/* HAS_TCSETPGRP:
+ *	This symbol, if defined, indicates that the tcsetpgrp routine is
+ *	available to set foreground process group ID.
+ */
+/*#define HAS_TCSETPGRP		/**/
+
+/* Time_t:
+ *	This symbol holds the type returned by time(). It can be long,
+ *	or time_t on BSD sites (in which case <sys/types.h> should be
+ *	included).
+ */
+#define Time_t time_t		/* Time type */
+
+/* HAS_TIMES:
+ *	This symbol, if defined, indicates that the times() routine exists.
+ *	Note that this became obsolete on some systems (SUNOS), which now
+ * use getrusage(). It may be necessary to include <sys/times.h>.
+ */
+#define HAS_TIMES		/**/
+
+/* HAS_TRUNCATE:
+ *	This symbol, if defined, indicates that the truncate routine is
+ *	available to truncate files.
+ */
+/*#define HAS_TRUNCATE	/**/
+
+/* HAS_TZNAME:
+ *	This symbol, if defined, indicates that the tzname[] array is
+ *	available to access timezone names.
+ */
+#define HAS_TZNAME		/**/
+
+/* HAS_UMASK:
+ *	This symbol, if defined, indicates that the umask routine is
+ *	available to set and get the value of the file creation mask.
+ */
+#define HAS_UMASK		/**/
+
+/* HAS_VFORK:
+ *	This symbol, if defined, indicates that vfork() exists.
+ */
+/*#define HAS_VFORK	/**/
+
+/* Signal_t:
+ *	This symbol's value is either "void" or "int", corresponding to the
+ *	appropriate return type of a signal handler.  Thus, you can declare
+ *	a signal handler using "Signal_t (*handler)()", and define the
+ *	handler using "Signal_t handler(sig)".
+ */
+#define Signal_t void	/* Signal handler's return type */
+
+/* HASVOLATILE:
+ *	This symbol, if defined, indicates that this C compiler knows about
+ *	the volatile declaration.
+ */
+#define	HASVOLATILE	/**/
+#ifndef HASVOLATILE
+#define volatile
+#endif
+
+/* HAS_VPRINTF:
+ *	This symbol, if defined, indicates that the vprintf routine is available
+ *	to printf with a pointer to an argument list.  If unavailable, you
+ *	may need to write your own, probably in terms of _doprnt().
+ */
+/* USE_CHAR_VSPRINTF:
+ *	This symbol is defined if this system has vsprintf() returning type
+ *	(char*).  The trend seems to be to declare it as "int vsprintf()".  It
+ *	is up to the package author to declare vsprintf correctly based on the
+ *	symbol.
+ */
+#define HAS_VPRINTF	/**/
+/*#define USE_CHAR_VSPRINTF 	/**/
+
+/* HAS_WAIT4:
+ *	This symbol, if defined, indicates that wait4() exists.
+ */
+/*#define HAS_WAIT4	/**/
+
+/* HAS_WAITPID:
+ *	This symbol, if defined, indicates that the waitpid routine is
+ *	available to wait for child process.
+ */
+/*#define HAS_WAITPID	/**/
+
+/* HAS_WCSTOMBS:
+ *	This symbol, if defined, indicates that the wcstombs routine is
+ *	available to convert wide character strings to multibyte strings.
+ */
+#define HAS_WCSTOMBS	/**/
+
+/* HAS_WCTOMB:
+ *	This symbol, if defined, indicates that the wctomb routine is available
+ *	to covert a wide character to a multibyte.
+ */
+#define HAS_WCTOMB		/**/
+
+/* Fpos_t:
+ *	This symbol holds the type used to declare file positions in libc.
+ *	It can be fpos_t, long, uint, etc... It may be necessary to include
+ *	<sys/types.h> to get any typedef'ed information.
+ */
+#define Fpos_t fpos_t		/* File position type */
+
+/* Gid_t:
+ *	This symbol holds the return type of getgid() and the type of
+ *	argument to setrgid() and related functions.  Typically,
+ *	it is the type of group ids in the kernel. It can be int, ushort,
+ *	uid_t, etc... It may be necessary to include <sys/types.h> to get
+ *	any typedef'ed information.
+ */
+#define Gid_t gid_t		/* Type for getgid(), etc... */
+
+/* Groups_t:
+ *	This symbol holds the type used for the second argument to
+ *	[gs]etgroups().  Usually, this is the same of gidtype, but
+ *	sometimes it isn't.  It can be int, ushort, uid_t, etc... 
+ *	It may be necessary to include <sys/types.h> to get any 
+ *	typedef'ed information.  This is only required if you have
+ *	getgroups() or setgroups().
+ */
+#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)
+#define Groups_t gid_t	/* Type for 2nd arg to [gs]etgroups() */
+#endif
+
+/* DB_Prefix_t:
+ *	This symbol contains the type of the prefix structure element
+ *	in the <db.h> header file.  In older versions of DB, it was
+ *	int, while in newer ones it is u_int32_t.
+ */
+/* DB_Hash_t:
+ *	This symbol contains the type of the prefix structure element
+ *	in the <db.h> header file.  In older versions of DB, it was
+ *	int, while in newer ones it is size_t.
+ */
+#define DB_Hash_t	int		/**/
+#define DB_Prefix_t	int  	/**/
+
+/* I_DIRENT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <dirent.h>. Using this symbol also triggers the definition
+ *	of the Direntry_t define which ends up being 'struct dirent' or
+ *	'struct direct' depending on the availability of <dirent.h>.
+ */
+/* DIRNAMLEN:
+ *	This symbol, if defined, indicates to the C program that the length
+ *	of directory entry names is provided by a d_namlen field.  Otherwise
+ *	you need to do strlen() on the d_name field.
+ */
+/* Direntry_t:
+ *	This symbol is set to 'struct direct' or 'struct dirent' depending on
+ *	whether dirent is available or not. You should use this pseudo type to
+ *	portably declare your directory entries.
+ */
+#define I_DIRENT		/**/
+#define DIRNAMLEN	/**/
+#define Direntry_t struct direct
+
+/* I_DLFCN:
+ *	This symbol, if defined, indicates that <dlfcn.h> exists and should
+ *	be included.
+ */
+#define I_DLFCN		/**/
+
+/* I_FCNTL:
+ *	This manifest constant tells the C program to include <fcntl.h>.
+ */
+#define I_FCNTL	/**/
+
+/* I_FLOAT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <float.h> to get definition of symbols like DBL_MAX or
+ *	DBL_MIN, i.e. machine dependent floating point values.
+ */
+#define I_FLOAT		/**/
+
+/* I_GRP:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <grp.h>.
+ */
+#define I_GRP		/**/
+
+/* I_LIMITS:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <limits.h> to get definition of symbols like WORD_BIT or
+ *	LONG_MAX, i.e. machine dependant limitations.
+ */
+#define I_LIMITS		/**/
+
+/* I_MATH:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <math.h>.
+ */
+#define I_MATH		/**/
+
+/* I_MEMORY:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <memory.h>.
+ */
+/*#define I_MEMORY		/**/
+
+/* I_NDBM:
+ *	This symbol, if defined, indicates that <ndbm.h> exists and should
+ *	be included.
+ */
+/*#define I_NDBM	/**/
+
+/* I_NET_ERRNO:
+ *	This symbol, if defined, indicates that <net/errno.h> exists and 
+ *	should be included.
+ */
+/*#define I_NET_ERRNO		/**/
+
+/* I_NETINET_IN:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <netinet/in.h>. Otherwise, you may try <sys/in.h>.
+ */
+/*#define I_NETINET_IN	/**/
+
+/* I_PWD:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <pwd.h>.
+ */
+/* PWQUOTA:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_quota.
+ */
+/* PWAGE:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_age.
+ */
+/* PWCHANGE:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_change.
+ */
+/* PWCLASS:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_class.
+ */
+/* PWEXPIRE:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_expire.
+ */
+/* PWCOMMENT:
+ *	This symbol, if defined, indicates to the C program that struct passwd
+ *	contains pw_comment.
+ */
+/*#define I_PWD		/**/
+/*#define PWQUOTA	/**/
+/*#define PWAGE	/**/
+/*#define PWCHANGE	/**/
+/*#define PWCLASS	/**/
+/*#define PWEXPIRE	/**/
+/*#define PWCOMMENT	/**/
+
+/* I_STDDEF:
+ *	This symbol, if defined, indicates that <stddef.h> exists and should
+ *	be included.
+ */
+#define I_STDDEF	/**/
+
+/* I_STDLIB:
+ *	This symbol, if defined, indicates that <stdlib.h> exists and should
+ *	be included.
+ */
+#define I_STDLIB		/**/
+
+/* I_STRING:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <string.h> (USG systems) instead of <strings.h> (BSD systems).
+ */
+#define I_STRING		/**/
+
+/* I_SYS_DIR:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/dir.h>.
+ */
+/*#define I_SYS_DIR		/**/
+
+/* I_SYS_FILE:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/file.h> to get definition of R_OK and friends.
+ */
+/*#define I_SYS_FILE		/**/
+
+/* I_SYS_IOCTL:
+ *	This symbol, if defined, indicates that <sys/ioctl.h> exists and should
+ *	be included. Otherwise, include <sgtty.h> or <termio.h>.
+ */
+/*#define	I_SYS_IOCTL		/**/
+
+/* I_SYS_NDIR:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/ndir.h>.
+ */
+/*#define I_SYS_NDIR	/**/
+
+/* I_SYS_PARAM:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/param.h>.
+ */
+/*#define I_SYS_PARAM		/**/
+
+/* I_SYS_RESOURCE:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/resource.h>.
+ */
+/*#define I_SYS_RESOURCE		/**/
+
+/* I_SYS_SELECT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/select.h> in order to get definition of struct timeval.
+ */
+/*#define I_SYS_SELECT	/**/
+
+/* I_SYS_TIMES:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/times.h>.
+ */
+/*#define	I_SYS_TIMES		/**/
+
+/* I_SYS_TYPES:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/types.h>.
+ */
+#define	I_SYS_TYPES		/**/
+
+/* I_SYS_UN:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/un.h> to get UNIX domain socket definitions.
+ */
+/*#define I_SYS_UN		/**/
+
+/* I_SYS_WAIT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/wait.h>.
+ */
+/*#define I_SYS_WAIT	/**/
+
+/* I_TERMIO:
+ *	This symbol, if defined, indicates that the program should include
+ *	<termio.h> rather than <sgtty.h>.  There are also differences in
+ *	the ioctl() calls that depend on the value of this symbol.
+ */
+/* I_TERMIOS:
+ *	This symbol, if defined, indicates that the program should include
+ *	the POSIX termios.h rather than sgtty.h or termio.h.
+ *	There are also differences in the ioctl() calls that depend on the
+ *	value of this symbol.
+ */
+/* I_SGTTY:
+ *	This symbol, if defined, indicates that the program should include
+ *	<sgtty.h> rather than <termio.h>.  There are also differences in
+ *	the ioctl() calls that depend on the value of this symbol.
+ */
+/*#define I_TERMIO		/**/
+/*#define I_TERMIOS		/**/
+/*#define I_SGTTY		/**/
+
+/* I_TIME:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <time.h>.
+ */
+/* I_SYS_TIME:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/time.h>.
+ */
+/* I_SYS_TIME_KERNEL:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/time.h> with KERNEL defined.
+ */
+#define I_TIME		/**/
+/*#define I_SYS_TIME		/**/
+/*#define I_SYS_TIME_KERNEL		/**/
+
+/* I_UNISTD:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <unistd.h>.
+ */
+/*#define I_UNISTD		/**/
+
+/* I_UTIME:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <utime.h>.
+ */
+#define I_UTIME		/**/
+
+/* I_STDARG:
+ *	This symbol, if defined, indicates that <stdarg.h> exists and should
+ *	be included.
+ */
+/* I_VARARGS:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <varargs.h>.
+ */
+#define I_STDARG		/**/
+/*#define I_VARARGS	/**/
+
+/* I_VFORK:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include vfork.h.
+ */
+/*#define I_VFORK	/**/
+
+/* INTSIZE:
+ *	This symbol contains the value of sizeof(int) so that the C
+ *	preprocessor can make decisions based on it.
+ */
+/* LONGSIZE:
+ *	This symbol contains the value of sizeof(long) so that the C
+ *	preprocessor can make decisions based on it.
+ */
+/* SHORTSIZE:
+ *	This symbol contains the value of sizeof(short) so that the C
+ *	preprocessor can make decisions based on it.
+ */
+#define INTSIZE 4		/**/
+#define LONGSIZE 4		/**/
+#define SHORTSIZE 2		/**/
+
+/* Off_t:
+ *	This symbol holds the type used to declare offsets in the kernel.
+ *	It can be int, long, off_t, etc... It may be necessary to include
+ *	<sys/types.h> to get any typedef'ed information.
+ */
+#define Off_t off_t		/* <offset> type */
+
+/* Mode_t:
+ *	This symbol holds the type used to declare file modes 
+ *	for systems calls.  It is usually mode_t, but may be
+ *	int or unsigned short.  It may be necessary to include <sys/types.h>
+ *	to get any typedef'ed information.
+ */
+#define Mode_t mode_t	 /* file mode parameter for system calls */
+
+/* VAL_O_NONBLOCK:
+ *	This symbol is to be used during open() or fcntl(F_SETFL) to turn on
+ *	non-blocking I/O for the file descriptor. Note that there is no way
+ *	back, i.e. you cannot turn it blocking again this way. If you wish to
+ *	alternatively switch between blocking and non-blocking, use the
+ *	ioctl(FIOSNBIO) call instead, but that is not supported by all devices.
+ */
+/* VAL_EAGAIN:
+ *	This symbol holds the errno error code set by read() when no data was
+ *	present on the non-blocking file descriptor.
+ */
+/* RD_NODATA:
+ *	This symbol holds the return code from read() when no data is present
+ *	on the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is
+ *	not defined, then you can't distinguish between no data and EOF by
+ *	issuing a read(). You'll have to find another way to tell for sure!
+ */
+/* EOF_NONBLOCK:
+ *	This symbol, if defined, indicates to the C program that a read() on
+ *	a non-blocking file descriptor will return 0 on EOF, and not the value
+ *	held in RD_NODATA (-1 usually, in that case!).
+ */
+#define VAL_O_NONBLOCK O_NONBLOCK
+#define VAL_EAGAIN EAGAIN
+#define RD_NODATA -1
+#define EOF_NONBLOCK
+
+/* CAN_PROTOTYPE:
+ *	If defined, this macro indicates that the C compiler can handle
+ *	function prototypes.
+ */
+/* _:
+ *	This macro is used to declare function parameters for folks who want
+ *	to make declarations with prototypes using a different style than
+ *	the above macros.  Use double parentheses.  For example:
+ *
+ *		int main _((int argc, char *argv[]));
+ */
+#define	CAN_PROTOTYPE	/**/
+#ifdef CAN_PROTOTYPE
+#define	_(args) args
+#else
+#define	_(args) ()
+#endif
+
+/* RANDBITS:
+ *	This symbol contains the number of bits of random number the rand()
+ *	function produces.  Usual values are 15, 16, and 31.
+ */
+#define RANDBITS 15		/**/
+
+/* Select_fd_set_t:
+ *	This symbol holds the type used for the 2nd, 3rd, and 4th
+ *	arguments to select.  Usually, this is 'fd_set *', if HAS_FD_SET
+ *	is defined, and 'int *' otherwise.  This is only useful if you 
+ *	have select(), of course.
+ */
+#define Select_fd_set_t 	int *	/**/
+
+/* Size_t:
+ *	This symbol holds the type used to declare length parameters
+ *	for string functions.  It is usually size_t, but may be
+ *	unsigned long, int, etc.  It may be necessary to include
+ *	<sys/types.h> to get any typedef'ed information.
+ */
+#define Size_t size_t	 /* length paramater for string functions */
+
+/* SSize_t:
+ *	This symbol holds the type used by functions that return
+ *	a count of bytes or an error condition.  It must be a signed type.
+ *	It is usually ssize_t, but may be long or int, etc.
+ *	It may be necessary to include <sys/types.h> or <unistd.h>
+ *	to get any typedef'ed information.
+ *	We will pick a type such that sizeof(SSize_t) == sizeof(Size_t).
+ */
+#define SSize_t int	 /* signed count of bytes */
+
+/* STDCHAR:
+ *	This symbol is defined to be the type of char used in stdio.h.
+ *	It has the values "unsigned char" or "char".
+ */
+#define STDCHAR unsigned char	/**/
+
+/* Uid_t:
+ *	This symbol holds the type used to declare user ids in the kernel.
+ *	It can be int, ushort, uid_t, etc... It may be necessary to include
+ *	<sys/types.h> to get any typedef'ed information.
+ */
+#define Uid_t uid_t		/* UID type */
+
+/* LOC_SED:
+ *	This symbol holds the complete pathname to the sed program.
+ */
+#define LOC_SED 	""	/**/
+
+/* OSNAME:
+ *	This symbol contains the name of the operating system, as determined
+ *	by Configure.  You shouldn't rely on it too much; the specific
+ *	feature tests from Configure are generally more reliable.
+ */
+#define OSNAME "MSWin32"		/**/
+
+/* ARCHLIB:
+ *	This variable, if defined, holds the name of the directory in
+ *	which the user wants to put architecture-dependent public
+ *	library files for perl5.  It is most often a local directory
+ *	such as /usr/local/lib.  Programs using this variable must be
+ *	prepared to deal with filename expansion.  If ARCHLIB is the
+ *	same as PRIVLIB, it is not defined, since presumably the
+ *	program already searches PRIVLIB.
+ */
+/* ARCHLIB_EXP:
+ *	This symbol contains the ~name expanded version of ARCHLIB, to be used
+ *	in programs that are not prepared to deal with ~ expansion at run-time.
+ */
+#define ARCHLIB "c:\\perl\\lib"		/**/
+#define ARCHLIB_EXP (win32PerlLibPath())	/**/
+
+/* BINCOMPAT3:
+ *	This symbol, if defined, indicates that Perl 5.004 should be
+ *	binary-compatible with Perl 5.003.
+ */
+/*#define BINCOMPAT3			/**/
+
+/* BYTEORDER:
+ *	This symbol holds the hexadecimal constant defined in byteorder,
+ *	i.e. 0x1234 or 0x4321, etc...
+ *	On NeXT 3.2 (and greater), you can build "Fat" Multiple Architecture
+ *	Binaries (MAB) on either big endian or little endian machines.
+ *	The endian-ness is available at compile-time.  This only matters
+ *	for perl, where the config.h can be generated and installed on 
+ *	one system, and used by a different architecture to build an
+ *	extension.  Older versions of NeXT that might not have
+ *	defined either *_ENDIAN__ were all on Motorola 680x0 series,
+ *	so the default case (for NeXT) is big endian to catch them. 
+ *	This might matter for NeXT 3.0.
+ */
+#ifndef NeXT
+#define BYTEORDER 0x1234	/* large digits for MSB */
+#else  /* NeXT */
+#ifdef __LITTLE_ENDIAN__
+#define BYTEORDER 0x1234
+#else /* __BIG_ENDIAN__ */
+#define BYTEORDER 0x4321
+#endif /* ENDIAN CHECK */
+#endif /* NeXT */
+
+/* CSH:
+ *	This symbol, if defined, indicates that the C-shell exists.
+ *	If defined, contains the full pathname of csh.
+ */
+/*#define CSH ""		/**/
+
+/* DLSYM_NEEDS_UNDERSCORE:
+ *	This symbol, if defined, indicates that we need to prepend an
+ *	underscore to the symbol name before calling dlsym().  This only
+ *	makes sense if you *have* dlsym, which we will presume is the
+ *	case if you're using dl_dlopen.xs.
+ */
+/*#define 	DLSYM_NEEDS_UNDERSCORE 	/**/
+
+/* SETUID_SCRIPTS_ARE_SECURE_NOW:
+ *	This symbol, if defined, indicates that the bug that prevents
+ *	setuid scripts from being secure is not present in this kernel.
+ */
+/* DOSUID:
+ *	This symbol, if defined, indicates that the C program should
+ *	check the script that it is executing for setuid/setgid bits, and
+ *	attempt to emulate setuid/setgid on systems that have disabled
+ *	setuid #! scripts because the kernel can't do it securely.
+ *	It is up to the package designer to make sure that this emulation
+ *	is done securely.  Among other things, it should do an fstat on
+ *	the script it just opened to make sure it really is a setuid/setgid
+ *	script, it should make sure the arguments passed correspond exactly
+ *	to the argument on the #! line, and it should not trust any
+ *	subprocesses to which it must pass the filename rather than the
+ *	file descriptor of the script to be executed.
+ */
+/*#define SETUID_SCRIPTS_ARE_SECURE_NOW	/**/
+/*#define DOSUID		/**/
+
+/* Gconvert:
+ *	This preprocessor macro is defined to convert a floating point
+ *	number to a string without a trailing decimal point.  This
+ *	emulates the behavior of sprintf("%g"), but is sometimes much more
+ *	efficient.  If gconvert() is not available, but gcvt() drops the
+ *	trailing decimal point, then gcvt() is used.  If all else fails,
+ *	a macro using sprintf("%g") is used. Arguments for the Gconvert
+ *	macro are: value, number of digits, whether trailing zeros should
+ *	be retained, and the output buffer.
+ *	Possible values are:
+ *		d_Gconvert='gconvert((x),(n),(t),(b))'
+ *		d_Gconvert='gcvt((x),(n),(b))'
+ *		d_Gconvert='sprintf((b),"%.*g",(n),(x))'
+ *	The last two assume trailing zeros should not be kept.
+ */
+#define Gconvert(x,n,t,b) sprintf((b),"%.*g",(n),(x))
+
+/* HAS_GETPGID:
+ *	This symbol, if defined, indicates to the C program that 
+ *	the getpgid(pid) function is available to get the
+ *	process group id.
+ */
+/*#define HAS_GETPGID		/**/
+
+/* HAS_GETPGRP:
+ *	This symbol, if defined, indicates that the getpgrp routine is
+ *	available to get the current process group.
+ */
+/* USE_BSD_GETPGRP:
+ *	This symbol, if defined, indicates that getpgrp needs one
+ *	arguments whereas USG one needs none.
+ */
+/*#define HAS_GETPGRP		/**/
+/*#define USE_BSD_GETPGRP	/**/
+
+/* HAS_INET_ATON:
+ *	This symbol, if defined, indicates to the C program that the
+ *	inet_aton() function is available to parse IP address "dotted-quad"
+ *	strings.
+ */
+/*#define HAS_INET_ATON		/**/
+
+/* HAS_SETPGID:
+ *	This symbol, if defined, indicates to the C program that 
+ *	the setpgid(pid, gpid) function is available to set the
+ *	process group id.
+ */
+/*#define HAS_SETPGID		/**/
+
+/* HAS_SETPGRP:
+ *	This symbol, if defined, indicates that the setpgrp routine is
+ *	available to set the current process group.
+ */
+/* USE_BSD_SETPGRP:
+ *	This symbol, if defined, indicates that setpgrp needs two
+ *	arguments whereas USG one needs none.  See also HAS_SETPGID
+ *	for a POSIX interface.
+ */
+/* USE_BSDPGRP:
+ *	This symbol, if defined, indicates that the BSD notion of process
+ *	group is to be used. For instance, you have to say setpgrp(pid, pgrp)
+ *	instead of the USG setpgrp().  This should be obsolete since
+ *	there are systems which have BSD-ish setpgrp but USG-ish getpgrp.
+ */
+/*#define HAS_SETPGRP		/**/
+/*#define USE_BSD_SETPGRP	/**/
+/*#define USE_BSDPGRP		/**/
+
+/* USE_SFIO:
+ *	This symbol, if defined, indicates that sfio should
+ *	be used.
+ */
+/*#define	USE_SFIO		/**/
+
+/* Sigjmp_buf:
+ *	This is the buffer type to be used with Sigsetjmp and Siglongjmp.
+ */
+/* Sigsetjmp:
+ *	This macro is used in the same way as sigsetjmp(), but will invoke
+ *	traditional setjmp() if sigsetjmp isn't available.
+ *	See HAS_SIGSETJMP.
+ */
+/* Siglongjmp:
+ *	This macro is used in the same way as siglongjmp(), but will invoke
+ *	traditional longjmp() if siglongjmp isn't available.
+ *	See HAS_SIGSETJMP.
+ */
+/*#define HAS_SIGSETJMP	/**/
+#ifdef HAS_SIGSETJMP
+#define Sigjmp_buf sigjmp_buf
+#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))
+#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))
+#else
+#define Sigjmp_buf jmp_buf
+#define Sigsetjmp(buf,save_mask) setjmp((buf))
+#define Siglongjmp(buf,retval) longjmp((buf),(retval))
+#endif
+
+/* USE_DYNAMIC_LOADING:
+ *	This symbol, if defined, indicates that dynamic loading of
+ *	some sort is available.
+ */
+#define USE_DYNAMIC_LOADING		/**/
+
+/* I_DBM:
+ *	This symbol, if defined, indicates that <dbm.h> exists and should
+ *	be included.
+ */
+/* I_RPCSVC_DBM:
+ *	This symbol, if defined, indicates that <rpcsvc/dbm.h> exists and
+ *	should be included.
+ */
+/*#define I_DBM	/**/
+#define I_RPCSVC_DBM	/**/
+
+/* I_LOCALE:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <locale.h>.
+ */
+#define	I_LOCALE		/**/
+
+/* I_SFIO:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sfio.h>.
+ */
+/*#define	I_SFIO		/**/
+
+/* I_SYS_STAT:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <sys/stat.h>.
+ */
+#define	I_SYS_STAT		/**/
+
+/* I_VALUES:
+ *	This symbol, if defined, indicates to the C program that it should
+ *	include <values.h> to get definition of symbols like MINFLOAT or
+ *	MAXLONG, i.e. machine dependant limitations.  Probably, you
+ *	should use <limits.h> instead, if it is available.
+ */
+/*#define I_VALUES		/**/
+
+/* Free_t:
+ *	This variable contains the return type of free().  It is usually
+ * void, but occasionally int.
+ */
+/* Malloc_t:
+ *	This symbol is the type of pointer returned by malloc and realloc.
+ */
+#define Malloc_t void *			/**/
+#define Free_t void			/**/
+
+/* MYMALLOC:
+ *	This symbol, if defined, indicates that we're using our own malloc.
+ */
+/*#define MYMALLOC			/**/
+
+/* OLDARCHLIB:
+ *	This variable, if defined, holds the name of the directory in
+ *	which the user has perl5.000 or perl5.001 architecture-dependent
+ *	public library files for perl5.  For the most part, these
+ *	files will work with 5.002 (and later), but that is not
+ *	guaranteed.
+ */
+/* OLDARCHLIB_EXP:
+ *	This symbol contains the ~name expanded version of OLDARCHLIB, to be
+ *	used in programs that are not prepared to deal with ~ expansion at 
+ *	run-time.
+ */
+/*#define OLDARCHLIB ""		/**/
+/*#define OLDARCHLIB_EXP ""		/**/
+
+/* PRIVLIB:
+ *	This symbol contains the name of the private library for this package.
+ *	The library is private in the sense that it needn't be in anyone's
+ *	execution path, but it should be accessible by the world.  The program
+ *	should be prepared to do ~ expansion.
+ */
+/* PRIVLIB_EXP:
+ *	This symbol contains the ~name expanded version of PRIVLIB, to be used
+ *	in programs that are not prepared to deal with ~ expansion at run-time.
+ */
+#define PRIVLIB "c:\\perl\\lib"		/**/
+#define PRIVLIB_EXP "c:\\perl\\lib"		/**/
+
+/* SH_PATH:
+ *	This symbol contains the full pathname to the shell used on this
+ *	on this system to execute Bourne shell scripts.  Usually, this will be
+ *	/bin/sh, though it's possible that some systems will have /bin/ksh,
+ *	/bin/pdksh, /bin/ash, /bin/bash, or even something such as
+ *	D:/bin/sh.exe.
+ */
+#define SH_PATH "cmd /x /c"  /**/
+
+/* SIG_NAME:
+ *	This symbol contains a list of signal names in order of
+ *	signal number. This is intended
+ *	to be used as a static array initialization, like this:
+ *		char *sig_name[] = { SIG_NAME };
+ *	The signals in the list are separated with commas, and each signal
+ *	is surrounded by double quotes. There is no leading SIG in the signal
+ *	name, i.e. SIGQUIT is known as "QUIT".
+ *	Gaps in the signal numbers (up to NSIG) are filled in with NUMnn,
+ *	etc., where nn is the actual signal number (e.g. NUM37).
+ *	The signal number for sig_name[i] is stored in sig_num[i].
+ *	The last element is 0 to terminate the list with a NULL.  This
+ *	corresponds to the 0 at the end of the sig_num list.
+ */
+/* SIG_NUM:
+ *	This symbol contains a list of signal numbers, in the same order as the
+ *	SIG_NAME list. It is suitable for static array initialization, as in:
+ *		int sig_num[] = { SIG_NUM };
+ *	The signals in the list are separated with commas, and the indices
+ *	within that list and the SIG_NAME list match, so it's easy to compute
+ *	the signal name from a number or vice versa at the price of a small
+ *	dynamic linear lookup. 
+ *	Duplicates are allowed, but are moved to the end of the list.
+ *	The signal number corresponding to sig_name[i] is sig_number[i].
+ *	if (i < NSIG) then sig_number[i] == i.  
+ *	The last element is 0, corresponding to the 0 at the end of
+ *	the sig_name list.
+ */
+#define SIG_NAME "ZERO","HUP","INT","QUIT","ILL","TRAP","ABRT","EMT","FPE","KILL","BUS","SEGV","SYS","PIPE","ALRM","TERM","USR1","USR2","CHLD","PWR","WINCH","URG","IO","STOP","TSTP","CONT","TTIN","TTOU","VTALRM","PROF","XCPU","XFSZ","WAITING","LWP","FREEZE","THAW","RTMIN","NUM37","NUM38","NUM39","NUM40","NUM41","NUM42","RTMAX","IOT","CLD","POLL",0	/**/
+#define SIG_NUM 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,6,18,22,0	/**/
+
+/* SITEARCH:
+ *	This symbol contains the name of the private library for this package.
+ *	The library is private in the sense that it needn't be in anyone's
+ *	execution path, but it should be accessible by the world.  The program
+ *	should be prepared to do ~ expansion.
+ *	The standard distribution will put nothing in this directory.
+ *	Individual sites may place their own extensions and modules in
+ *	this directory.
+ */
+/* SITEARCH_EXP:
+ *	This symbol contains the ~name expanded version of SITEARCH, to be used
+ *	in programs that are not prepared to deal with ~ expansion at run-time.
+ */
+#define SITEARCH "c:\\perl\\lib\\site"		/**/
+#define SITEARCH_EXP "c:\\perl\\lib\\site"		/**/
+
+/* SITELIB:
+ *	This symbol contains the name of the private library for this package.
+ *	The library is private in the sense that it needn't be in anyone's
+ *	execution path, but it should be accessible by the world.  The program
+ *	should be prepared to do ~ expansion.
+ *	The standard distribution will put nothing in this directory.
+ *	Individual sites may place their own extensions and modules in
+ *	this directory.
+ */
+/* SITELIB_EXP:
+ *	This symbol contains the ~name expanded version of SITELIB, to be used
+ *	in programs that are not prepared to deal with ~ expansion at run-time.
+ */
+#define SITELIB "c:\\perl\\lib\\site"		/**/
+#define SITELIB_EXP "c:\\perl\\lib\\site"		/**/
+
+/* STARTPERL:
+ *	This variable contains the string to put in front of a perl
+ *	script to make sure (one hopes) that it runs with perl and not
+ *	some shell.
+ */
+#define STARTPERL "#perl"		/**/
+
+/* USE_PERLIO:
+ *	This symbol, if defined, indicates that the PerlIO abstraction should
+ *	be used throughout.  If not defined, stdio should be
+ *	used in a fully backward compatible manner.
+ */
+/*#define	USE_PERLIO		/**/
+
+/* VOIDFLAGS:
+ *	This symbol indicates how much support of the void type is given by this
+ *	compiler.  What various bits mean:
+ *
+ *	    1 = supports declaration of void
+ *	    2 = supports arrays of pointers to functions returning void
+ *	    4 = supports comparisons between pointers to void functions and
+ *		    addresses of void functions
+ *	    8 = suports declaration of generic void pointers
+ *
+ *	The package designer should define VOIDUSED to indicate the requirements
+ *	of the package.  This can be done either by #defining VOIDUSED before
+ *	including config.h, or by defining defvoidused in Myinit.U.  If the
+ *	latter approach is taken, only those flags will be tested.  If the
+ *	level of void support necessary is not present, defines void to int.
+ */
+#ifndef VOIDUSED
+#define VOIDUSED 15
+#endif
+#define VOIDFLAGS 15
+#if (VOIDFLAGS & VOIDUSED) != VOIDUSED
+#define void int		/* is void to be avoided? */
+#define M_VOID			/* Xenix strikes again */
+#endif
+
+#endif
+#include <win32.h>
+#ifndef DEBUGGING
+#define DEBUGGING
+#endif
--- perl5.004/MANIFEST	Wed May 21 11:19:20 1997
+++ perl5.004-bc/MANIFEST	Wed May 28 01:44:30 1997
@@ -343,6 +343,7 @@
 lib/File/CheckTree.pm	Perl module supporting wholesale file mode validation
 lib/File/Compare.pm	Emulation of cmp command
 lib/File/Copy.pm	Emulation of cp command
+lib/File/DosGlob.pm	Win32 DOS-globbing module
 lib/File/Find.pm	Routines to do a find
 lib/File/Path.pm	Do things like `mkdir -p' and `rm -r'
 lib/File/stat.pm	By-name interface to Perl's builtin stat
@@ -809,7 +810,7 @@
 vms/vms_yfix.pl		convert Unix perly.[ch] to VMS perly_[ch].vms
 vms/vmsish.h		VMS-specific C header for Perl core
 vms/writemain.pl	Generate perlmain.c from miniperlmain.c+extensions
-win32/Makefile		Win32 port
+win32/Makefile		Win32 makefile for NMAKE (Visual C++ build)
 win32/TEST		Win32 port
 win32/autosplit.pl	Win32 port
 win32/bin/network.pl	Win32 port
@@ -818,8 +819,10 @@
 win32/bin/test.bat	Win32 port
 win32/bin/webget.bat	Win32 port
 win32/bin/www.pl	Win32 port
-win32/config.H		Win32 config header (suffix not ".h" for metaconfig)
-win32/config.w32	Win32 base line config.sh 
+win32/config.bc		Win32 base line config.sh (Borland C++ build)
+win32/config.vc		Win32 base line config.sh (Visual C++ build)
+win32/config_H.bc	Win32 config header (Borland C++ build)
+win32/config_H.vc	Win32 config header (Visual C++ build)
 win32/config_h.PL	Perl code to convert Win32 config.sh to config.h
 win32/config_sh.PL	Perl code to update Win32 config.sh from Makefile 
 win32/dl_win32.xs	Win32 port
@@ -829,6 +832,7 @@
 win32/include/netdb.h		Win32 port
 win32/include/sys/socket.h	Win32 port
 win32/makedef.pl	Win32 port
+win32/makefile.mk	Win32 makefile for DMAKE (BC++, VC++ builds)
 win32/makemain.pl	Win32 port
 win32/makeperldef.pl	Win32 port
 win32/perlglob.c	Win32 port
--- perl5.004/win32/Makefile	Wed May 28 02:00:28 1997
+++ perl5.004-bc/win32/Makefile	Wed May 28 01:59:14 1997
@@ -13,10 +13,6 @@
 INST_TOP=$(INST_DRV)\perl
 
 #
-# uncomment next line if you wish perl to run on Windows95 also
-#RUNTIME=-MT
-
-#
 # uncomment next line if you are using Visual C++ 2.x
 #CCTYPE=MSVC20
 
@@ -36,13 +32,12 @@
 #
 # Options
 #
-PERLDLL  = -D "PERLDLL"
 !IF "$(RUNTIME)" == ""
 RUNTIME  = -MD
 !ENDIF
-INCLUDES = -I ".\include" -I "." -I ".."
+INCLUDES = -I.\include -I. -I..
 #PCHFLAGS = -Fp"$(INTDIR)/modules.pch" -YX 
-DEFINES  = -D "WIN32" -D "_CONSOLE" -D "PERLDLL"
+DEFINES  = -DWIN32 -D_CONSOLE -DPERLDLL
 SUBSYS   = console
 LIBFILES = kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib \
 		advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib 
@@ -55,22 +50,23 @@
 
 !IF  "$(CFG)" == "Debug"
 !  IF "$(CCTYPE)" == "MSVC20"
-OPTIMIZE = -Od $(RUNTIME) -Z7 -D "_DEBUG"
+OPTIMIZE = -Od $(RUNTIME) -Z7 -D_DEBUG
 !  ELSE
-OPTIMIZE = -Od $(RUNTIME)d -Z7 -D "_DEBUG"
+OPTIMIZE = -Od $(RUNTIME)d -Z7 -D_DEBUG
 !  ENDIF
 LINK_DBG = -debug -pdb:none
 !ELSE
 !  IF "$(CCTYPE)" == "MSVC20"
-OPTIMIZE = -Od $(RUNTIME) -D "NDEBUG"
+OPTIMIZE = -Od $(RUNTIME) -DNDEBUG
 !  ELSE
-OPTIMIZE = -Od $(RUNTIME) -D "NDEBUG"
+OPTIMIZE = -Od $(RUNTIME) -DNDEBUG
 !  ENDIF
 LINK_DBG = -release
 !ENDIF
 
 CFLAGS   = -nologo -W3 $(INCLUDES) $(DEFINES) $(PCHFLAGS) $(OPTIMIZE)
 LINK_FLAGS  = -nologo $(LIBFILES) $(LINK_DBG) -machine:I386
+OBJOUT_FLAG = -Fo
 
 #################### do not edit below this line #######################
 ############# NO USER-SERVICEABLE PARTS BEYOND THIS POINT ##############
@@ -82,10 +78,11 @@
 .SUFFIXES : .c .obj .dll .lib .exe
 
 .c.obj:
-	$(CC) -c $(CFLAGS) -Fo$@ $<
+	$(CC) -c $(CFLAGS) $(OBJOUT_FLAG)$@ $<
 
 .obj.dll:
-	$(LINK32) -dll -subsystem:windows -implib:$(*B).lib -def:$(*B).def -out:$@ $(LINK_FLAGS) $< $(LIBPERL)  
+	$(LINK32) -dll -subsystem:windows -implib:$(*B).lib -def:$(*B).def \
+	    -out:$@ $(LINK_FLAGS) $< $(LIBPERL)  
 
 #
 INST_BIN=$(INST_TOP)\bin
@@ -108,7 +105,12 @@
 MINIMOD=..\lib\ExtUtils\Miniperl.pm
 
 PL2BAT=bin\PL2BAT.BAT
+GLOBBAT = perlglob.bat
+
 MAKE=nmake -nologo
+CFGSH_TMPL = config.vc
+CFGH_TMPL = config_H.vc
+PERL95EXE=..\perl95.exe
 XCOPY=xcopy /f /r /i /d
 RCOPY=xcopy /f /r /i /e /d
 NULL=
@@ -145,20 +147,20 @@
 	..\universal.c	\
 	..\util.c
 
-CORE_OBJ=..\av.obj		\
+CORE_OBJ= ..\av.obj	\
 	..\deb.obj	\
 	..\doio.obj	\
 	..\doop.obj	\
 	..\dump.obj	\
 	..\globals.obj	\
-	..\gv.obj		\
-	..\hv.obj		\
-	..\mg.obj		\
-	..\op.obj		\
+	..\gv.obj	\
+	..\hv.obj	\
+	..\mg.obj	\
+	..\op.obj	\
 	..\perl.obj	\
 	..\perlio.obj	\
 	..\perly.obj	\
-	..\pp.obj		\
+	..\pp.obj	\
 	..\pp_ctl.obj	\
 	..\pp_hot.obj	\
 	..\pp_sys.obj	\
@@ -166,56 +168,55 @@
 	..\regexec.obj	\
 	..\run.obj	\
 	..\scope.obj	\
-	..\sv.obj		\
+	..\sv.obj	\
 	..\taint.obj	\
 	..\toke.obj	\
-	..\universal.obj	\
+	..\universal.obj\
 	..\util.obj
 
 WIN32_C = perllib.c \
 	win32.c \
 	win32io.c \
-	win32sck.c \
+	win32sck.c
 
 WIN32_OBJ = win32.obj \
 	win32io.obj \
-	win32sck.obj \
+	win32sck.obj
 
 DLL_OBJ = perllib.obj $(DYNALOADER).obj
 
-CORE_H = "..\av.h"\
-	"..\cop.h"\
-	"..\cv.h"\
-	"..\dosish.h"\
-	"..\embed.h"\
-	"..\form.h"\
-	"..\gv.h"\
-	"..\handy.h"\
-	"..\hv.h"\
-	"..\mg.h"\
-	"..\nostdio.h"\
-	"..\op.h"\
-	"..\opcode.h"\
-	"..\perl.h"\
-	"..\perlio.h"\
-	"..\perlsdio.h"\
-	"..\perlsfio.h"\
-	"..\perly.h"\
-	"..\pp.h"\
-	"..\proto.h"\
-	"..\regexp.h"\
-	"..\scope.h"\
-	"..\sv.h"\
-	"..\unixish.h"\
-	"..\util.h"\
-	"..\XSUB.h"\
-	".\config.h"\
-	"..\EXTERN.h"\
-	".\include\dirent.h"\
-	".\include\netdb.h"\
-	".\include\sys\socket.h"\
-	".\win32.h"
-
+CORE_H = ..\av.h	\
+	..\cop.h	\
+	..\cv.h		\
+	..\dosish.h	\
+	..\embed.h	\
+	..\form.h	\
+	..\gv.h		\
+	..\handy.h	\
+	..\hv.h		\
+	..\mg.h		\
+	..\nostdio.h	\
+	..\op.h		\
+	..\opcode.h	\
+	..\perl.h	\
+	..\perlio.h	\
+	..\perlsdio.h	\
+	..\perlsfio.h	\
+	..\perly.h	\
+	..\pp.h		\
+	..\proto.h	\
+	..\regexp.h	\
+	..\scope.h	\
+	..\sv.h		\
+	..\unixish.h	\
+	..\util.h	\
+	..\XSUB.h	\
+	.\config.h	\
+	..\EXTERN.h	\
+	.\include\dirent.h	\
+	.\include\netdb.h	\
+	.\include\sys\socket.h	\
+	.\win32.h
 
 EXTENSIONS=DynaLoader Socket IO Fcntl Opcode SDBM_File
 
@@ -249,7 +250,7 @@
 # Top targets
 #
 
-ALL: $(PERLEXE) $(GLOBEXE) $(DYNALOADMODULES) $(MINIMOD)
+all: $(PERLEXE) $(PERL95EXE) $(GLOBEXE) $(DYNALOADMODULES) $(MINIMOD) $(GLOBBAT)
 
 $(DYNALOADER).obj : $(DYNALOADER).c $(CORE_H) $(EXTDIR)\DynaLoader\dlutils.c
 
@@ -258,13 +259,23 @@
 $(GLOBEXE): perlglob.obj
 	$(LINK32) $(LINK_FLAGS) -out:$@ -subsystem:$(SUBSYS) perlglob.obj setargv.obj 
 
+perlglob.bat : ..\lib\File\DosGlob.pm $(MINIPERL)
+	$(MINIPERL) $(PL2BAT) - < ..\lib\File\DosGlob.pm > $(*B).bat
+
 perlglob.obj  : perlglob.c
 
 ..\miniperlmain.obj : ..\miniperlmain.c $(CORE_H)
 
+config.w32 : $(CFGSH_TMPL)
+	copy $(CFGSH_TMPL) config.w32
+
+.\config.h : $(CFGSH_TMPL)
+	copy $(CFGH_TMPL) config.h
+
 ..\config.sh : config.w32 $(MINIPERL) config_sh.PL
-	$(MINIPERL) -I..\lib config_sh.PL "INST_DRV=$(INST_DRV)" "INST_TOP=$(INST_TOP)"\
-	"cc=$(CC)" "ccflags=$(RUNTIME) -DWIN32" config.w32 > ..\config.sh
+	$(MINIPERL) -I..\lib config_sh.PL "INST_DRV=$(INST_DRV)" \
+	    "INST_TOP=$(INST_TOP)" "cc=$(CC)" "ccflags=$(RUNTIME) -DWIN32" \
+	    config.w32 > ..\config.sh
 
 $(CONFIGPM) : $(MINIPERL) ..\config.sh config_h.PL ..\minimod.pl
 	cd .. && miniperl configpm
@@ -272,7 +283,8 @@
 	$(XCOPY) ..\*.h ..\lib\CORE\*.*
 	$(XCOPY) *.h ..\lib\CORE\*.*
 	$(RCOPY) include ..\lib\CORE\*.*
-	$(MINIPERL) -I..\lib config_h.PL || $(MAKE) CCTYPE=$(CCTYPE) RUNTIME=$(RUNTIME) CFG=$(CFG) $(CONFIGPM)
+	$(MINIPERL) -I..\lib config_h.PL || $(MAKE) CCTYPE=$(CCTYPE) \
+	    RUNTIME=$(RUNTIME) CFG=$(CFG) $(CONFIGPM)
 
 $(MINIPERL) : ..\miniperlmain.obj $(CORE_OBJ) $(WIN32_OBJ)
 	$(LINK32) -subsystem:console -out:$@ @<<
@@ -284,7 +296,7 @@
 $(DLL_OBJ)   : $(CORE_H) 
 
 perldll.def : $(MINIPERL) $(CONFIGPM)
-	$(MINIPERL) -w makedef.pl > perldll.def
+	$(MINIPERL) -w makedef.pl $(CCTYPE) > perldll.def
 
 $(PERLDLL): perldll.def $(CORE_OBJ) $(WIN32_OBJ) $(DLL_OBJ)
 	$(LINK32) -dll -def:perldll.def -out:$@ @<<
@@ -302,10 +314,11 @@
 	copy runperl.c perlmain.c
 
 perlmain.obj : perlmain.c
-	$(CC) $(CFLAGS) -U "PERLDLL" -c perlmain.c
+	$(CC) $(CFLAGS) -UPERLDLL -c perlmain.c
 
 $(PERLEXE): $(PERLDLL) $(CONFIGPM) perlmain.obj  
-	$(LINK32) -subsystem:console -out:perl.exe $(LINK_FLAGS) perlmain.obj $(WINIOMAYBE) $(PERLIMPLIB) 
+	$(LINK32) -subsystem:console -out:perl.exe $(LINK_FLAGS) \
+	    perlmain.obj $(WINIOMAYBE) $(PERLIMPLIB) 
 	copy perl.exe $@
 	del perl.exe
 	copy splittree.pl .. 
@@ -313,6 +326,21 @@
 	attrib -r ..\t\*.*
 	copy test ..\t
 
+perl95.c : runperl.c 
+	copy runperl.c perl95.c
+
+perl95.obj : perl95.c
+	$(CC) $(CFLAGS) -MT -UPERLDLL -c perl95.c
+
+win32iomt.obj : win32io.c
+	$(CC) $(CFLAGS) -MT -c $(OBJOUT_FLAG)win32iomt.obj win32io.c
+
+$(PERL95EXE): $(PERLDLL) $(CONFIGPM) perl95.obj win32iomt.obj
+	$(LINK32) -subsystem:console -out:perl95.exe $(LINK_FLAGS) \
+	    perl95.obj win32iomt.obj $(PERLIMPLIB) 
+	copy perl95.exe $@
+	del perl95.exe
+
 $(DYNALOADER).c: $(MINIPERL) $(EXTDIR)\DynaLoader\dl_win32.xs $(CONFIGPM)
 	if not exist ..\lib\auto md ..\lib\auto
 	$(XCOPY) $(EXTDIR)\$(*B)\$(*B).pm $(LIBDIR)\$(NULL)
@@ -354,9 +382,10 @@
 	cd ..\..\win32
 
 doc: $(PERLEXE)
-	cd $(PODDIR)
-	nmake -f ../win32/pod.mak
-	cd ..\win32
+	copy ..\README.win32 ..\pod\perlwin32.pod
+	$(PERLEXE) ..\installhtml --podroot=.. --htmldir=./html \
+	    --podpath=pod:lib:ext:utils --htmlroot="//$(INST_HTML::=|)" \
+	    --libpod=perlfunc:perlguts:perlvar:perlrun:perlop --recurse
 
 utils: $(PERLEXE)
 	cd ..\utils
@@ -369,7 +398,7 @@
 distclean: clean
 	-del /f $(MINIPERL) $(PERLEXE) $(PERLDLL) $(GLOBEXE) \
 		$(PERLIMPLIB) ..\miniperl.lib $(MINIMOD)
-	-del /f *.def
+	-del /f *.def *.map
 	-del /f $(SOCKET_DLL) $(IO_DLL) $(SDBM_FILE_DLL) $(FCNTL_DLL) \
 		$(OPCODE_DLL)
 	-del /f $(SOCKET).c $(IO).c $(SDBM_FILE).c $(FCNTL).c $(OPCODE).c \
@@ -378,18 +407,23 @@
 	-del /f $(PODDIR)\*.bat
 	-rmdir /s /q ..\lib\auto
 	-rmdir /s /q ..\lib\CORE
+	cd $(EXTDIR)
+	-del /s *.lib *.def *.map *.bs Makefile *.obj pm_to_blib
+	cd ..\win32
 
-install : ALL doc utils
+install : all doc utils
 	if not exist $(INST_TOP) mkdir $(INST_TOP)
 	echo I $(INST_TOP) L $(LIBDIR)
 	$(XCOPY) $(PERLEXE) $(INST_BIN)\*.*
+	$(XCOPY) $(PERL95EXE) $(INST_BIN)\*.*
 	$(XCOPY) $(GLOBEXE) $(INST_BIN)\*.*
+	$(XCOPY) $(GLOBBAT) $(INST_BIN)\*.*
 	$(XCOPY) $(PERLDLL) $(INST_BIN)\*.*
 	$(XCOPY) bin\*.* $(INST_BIN)\*.*
 	$(RCOPY) ..\lib $(INST_LIB)\*.*
 	$(XCOPY) ..\pod\*.bat $(INST_BIN)\*.*
 	$(XCOPY) ..\pod\*.pod $(INST_POD)\*.*
-	$(XCOPY) ..\pod\*.html $(INST_HTML)\*.*
+	$(RCOPY) html\*.* $(INST_HTML)\*.*
 
 inst_lib : $(CONFIGPM)
 	copy splittree.pl .. 
@@ -418,6 +452,8 @@
 	-@erase $(MINIPERL)
 	-@erase perlglob.obj
 	-@erase perlmain.obj
+	-@erase config.w32
+	-@erase config.h
 	-@erase $(GLOBEXE)
 	-@erase $(PERLEXE)
 	-@erase $(PERLDLL)
--- /dev/null	Tue May 27 15:27:30 1997
+++ perl5.004-bc/win32/makefile.mk	Wed May 28 01:56:54 1997
@@ -0,0 +1,571 @@
+#
+# Makefile to build perl on Windowns NT using Microsoft NMAKE.
+#
+#
+# This is set up to build a perl.exe that runs off a shared library
+# (perl.dll).  Also makes individual DLLs for the XS extensions.
+#
+
+#
+# Set these to wherever you want "nmake install" to put your
+# newly built perl.
+INST_DRV=c:
+INST_TOP=$(INST_DRV)\perl
+
+#
+# uncomment one if you are using Visual C++ 2.x or Borland
+# comment out both if you are using Visual C++ 4.x and above
+#CCTYPE=MSVC20
+CCTYPE=BORLAND
+
+#
+# uncomment next line if you want debug version of perl (big,slow)
+#CFG=Debug
+
+#
+# set the install location of the compiler
+# (should only be needed when using Borland)
+CCHOME = D:\bc5
+
+#
+# set this to point to cmd.exe (only needed if you use some
+# alternate shell that doesn't grok cmd.exe style commands)
+SHELL = g:\winnt\system32\cmd.exe
+
+##################### CHANGE THESE ONLY IF YOU MUST #####################
+
+#
+# Programs to compile, build .lib files and link
+#
+
+.USESHELL :
+
+.IF "$(CCTYPE)" == "BORLAND"
+
+CC = bcc32
+LINK32 = tlink32
+LIB32 = tlib
+IMPLIB = implib
+CCINCDIR = $(CCHOME)\include
+CCLIBDIR = $(CCHOME)\lib
+
+#
+# Options
+#
+RUNTIME  = -D_RTLDLL
+INCLUDES = -I.\include -I. -I.. -I$(CCINCDIR)
+#PCHFLAGS = -H -H$(INTDIR)\bcmoduls.pch 
+DEFINES  = -DWIN32 -DPERLDLL
+SUBSYS   = console
+LIBFILES = import32.lib cw32mti.lib
+
+WINIOMAYBE =
+
+.IF  "$(CFG)" == "Debug"
+OPTIMIZE = -v $(RUNTIME)
+LINK_DBG = -v
+.ELSE
+OPTIMIZE = -O $(RUNTIME)
+LINK_DBG = 
+.ENDIF
+
+CFLAGS   = -w -tWM -tWD $(INCLUDES) $(DEFINES) $(PCHFLAGS) $(OPTIMIZE)
+LINK_FLAGS  = $(LINK_DBG) -L$(CCLIBDIR)
+OBJOUT_FLAG = -o
+
+.ELSE
+
+CC=cl.exe
+LINK32=link.exe
+LIB32=$(LINK32) -lib
+#
+# Options
+#
+.IF "$(RUNTIME)" == ""
+RUNTIME  = -MD
+.ENDIF
+INCLUDES = -I.\include -I. -I..
+#PCHFLAGS = -Fp$(INTDIR)\vcmoduls.pch -YX 
+DEFINES  = -DWIN32 -D_CONSOLE -DPERLDLL
+SUBSYS   = console
+LIBFILES = kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib \
+		advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib 
+
+.IF "$(RUNTIME)" == "-MD"
+WINIOMAYBE =
+.ELSE
+WINIOMAYBE = win32io.obj
+.ENDIF
+
+.IF  "$(CFG)" == "Debug"
+.IF "$(CCTYPE)" == "MSVC20"
+OPTIMIZE = -Od $(RUNTIME) -Z7 -D_DEBUG
+.ELSE
+OPTIMIZE = -Od $(RUNTIME)d -Z7 -D_DEBUG
+.ENDIF
+LINK_DBG = -debug -pdb:none
+.ELSE
+.IF "$(CCTYPE)" == "MSVC20"
+OPTIMIZE = -Od $(RUNTIME) -DNDEBUG
+.ELSE
+OPTIMIZE = -Od $(RUNTIME) -DNDEBUG
+.ENDIF
+LINK_DBG = -release
+.ENDIF
+
+CFLAGS   = -nologo -W3 $(INCLUDES) $(DEFINES) $(PCHFLAGS) $(OPTIMIZE)
+LINK_FLAGS  = -nologo $(LIBFILES) $(LINK_DBG) -machine:I386
+OBJOUT_FLAG = -Fo
+
+.ENDIF
+
+#################### do not edit below this line #######################
+############# NO USER-SERVICEABLE PARTS BEYOND THIS POINT ##############
+
+#
+# Rules
+# 
+.SUFFIXES : 
+.SUFFIXES : .c .obj .dll .lib .exe
+
+.c.obj:
+	$(CC) -c $(CFLAGS) $(OBJOUT_FLAG)$@ $<
+
+.IF "$(CCTYPE)" == "BORLAND"
+
+.obj.dll:
+	$(LINK32) -Tpd -ap $(LINK_FLAGS) c0d32.obj $<,$@,,$(LIBFILES),$(*B).def
+	$(IMPLIB) $(*B).lib $@
+.ELSE
+
+.obj.dll:
+	$(LINK32) -dll -subsystem:windows -implib:$(*B).lib -def:$(*B).def \
+	    -out:$@ $(LINK_FLAGS) $< $(LIBPERL)  
+
+.ENDIF
+
+#
+INST_BIN=$(INST_TOP)\bin
+INST_LIB=$(INST_TOP)\lib
+INST_POD=$(INST_LIB)\pod
+INST_HTML=$(INST_POD)\html
+LIBDIR=..\lib
+EXTDIR=..\ext
+PODDIR=..\pod
+EXTUTILSDIR=$(LIBDIR)\extutils
+
+#
+# various targets
+PERLIMPLIB=..\perl.lib
+MINIPERL=..\miniperl.exe
+PERLDLL=..\perl.dll
+PERLEXE=..\perl.exe
+GLOBEXE=..\perlglob.exe
+CONFIGPM=..\lib\Config.pm
+MINIMOD=..\lib\ExtUtils\Miniperl.pm
+
+PL2BAT=bin\PL2BAT.BAT
+GLOBBAT = perlglob.bat
+
+.IF "$(CCTYPE)" == "BORLAND"
+
+# Borland wildargs is incompatible with MS setargv
+CFGSH_TMPL = config.bc
+CFGH_TMPL = config_H.bc
+# Borland's perl.exe will work on W95, so we don't make this
+
+.ELSE
+
+MAKE = nmake -nologo
+CFGSH_TMPL = config.vc
+CFGH_TMPL = config_H.vc
+PERL95EXE=..\perl95.exe
+
+.ENDIF
+
+XCOPY=xcopy /f /r /i /d
+RCOPY=xcopy /f /r /i /e /d
+#NULL=
+
+#
+# filenames given to xsubpp must have forward slashes (since it puts
+# full pathnames in #line strings)
+XSUBPP=..\$(MINIPERL) -I..\..\lib ..\$(EXTUTILSDIR)\xsubpp -C++ -prototypes
+
+CORE_C=	..\av.c		\
+	..\deb.c	\
+	..\doio.c	\
+	..\doop.c	\
+	..\dump.c	\
+	..\globals.c	\
+	..\gv.c		\
+	..\hv.c		\
+	..\mg.c		\
+	..\op.c		\
+	..\perl.c	\
+	..\perlio.c	\
+	..\perly.c	\
+	..\pp.c		\
+	..\pp_ctl.c	\
+	..\pp_hot.c	\
+	..\pp_sys.c	\
+	..\regcomp.c	\
+	..\regexec.c	\
+	..\run.c	\
+	..\scope.c	\
+	..\sv.c		\
+	..\taint.c	\
+	..\toke.c	\
+	..\universal.c	\
+	..\util.c
+
+CORE_OBJ= ..\av.obj	\
+	..\deb.obj	\
+	..\doio.obj	\
+	..\doop.obj	\
+	..\dump.obj	\
+	..\globals.obj	\
+	..\gv.obj	\
+	..\hv.obj	\
+	..\mg.obj	\
+	..\op.obj	\
+	..\perl.obj	\
+	..\perlio.obj	\
+	..\perly.obj	\
+	..\pp.obj	\
+	..\pp_ctl.obj	\
+	..\pp_hot.obj	\
+	..\pp_sys.obj	\
+	..\regcomp.obj	\
+	..\regexec.obj	\
+	..\run.obj	\
+	..\scope.obj	\
+	..\sv.obj	\
+	..\taint.obj	\
+	..\toke.obj	\
+	..\universal.obj\
+	..\util.obj
+
+WIN32_C = perllib.c \
+	win32.c \
+	win32io.c \
+	win32sck.c
+
+WIN32_OBJ = win32.obj \
+	win32io.obj \
+	win32sck.obj
+
+DLL_OBJ = perllib.obj $(DYNALOADER).obj
+
+CORE_H = ..\av.h	\
+	..\cop.h	\
+	..\cv.h		\
+	..\dosish.h	\
+	..\embed.h	\
+	..\form.h	\
+	..\gv.h		\
+	..\handy.h	\
+	..\hv.h		\
+	..\mg.h		\
+	..\nostdio.h	\
+	..\op.h		\
+	..\opcode.h	\
+	..\perl.h	\
+	..\perlio.h	\
+	..\perlsdio.h	\
+	..\perlsfio.h	\
+	..\perly.h	\
+	..\pp.h		\
+	..\proto.h	\
+	..\regexp.h	\
+	..\scope.h	\
+	..\sv.h		\
+	..\unixish.h	\
+	..\util.h	\
+	..\XSUB.h	\
+	.\config.h	\
+	..\EXTERN.h	\
+	.\include\dirent.h	\
+	.\include\netdb.h	\
+	.\include\sys\socket.h	\
+	.\win32.h
+
+
+EXTENSIONS=DynaLoader Socket IO Fcntl Opcode SDBM_File
+
+DYNALOADER=$(EXTDIR)\DynaLoader\DynaLoader
+SOCKET=$(EXTDIR)\Socket\Socket
+FCNTL=$(EXTDIR)\Fcntl\Fcntl
+OPCODE=$(EXTDIR)\Opcode\Opcode
+SDBM_FILE=$(EXTDIR)\SDBM_File\SDBM_File
+IO=$(EXTDIR)\IO\IO
+
+SOCKET_DLL=..\lib\auto\Socket\Socket.dll
+FCNTL_DLL=..\lib\auto\Fcntl\Fcntl.dll
+OPCODE_DLL=..\lib\auto\Opcode\Opcode.dll
+SDBM_FILE_DLL=..\lib\auto\SDBM_File\SDBM_File.dll
+IO_DLL=..\lib\auto\IO\IO.dll
+
+STATICLINKMODULES=DynaLoader
+DYNALOADMODULES=	\
+	$(SOCKET_DLL)	\
+	$(FCNTL_DLL)	\
+	$(OPCODE_DLL)	\
+	$(SDBM_FILE_DLL)\
+	$(IO_DLL)
+
+POD2HTML=$(PODDIR)\pod2html
+POD2MAN=$(PODDIR)\pod2man
+POD2LATEX=$(PODDIR)\pod2latex
+POD2TEXT=$(PODDIR)\pod2text
+
+#
+# Top targets
+#
+
+all: $(PERLEXE) $(PERL95EXE) $(GLOBEXE) $(DYNALOADMODULES) $(MINIMOD) $(GLOBBAT)
+
+$(DYNALOADER).obj : $(DYNALOADER).c $(CORE_H) $(EXTDIR)\DynaLoader\dlutils.c
+
+#------------------------------------------------------------
+
+$(GLOBEXE): perlglob.obj
+.IF "$(CCTYPE)" == "BORLAND"
+	$(CC) -c -w -v -tWM -I$(CCINCDIR) perlglob.c
+	$(LINK32) -Tpe -ap $(LINK_FLAGS) c0x32.obj perlglob.obj \
+	    $(CCLIBDIR)\32BIT\wildargs.obj,$@,,import32.lib cw32mt.lib,
+.ELSE
+	$(LINK32) $(LINK_FLAGS) -out:$@ -subsystem:$(SUBSYS) perlglob.obj setargv.obj 
+.ENDIF
+
+perlglob.bat : ..\lib\File\DosGlob.pm $(MINIPERL)
+	$(MINIPERL) $(PL2BAT) - < ..\lib\File\DosGlob.pm > $(*B).bat
+
+perlglob.obj  : perlglob.c
+
+..\miniperlmain.obj : ..\miniperlmain.c $(CORE_H)
+
+config.w32 : $(CFGSH_TMPL)
+	copy $(CFGSH_TMPL) config.w32
+
+.\config.h : $(CFGSH_TMPL)
+	copy $(CFGH_TMPL) config.h
+
+..\config.sh : config.w32 $(MINIPERL) config_sh.PL
+	$(MINIPERL) -I..\lib config_sh.PL "INST_DRV=$(INST_DRV)" \
+	    "INST_TOP=$(INST_TOP)" "cc=$(CC)" "ccflags=$(RUNTIME) -DWIN32" \
+	    config.w32 > ..\config.sh
+
+$(CONFIGPM) : $(MINIPERL) ..\config.sh config_h.PL ..\minimod.pl
+	cd .. && miniperl configpm
+	if exist lib\* $(RCOPY) lib\*.* ..\lib\$(NULL)
+	$(XCOPY) ..\*.h ..\lib\CORE\*.*
+	$(XCOPY) *.h ..\lib\CORE\*.*
+	$(RCOPY) include ..\lib\CORE\*.*
+	$(MINIPERL) -I..\lib config_h.PL || $(MAKE) CCTYPE=$(CCTYPE) \
+	    RUNTIME=$(RUNTIME) CFG=$(CFG) $(CONFIGPM)
+
+$(MINIPERL) : ..\miniperlmain.obj $(CORE_OBJ) $(WIN32_OBJ)
+.IF "$(CCTYPE)" == "BORLAND"
+	$(LINK32) -Tpe -ap $(LINK_FLAGS) \
+	    @$(mktmp c0x32.obj ..\miniperlmain.obj \
+		$(CORE_OBJ:s,\,\\) $(WIN32_OBJ:s,\,\\),$@,,$(LIBFILES),)
+.ELSE
+	$(LINK32) -subsystem:console -out:$@ \
+	    @$(mktmp $(LINK_FLAGS) ..\miniperlmain.obj \
+		$(CORE_OBJ:s,\,\\) $(WIN32_OBJ:s,\,\\))
+.ENDIF
+
+$(WIN32_OBJ) : $(CORE_H)
+$(CORE_OBJ)  : $(CORE_H)
+$(DLL_OBJ)   : $(CORE_H) 
+
+perldll.def : $(MINIPERL) $(CONFIGPM)
+	$(MINIPERL) -w makedef.pl $(CCTYPE) > perldll.def
+
+$(PERLDLL): perldll.def $(CORE_OBJ) $(WIN32_OBJ) $(DLL_OBJ)
+.IF "$(CCTYPE)" == "BORLAND"
+	$(LINK32) -Tpd -ap $(LINK_FLAGS) \
+	    @$(mktmp c0d32.obj $(CORE_OBJ:s,\,\\) \
+		$(WIN32_OBJ:s,\,\\) $(DLL_OBJ:s,\,\\)\n \
+		$@,\n \
+		$(LIBFILES)\n \
+		perldll.def\n)
+	$(IMPLIB) $*.lib $@
+.ELSE
+	$(LINK32) -dll -def:perldll.def -out:$@ \
+	    @$(mktmp $(LINK_FLAGS) $(CORE_OBJ:s,\,\\) \
+		$(WIN32_OBJ:s,\,\\) $(DLL_OBJ:s,\,\\))
+.ENDIF
+	$(XCOPY) $(PERLIMPLIB) ..\lib\CORE
+
+perl.def  : $(MINIPERL) makeperldef.pl
+	$(MINIPERL) -I..\lib makeperldef.pl $(NULL) > perl.def
+
+$(MINIMOD) : $(MINIPERL) ..\minimod.pl
+	cd .. && miniperl minimod.pl > lib\ExtUtils\Miniperl.pm
+
+perlmain.c : runperl.c 
+	copy runperl.c perlmain.c
+
+perlmain.obj : perlmain.c
+	$(CC) $(CFLAGS) -UPERLDLL -c perlmain.c
+
+
+$(PERLEXE): $(PERLDLL) $(CONFIGPM) perlmain.obj  
+.IF "$(CCTYPE)" == "BORLAND"
+	$(LINK32) -Tpe -ap $(LINK_FLAGS) \
+	    @$(mktmp c0x32.obj perlmain.obj $(WINIOMAYBE)\n \
+	    $@,\n \
+	    $(PERLIMPLIB) $(LIBFILES)\n)
+.ELSE
+	$(LINK32) -subsystem:console -out:perl.exe $(LINK_FLAGS) \
+	    perlmain.obj $(WINIOMAYBE) $(PERLIMPLIB) 
+	copy perl.exe $@
+	del perl.exe
+.ENDIF
+	copy splittree.pl .. 
+	$(MINIPERL) -I..\lib ..\splittree.pl "../LIB" "../LIB/auto"
+	attrib -r ..\t\*.*
+	copy test ..\t
+
+.IF "$(CCTYPE)" != "BORLAND"
+
+perl95.c : runperl.c 
+	copy runperl.c perl95.c
+
+perl95.obj : perl95.c
+	$(CC) $(CFLAGS) -MT -UPERLDLL -c perl95.c
+
+win32iomt.obj : win32io.c
+	$(CC) $(CFLAGS) -MT -c $(OBJOUT_FLAG)win32iomt.obj win32io.c
+
+$(PERL95EXE): $(PERLDLL) $(CONFIGPM) perl95.obj win32iomt.obj
+	$(LINK32) -subsystem:console -out:perl95.exe $(LINK_FLAGS) \
+	    perl95.obj win32iomt.obj $(PERLIMPLIB) 
+	copy perl95.exe $@
+	del perl95.exe
+
+.ENDIF
+
+$(DYNALOADER).c: $(MINIPERL) $(EXTDIR)\DynaLoader\dl_win32.xs $(CONFIGPM)
+	if not exist ..\lib\auto mkdir ..\lib\auto
+	$(XCOPY) $(EXTDIR)\$(*B)\$(*B).pm $(LIBDIR)\$(NULL)
+	cd $(EXTDIR)\$(*B) && $(XSUBPP) dl_win32.xs > $(*B).c
+	$(XCOPY) $(EXTDIR)\$(*B)\dlutils.c .
+
+$(EXTDIR)\DynaLoader\dl_win32.xs: dl_win32.xs
+	copy dl_win32.xs $(EXTDIR)\DynaLoader\dl_win32.xs
+
+$(IO_DLL): $(PERLEXE) $(CONFIGPM) $(IO).xs
+	cd $(EXTDIR)\$(*B) && \
+	..\..\miniperl -I..\..\lib Makefile.PL INSTALLDIRS=perl
+	cd $(EXTDIR)\$(*B) && $(MAKE)
+
+$(SDBM_FILE_DLL) : $(PERLEXE) $(SDBM_FILE).xs
+	cd $(EXTDIR)\$(*B) && \
+	..\..\miniperl -I..\..\lib Makefile.PL INSTALLDIRS=perl
+	cd $(EXTDIR)\$(*B) && $(MAKE)
+
+$(FCNTL_DLL): $(PERLEXE) $(FCNTL).xs
+	cd $(EXTDIR)\$(*B) && \
+	..\..\miniperl -I..\..\lib Makefile.PL INSTALLDIRS=perl
+	cd $(EXTDIR)\$(*B) && $(MAKE)
+
+$(OPCODE_DLL): $(PERLEXE) $(OPCODE).xs
+	cd $(EXTDIR)\$(*B) && \
+	..\..\miniperl -I..\..\lib Makefile.PL INSTALLDIRS=perl
+	cd $(EXTDIR)\$(*B) && $(MAKE)
+
+$(SOCKET_DLL): $(SOCKET).xs $(PERLEXE)
+	cd $(EXTDIR)\$(*B) && \
+	..\..\miniperl -I..\..\lib Makefile.PL INSTALLDIRS=perl
+	cd $(EXTDIR)\$(*B) && $(MAKE)
+
+doc: $(PERLEXE)
+	copy ..\README.win32 ..\pod\perlwin32.pod
+	$(PERLEXE) ..\installhtml --podroot=.. --htmldir=./html \
+	    --podpath=pod:lib:ext:utils --htmlroot="//$(INST_HTML:s,:,|,)" \
+	    --libpod=perlfunc:perlguts:perlvar:perlrun:perlop --recurse
+
+utils: $(PERLEXE)
+	cd ..\utils && $(MAKE) PERL=$(MINIPERL)
+	cd ..\utils && $(PERLEXE) ..\win32\$(PL2BAT) h2ph splain perlbug \
+		pl2pm c2ph h2xs perldoc pstruct
+	cd ..\utils && $(XCOPY) *.bat ..\win32\bin\*.*
+
+distclean: clean
+	-del /f $(MINIPERL) $(PERLEXE) $(PERLDLL) $(GLOBEXE) \
+		$(PERLIMPLIB) ..\miniperl.lib $(MINIMOD)
+	-del /f *.def *.map
+	-del /f $(SOCKET_DLL) $(IO_DLL) $(SDBM_FILE_DLL) $(FCNTL_DLL) \
+		$(OPCODE_DLL)
+	-del /f $(SOCKET).c $(IO).c $(SDBM_FILE).c $(FCNTL).c $(OPCODE).c \
+		$(DYNALOADER).c
+	-del /f $(PODDIR)\*.html
+	-del /f $(PODDIR)\*.bat
+	-cd $(EXTDIR) && del /s *.lib *.def *.map *.bs Makefile *.obj pm_to_blib
+	-rmdir /s /q ..\lib\auto
+	-rmdir /s /q ..\lib\CORE
+
+install : all doc utils
+	if not exist $(INST_TOP) mkdir $(INST_TOP)
+	echo I $(INST_TOP) L $(LIBDIR)
+	$(XCOPY) $(PERLEXE) $(INST_BIN)\*.*
+.IF "$(PERL95EXE)" != ""
+	$(XCOPY) $(PERL95EXE) $(INST_BIN)\*.*
+.ENDIF
+	$(XCOPY) $(GLOBEXE) $(INST_BIN)\*.*
+	$(XCOPY) $(GLOBBAT) $(INST_BIN)\*.*
+	$(XCOPY) $(PERLDLL) $(INST_BIN)\*.*
+	$(XCOPY) bin\*.* $(INST_BIN)\*.*
+	$(RCOPY) ..\lib $(INST_LIB)\*.*
+	$(XCOPY) ..\pod\*.bat $(INST_BIN)\*.*
+	$(XCOPY) ..\pod\*.pod $(INST_POD)\*.*
+	$(RCOPY) html\*.* $(INST_HTML)\*.*
+
+inst_lib : $(CONFIGPM)
+	copy splittree.pl .. 
+	$(MINIPERL) -I..\lib ..\splittree.pl "../LIB" "../LIB/auto"
+	$(RCOPY) ..\lib $(INST_LIB)\*.*
+
+minitest : $(MINIPERL) $(GLOBEXE) $(CONFIGPM)
+	$(XCOPY) $(MINIPERL) ..\t\perl.exe
+.IF "$(CCTYPE)" == "BORLAND"
+	$(XCOPY) $(GLOBBAT) ..\t\$(NULL)
+.ELSE
+	$(XCOPY) $(GLOBEXE) ..\t\$(NULL)
+.ENDIF
+	attrib -r ..\t\*.*
+	copy test ..\t
+	cd ..\t && \
+	$(MINIPERL) -I..\lib test base/*.t comp/*.t cmd/*.t io/*.t op/*.t pragma/*.t
+
+test : all
+	$(XCOPY) $(PERLEXE) ..\t\$(NULL)
+	$(XCOPY) $(PERLDLL) ..\t\$(NULL)
+.IF "$(CCTYPE)" == "BORLAND"
+	$(XCOPY) $(GLOBBAT) ..\t\$(NULL)
+.ELSE
+	$(XCOPY) $(GLOBEXE) ..\t\$(NULL)
+.ENDIF
+	cd ..\t && $(PERLEXE) -I..\lib harness
+
+clean : 
+	-@erase miniperlmain.obj
+	-@erase $(MINIPERL)
+	-@erase perlglob.obj
+	-@erase perlmain.obj
+	-@erase config.w32
+	-@erase config.h
+	-@erase $(GLOBEXE)
+	-@erase $(PERLEXE)
+	-@erase $(PERLDLL)
+	-@erase $(CORE_OBJ)
+	-@erase $(WIN32_OBJ)
+	-@erase $(DLL_OBJ)
+	-@erase ..\*.obj *.obj ..\*.lib ..\*.exp
+	-@erase *.ilk
+	-@erase *.pdb
+
+
__END_OF_PATCH__

